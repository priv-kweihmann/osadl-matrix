# SPDX-FileCopyrightText: 2022 Konrad Weihmann
# SPDX-License-Identifier: Unlicensed

import pytest
import osadl_matrix

class TestSnapshot():

    def test_0BSD_0BSD(self):        
        assert osadl_matrix.get_compatibility("0BSD", "0BSD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_0BSD_AFL_2_0(self):        
        assert osadl_matrix.get_compatibility("0BSD", "AFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_0BSD_AFL_2_1(self):        
        assert osadl_matrix.get_compatibility("0BSD", "AFL-2.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_0BSD_AFL_3_0(self):        
        assert osadl_matrix.get_compatibility("0BSD", "AFL-3.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_0BSD_AGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("0BSD", "AGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_0BSD_AGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("0BSD", "AGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_0BSD_Apache_1_0(self):        
        assert osadl_matrix.get_compatibility("0BSD", "Apache-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_0BSD_Apache_1_1(self):        
        assert osadl_matrix.get_compatibility("0BSD", "Apache-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_0BSD_Apache_2_0(self):        
        assert osadl_matrix.get_compatibility("0BSD", "Apache-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_0BSD_Artistic_1_0(self):        
        assert osadl_matrix.get_compatibility("0BSD", "Artistic-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_0BSD_Artistic_1_0_Perl(self):        
        assert osadl_matrix.get_compatibility("0BSD", "Artistic-1.0-Perl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_0BSD_Artistic_2_0(self):        
        assert osadl_matrix.get_compatibility("0BSD", "Artistic-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_0BSD_BSD_1_Clause(self):        
        assert osadl_matrix.get_compatibility("0BSD", "BSD-1-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_0BSD_BSD_2_Clause(self):        
        assert osadl_matrix.get_compatibility("0BSD", "BSD-2-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_0BSD_BSD_2_Clause_Patent(self):        
        assert osadl_matrix.get_compatibility("0BSD", "BSD-2-Clause-Patent") == osadl_matrix.OSADLCompatibility.YES
    

    def test_0BSD_BSD_3_Clause(self):        
        assert osadl_matrix.get_compatibility("0BSD", "BSD-3-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_0BSD_BSD_4_Clause(self):        
        assert osadl_matrix.get_compatibility("0BSD", "BSD-4-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_0BSD_BSD_4_Clause_UC(self):        
        assert osadl_matrix.get_compatibility("0BSD", "BSD-4-Clause-UC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_0BSD_BSD_Source_Code(self):        
        assert osadl_matrix.get_compatibility("0BSD", "BSD-Source-Code") == osadl_matrix.OSADLCompatibility.YES
    

    def test_0BSD_BSL_1_0(self):        
        assert osadl_matrix.get_compatibility("0BSD", "BSL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_0BSD_CC0_1_0(self):        
        assert osadl_matrix.get_compatibility("0BSD", "CC0-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_0BSD_CDDL_1_0(self):        
        assert osadl_matrix.get_compatibility("0BSD", "CDDL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_0BSD_CDDL_1_1(self):        
        assert osadl_matrix.get_compatibility("0BSD", "CDDL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_0BSD_CPL_1_0(self):        
        assert osadl_matrix.get_compatibility("0BSD", "CPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_0BSD_EFL_2_0(self):        
        assert osadl_matrix.get_compatibility("0BSD", "EFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_0BSD_EPL_1_0(self):        
        assert osadl_matrix.get_compatibility("0BSD", "EPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_0BSD_EPL_2_0(self):        
        assert osadl_matrix.get_compatibility("0BSD", "EPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_0BSD_EUPL_1_1(self):        
        assert osadl_matrix.get_compatibility("0BSD", "EUPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_0BSD_EUPL_1_2(self):        
        assert osadl_matrix.get_compatibility("0BSD", "EUPL-1.2") == osadl_matrix.OSADLCompatibility.NO
    

    def test_0BSD_FSFAP(self):        
        assert osadl_matrix.get_compatibility("0BSD", "FSFAP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_0BSD_FSFULLR(self):        
        assert osadl_matrix.get_compatibility("0BSD", "FSFULLR") == osadl_matrix.OSADLCompatibility.YES
    

    def test_0BSD_FTL(self):        
        assert osadl_matrix.get_compatibility("0BSD", "FTL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_0BSD_GPL_1_0_only(self):        
        assert osadl_matrix.get_compatibility("0BSD", "GPL-1.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_0BSD_GPL_1_0_or_later(self):        
        assert osadl_matrix.get_compatibility("0BSD", "GPL-1.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_0BSD_GPL_2_0_only(self):        
        assert osadl_matrix.get_compatibility("0BSD", "GPL-2.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_0BSD_GPL_2_0_only_WITH_Classpath_exception_2_0(self):        
        assert osadl_matrix.get_compatibility("0BSD", "GPL-2.0-only WITH Classpath-exception-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_0BSD_GPL_2_0_or_later(self):        
        assert osadl_matrix.get_compatibility("0BSD", "GPL-2.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_0BSD_GPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("0BSD", "GPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_0BSD_GPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("0BSD", "GPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_0BSD_HPND(self):        
        assert osadl_matrix.get_compatibility("0BSD", "HPND") == osadl_matrix.OSADLCompatibility.YES
    

    def test_0BSD_IBM_pibs(self):        
        assert osadl_matrix.get_compatibility("0BSD", "IBM-pibs") == osadl_matrix.OSADLCompatibility.YES
    

    def test_0BSD_ICU(self):        
        assert osadl_matrix.get_compatibility("0BSD", "ICU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_0BSD_IJG(self):        
        assert osadl_matrix.get_compatibility("0BSD", "IJG") == osadl_matrix.OSADLCompatibility.YES
    

    def test_0BSD_IPL_1_0(self):        
        assert osadl_matrix.get_compatibility("0BSD", "IPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_0BSD_ISC(self):        
        assert osadl_matrix.get_compatibility("0BSD", "ISC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_0BSD_Info_ZIP(self):        
        assert osadl_matrix.get_compatibility("0BSD", "Info-ZIP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_0BSD_LGPL_2_1_only(self):        
        assert osadl_matrix.get_compatibility("0BSD", "LGPL-2.1-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_0BSD_LGPL_2_1_or_later(self):        
        assert osadl_matrix.get_compatibility("0BSD", "LGPL-2.1-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_0BSD_LGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("0BSD", "LGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_0BSD_LGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("0BSD", "LGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_0BSD_Libpng(self):        
        assert osadl_matrix.get_compatibility("0BSD", "Libpng") == osadl_matrix.OSADLCompatibility.YES
    

    def test_0BSD_MIT(self):        
        assert osadl_matrix.get_compatibility("0BSD", "MIT") == osadl_matrix.OSADLCompatibility.YES
    

    def test_0BSD_MIT_CMU(self):        
        assert osadl_matrix.get_compatibility("0BSD", "MIT-CMU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_0BSD_MPL_1_1(self):        
        assert osadl_matrix.get_compatibility("0BSD", "MPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_0BSD_MPL_2_0(self):        
        assert osadl_matrix.get_compatibility("0BSD", "MPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_0BSD_MPL_2_0_no_copyleft_exception(self):        
        assert osadl_matrix.get_compatibility("0BSD", "MPL-2.0-no-copyleft-exception") == osadl_matrix.OSADLCompatibility.NO
    

    def test_0BSD_MS_PL(self):        
        assert osadl_matrix.get_compatibility("0BSD", "MS-PL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_0BSD_MS_RL(self):        
        assert osadl_matrix.get_compatibility("0BSD", "MS-RL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_0BSD_MirOS(self):        
        assert osadl_matrix.get_compatibility("0BSD", "MirOS") == osadl_matrix.OSADLCompatibility.YES
    

    def test_0BSD_NBPL_1_0(self):        
        assert osadl_matrix.get_compatibility("0BSD", "NBPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_0BSD_NTP(self):        
        assert osadl_matrix.get_compatibility("0BSD", "NTP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_0BSD_OSL_3_0(self):        
        assert osadl_matrix.get_compatibility("0BSD", "OSL-3.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_0BSD_OpenSSL(self):        
        assert osadl_matrix.get_compatibility("0BSD", "OpenSSL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_0BSD_PHP_3_01(self):        
        assert osadl_matrix.get_compatibility("0BSD", "PHP-3.01") == osadl_matrix.OSADLCompatibility.YES
    

    def test_0BSD_PostgreSQL(self):        
        assert osadl_matrix.get_compatibility("0BSD", "PostgreSQL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_0BSD_Python_2_0(self):        
        assert osadl_matrix.get_compatibility("0BSD", "Python-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_0BSD_Qhull(self):        
        assert osadl_matrix.get_compatibility("0BSD", "Qhull") == osadl_matrix.OSADLCompatibility.YES
    

    def test_0BSD_RSA_MD(self):        
        assert osadl_matrix.get_compatibility("0BSD", "RSA-MD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_0BSD_Sleepycat(self):        
        assert osadl_matrix.get_compatibility("0BSD", "Sleepycat") == osadl_matrix.OSADLCompatibility.NO
    

    def test_0BSD_SunPro(self):        
        assert osadl_matrix.get_compatibility("0BSD", "SunPro") == osadl_matrix.OSADLCompatibility.YES
    

    def test_0BSD_UPL_1_0(self):        
        assert osadl_matrix.get_compatibility("0BSD", "UPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_0BSD_Unicode_DFS_2015(self):        
        assert osadl_matrix.get_compatibility("0BSD", "Unicode-DFS-2015") == osadl_matrix.OSADLCompatibility.YES
    

    def test_0BSD_Unicode_DFS_2016(self):        
        assert osadl_matrix.get_compatibility("0BSD", "Unicode-DFS-2016") == osadl_matrix.OSADLCompatibility.YES
    

    def test_0BSD_Unlicense(self):        
        assert osadl_matrix.get_compatibility("0BSD", "Unlicense") == osadl_matrix.OSADLCompatibility.YES
    

    def test_0BSD_W3C(self):        
        assert osadl_matrix.get_compatibility("0BSD", "W3C") == osadl_matrix.OSADLCompatibility.YES
    

    def test_0BSD_W3C_19980720(self):        
        assert osadl_matrix.get_compatibility("0BSD", "W3C-19980720") == osadl_matrix.OSADLCompatibility.YES
    

    def test_0BSD_W3C_20150513(self):        
        assert osadl_matrix.get_compatibility("0BSD", "W3C-20150513") == osadl_matrix.OSADLCompatibility.YES
    

    def test_0BSD_WTFPL(self):        
        assert osadl_matrix.get_compatibility("0BSD", "WTFPL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_0BSD_X11(self):        
        assert osadl_matrix.get_compatibility("0BSD", "X11") == osadl_matrix.OSADLCompatibility.YES
    

    def test_0BSD_XFree86_1_1(self):        
        assert osadl_matrix.get_compatibility("0BSD", "XFree86-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_0BSD_ZPL_2_0(self):        
        assert osadl_matrix.get_compatibility("0BSD", "ZPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_0BSD_Zlib(self):        
        assert osadl_matrix.get_compatibility("0BSD", "Zlib") == osadl_matrix.OSADLCompatibility.YES
    

    def test_0BSD_bzip2_1_0_5(self):        
        assert osadl_matrix.get_compatibility("0BSD", "bzip2-1.0.5") == osadl_matrix.OSADLCompatibility.YES
    

    def test_0BSD_bzip2_1_0_6(self):        
        assert osadl_matrix.get_compatibility("0BSD", "bzip2-1.0.6") == osadl_matrix.OSADLCompatibility.YES
    

    def test_0BSD_curl(self):        
        assert osadl_matrix.get_compatibility("0BSD", "curl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_0BSD_libtiff(self):        
        assert osadl_matrix.get_compatibility("0BSD", "libtiff") == osadl_matrix.OSADLCompatibility.YES
    

    def test_0BSD_zlib_acknowledgement(self):        
        assert osadl_matrix.get_compatibility("0BSD", "zlib-acknowledgement") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_0_0BSD(self):        
        assert osadl_matrix.get_compatibility("AFL-2.0", "0BSD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_0_AFL_2_0(self):        
        assert osadl_matrix.get_compatibility("AFL-2.0", "AFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_0_AFL_2_1(self):        
        assert osadl_matrix.get_compatibility("AFL-2.0", "AFL-2.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_0_AFL_3_0(self):        
        assert osadl_matrix.get_compatibility("AFL-2.0", "AFL-3.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_0_AGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("AFL-2.0", "AGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AFL_2_0_AGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("AFL-2.0", "AGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AFL_2_0_Apache_1_0(self):        
        assert osadl_matrix.get_compatibility("AFL-2.0", "Apache-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_0_Apache_1_1(self):        
        assert osadl_matrix.get_compatibility("AFL-2.0", "Apache-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_0_Apache_2_0(self):        
        assert osadl_matrix.get_compatibility("AFL-2.0", "Apache-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_0_Artistic_1_0(self):        
        assert osadl_matrix.get_compatibility("AFL-2.0", "Artistic-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_0_Artistic_1_0_Perl(self):        
        assert osadl_matrix.get_compatibility("AFL-2.0", "Artistic-1.0-Perl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_0_Artistic_2_0(self):        
        assert osadl_matrix.get_compatibility("AFL-2.0", "Artistic-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_0_BSD_1_Clause(self):        
        assert osadl_matrix.get_compatibility("AFL-2.0", "BSD-1-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_0_BSD_2_Clause(self):        
        assert osadl_matrix.get_compatibility("AFL-2.0", "BSD-2-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_0_BSD_2_Clause_Patent(self):        
        assert osadl_matrix.get_compatibility("AFL-2.0", "BSD-2-Clause-Patent") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_0_BSD_3_Clause(self):        
        assert osadl_matrix.get_compatibility("AFL-2.0", "BSD-3-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_0_BSD_4_Clause(self):        
        assert osadl_matrix.get_compatibility("AFL-2.0", "BSD-4-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_0_BSD_4_Clause_UC(self):        
        assert osadl_matrix.get_compatibility("AFL-2.0", "BSD-4-Clause-UC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_0_BSD_Source_Code(self):        
        assert osadl_matrix.get_compatibility("AFL-2.0", "BSD-Source-Code") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_0_BSL_1_0(self):        
        assert osadl_matrix.get_compatibility("AFL-2.0", "BSL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_0_CC0_1_0(self):        
        assert osadl_matrix.get_compatibility("AFL-2.0", "CC0-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_0_CDDL_1_0(self):        
        assert osadl_matrix.get_compatibility("AFL-2.0", "CDDL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AFL_2_0_CDDL_1_1(self):        
        assert osadl_matrix.get_compatibility("AFL-2.0", "CDDL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AFL_2_0_CPL_1_0(self):        
        assert osadl_matrix.get_compatibility("AFL-2.0", "CPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AFL_2_0_EFL_2_0(self):        
        assert osadl_matrix.get_compatibility("AFL-2.0", "EFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_0_EPL_1_0(self):        
        assert osadl_matrix.get_compatibility("AFL-2.0", "EPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AFL_2_0_EPL_2_0(self):        
        assert osadl_matrix.get_compatibility("AFL-2.0", "EPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AFL_2_0_EUPL_1_1(self):        
        assert osadl_matrix.get_compatibility("AFL-2.0", "EUPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AFL_2_0_EUPL_1_2(self):        
        assert osadl_matrix.get_compatibility("AFL-2.0", "EUPL-1.2") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AFL_2_0_FSFAP(self):        
        assert osadl_matrix.get_compatibility("AFL-2.0", "FSFAP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_0_FSFULLR(self):        
        assert osadl_matrix.get_compatibility("AFL-2.0", "FSFULLR") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_0_FTL(self):        
        assert osadl_matrix.get_compatibility("AFL-2.0", "FTL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_0_GPL_1_0_only(self):        
        assert osadl_matrix.get_compatibility("AFL-2.0", "GPL-1.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AFL_2_0_GPL_1_0_or_later(self):        
        assert osadl_matrix.get_compatibility("AFL-2.0", "GPL-1.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AFL_2_0_GPL_2_0_only(self):        
        assert osadl_matrix.get_compatibility("AFL-2.0", "GPL-2.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AFL_2_0_GPL_2_0_only_WITH_Classpath_exception_2_0(self):        
        assert osadl_matrix.get_compatibility("AFL-2.0", "GPL-2.0-only WITH Classpath-exception-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AFL_2_0_GPL_2_0_or_later(self):        
        assert osadl_matrix.get_compatibility("AFL-2.0", "GPL-2.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AFL_2_0_GPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("AFL-2.0", "GPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AFL_2_0_GPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("AFL-2.0", "GPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AFL_2_0_HPND(self):        
        assert osadl_matrix.get_compatibility("AFL-2.0", "HPND") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_0_IBM_pibs(self):        
        assert osadl_matrix.get_compatibility("AFL-2.0", "IBM-pibs") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_0_ICU(self):        
        assert osadl_matrix.get_compatibility("AFL-2.0", "ICU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_0_IJG(self):        
        assert osadl_matrix.get_compatibility("AFL-2.0", "IJG") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_0_IPL_1_0(self):        
        assert osadl_matrix.get_compatibility("AFL-2.0", "IPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AFL_2_0_ISC(self):        
        assert osadl_matrix.get_compatibility("AFL-2.0", "ISC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_0_Info_ZIP(self):        
        assert osadl_matrix.get_compatibility("AFL-2.0", "Info-ZIP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_0_LGPL_2_1_only(self):        
        assert osadl_matrix.get_compatibility("AFL-2.0", "LGPL-2.1-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AFL_2_0_LGPL_2_1_or_later(self):        
        assert osadl_matrix.get_compatibility("AFL-2.0", "LGPL-2.1-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AFL_2_0_LGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("AFL-2.0", "LGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AFL_2_0_LGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("AFL-2.0", "LGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AFL_2_0_Libpng(self):        
        assert osadl_matrix.get_compatibility("AFL-2.0", "Libpng") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_0_MIT(self):        
        assert osadl_matrix.get_compatibility("AFL-2.0", "MIT") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_0_MIT_CMU(self):        
        assert osadl_matrix.get_compatibility("AFL-2.0", "MIT-CMU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_0_MPL_1_1(self):        
        assert osadl_matrix.get_compatibility("AFL-2.0", "MPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AFL_2_0_MPL_2_0(self):        
        assert osadl_matrix.get_compatibility("AFL-2.0", "MPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AFL_2_0_MPL_2_0_no_copyleft_exception(self):        
        assert osadl_matrix.get_compatibility("AFL-2.0", "MPL-2.0-no-copyleft-exception") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AFL_2_0_MS_PL(self):        
        assert osadl_matrix.get_compatibility("AFL-2.0", "MS-PL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_AFL_2_0_MS_RL(self):        
        assert osadl_matrix.get_compatibility("AFL-2.0", "MS-RL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AFL_2_0_MirOS(self):        
        assert osadl_matrix.get_compatibility("AFL-2.0", "MirOS") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_0_NBPL_1_0(self):        
        assert osadl_matrix.get_compatibility("AFL-2.0", "NBPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_0_NTP(self):        
        assert osadl_matrix.get_compatibility("AFL-2.0", "NTP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_0_OSL_3_0(self):        
        assert osadl_matrix.get_compatibility("AFL-2.0", "OSL-3.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AFL_2_0_OpenSSL(self):        
        assert osadl_matrix.get_compatibility("AFL-2.0", "OpenSSL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_AFL_2_0_PHP_3_01(self):        
        assert osadl_matrix.get_compatibility("AFL-2.0", "PHP-3.01") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_0_PostgreSQL(self):        
        assert osadl_matrix.get_compatibility("AFL-2.0", "PostgreSQL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_0_Python_2_0(self):        
        assert osadl_matrix.get_compatibility("AFL-2.0", "Python-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_0_Qhull(self):        
        assert osadl_matrix.get_compatibility("AFL-2.0", "Qhull") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_0_RSA_MD(self):        
        assert osadl_matrix.get_compatibility("AFL-2.0", "RSA-MD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_0_Sleepycat(self):        
        assert osadl_matrix.get_compatibility("AFL-2.0", "Sleepycat") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AFL_2_0_SunPro(self):        
        assert osadl_matrix.get_compatibility("AFL-2.0", "SunPro") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_0_UPL_1_0(self):        
        assert osadl_matrix.get_compatibility("AFL-2.0", "UPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_0_Unicode_DFS_2015(self):        
        assert osadl_matrix.get_compatibility("AFL-2.0", "Unicode-DFS-2015") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_0_Unicode_DFS_2016(self):        
        assert osadl_matrix.get_compatibility("AFL-2.0", "Unicode-DFS-2016") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_0_Unlicense(self):        
        assert osadl_matrix.get_compatibility("AFL-2.0", "Unlicense") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_0_W3C(self):        
        assert osadl_matrix.get_compatibility("AFL-2.0", "W3C") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_0_W3C_19980720(self):        
        assert osadl_matrix.get_compatibility("AFL-2.0", "W3C-19980720") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_0_W3C_20150513(self):        
        assert osadl_matrix.get_compatibility("AFL-2.0", "W3C-20150513") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_0_WTFPL(self):        
        assert osadl_matrix.get_compatibility("AFL-2.0", "WTFPL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_0_X11(self):        
        assert osadl_matrix.get_compatibility("AFL-2.0", "X11") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_0_XFree86_1_1(self):        
        assert osadl_matrix.get_compatibility("AFL-2.0", "XFree86-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_0_ZPL_2_0(self):        
        assert osadl_matrix.get_compatibility("AFL-2.0", "ZPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_0_Zlib(self):        
        assert osadl_matrix.get_compatibility("AFL-2.0", "Zlib") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_0_bzip2_1_0_5(self):        
        assert osadl_matrix.get_compatibility("AFL-2.0", "bzip2-1.0.5") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_0_bzip2_1_0_6(self):        
        assert osadl_matrix.get_compatibility("AFL-2.0", "bzip2-1.0.6") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_0_curl(self):        
        assert osadl_matrix.get_compatibility("AFL-2.0", "curl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_0_libtiff(self):        
        assert osadl_matrix.get_compatibility("AFL-2.0", "libtiff") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_0_zlib_acknowledgement(self):        
        assert osadl_matrix.get_compatibility("AFL-2.0", "zlib-acknowledgement") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_1_0BSD(self):        
        assert osadl_matrix.get_compatibility("AFL-2.1", "0BSD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_1_AFL_2_0(self):        
        assert osadl_matrix.get_compatibility("AFL-2.1", "AFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_1_AFL_2_1(self):        
        assert osadl_matrix.get_compatibility("AFL-2.1", "AFL-2.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_1_AFL_3_0(self):        
        assert osadl_matrix.get_compatibility("AFL-2.1", "AFL-3.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_1_AGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("AFL-2.1", "AGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AFL_2_1_AGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("AFL-2.1", "AGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AFL_2_1_Apache_1_0(self):        
        assert osadl_matrix.get_compatibility("AFL-2.1", "Apache-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_1_Apache_1_1(self):        
        assert osadl_matrix.get_compatibility("AFL-2.1", "Apache-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_1_Apache_2_0(self):        
        assert osadl_matrix.get_compatibility("AFL-2.1", "Apache-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_1_Artistic_1_0(self):        
        assert osadl_matrix.get_compatibility("AFL-2.1", "Artistic-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_1_Artistic_1_0_Perl(self):        
        assert osadl_matrix.get_compatibility("AFL-2.1", "Artistic-1.0-Perl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_1_Artistic_2_0(self):        
        assert osadl_matrix.get_compatibility("AFL-2.1", "Artistic-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_1_BSD_1_Clause(self):        
        assert osadl_matrix.get_compatibility("AFL-2.1", "BSD-1-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_1_BSD_2_Clause(self):        
        assert osadl_matrix.get_compatibility("AFL-2.1", "BSD-2-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_1_BSD_2_Clause_Patent(self):        
        assert osadl_matrix.get_compatibility("AFL-2.1", "BSD-2-Clause-Patent") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_1_BSD_3_Clause(self):        
        assert osadl_matrix.get_compatibility("AFL-2.1", "BSD-3-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_1_BSD_4_Clause(self):        
        assert osadl_matrix.get_compatibility("AFL-2.1", "BSD-4-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_1_BSD_4_Clause_UC(self):        
        assert osadl_matrix.get_compatibility("AFL-2.1", "BSD-4-Clause-UC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_1_BSD_Source_Code(self):        
        assert osadl_matrix.get_compatibility("AFL-2.1", "BSD-Source-Code") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_1_BSL_1_0(self):        
        assert osadl_matrix.get_compatibility("AFL-2.1", "BSL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_1_CC0_1_0(self):        
        assert osadl_matrix.get_compatibility("AFL-2.1", "CC0-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_1_CDDL_1_0(self):        
        assert osadl_matrix.get_compatibility("AFL-2.1", "CDDL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AFL_2_1_CDDL_1_1(self):        
        assert osadl_matrix.get_compatibility("AFL-2.1", "CDDL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AFL_2_1_CPL_1_0(self):        
        assert osadl_matrix.get_compatibility("AFL-2.1", "CPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AFL_2_1_EFL_2_0(self):        
        assert osadl_matrix.get_compatibility("AFL-2.1", "EFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_1_EPL_1_0(self):        
        assert osadl_matrix.get_compatibility("AFL-2.1", "EPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AFL_2_1_EPL_2_0(self):        
        assert osadl_matrix.get_compatibility("AFL-2.1", "EPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AFL_2_1_EUPL_1_1(self):        
        assert osadl_matrix.get_compatibility("AFL-2.1", "EUPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AFL_2_1_EUPL_1_2(self):        
        assert osadl_matrix.get_compatibility("AFL-2.1", "EUPL-1.2") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AFL_2_1_FSFAP(self):        
        assert osadl_matrix.get_compatibility("AFL-2.1", "FSFAP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_1_FSFULLR(self):        
        assert osadl_matrix.get_compatibility("AFL-2.1", "FSFULLR") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_1_FTL(self):        
        assert osadl_matrix.get_compatibility("AFL-2.1", "FTL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_1_GPL_1_0_only(self):        
        assert osadl_matrix.get_compatibility("AFL-2.1", "GPL-1.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AFL_2_1_GPL_1_0_or_later(self):        
        assert osadl_matrix.get_compatibility("AFL-2.1", "GPL-1.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AFL_2_1_GPL_2_0_only(self):        
        assert osadl_matrix.get_compatibility("AFL-2.1", "GPL-2.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AFL_2_1_GPL_2_0_only_WITH_Classpath_exception_2_0(self):        
        assert osadl_matrix.get_compatibility("AFL-2.1", "GPL-2.0-only WITH Classpath-exception-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AFL_2_1_GPL_2_0_or_later(self):        
        assert osadl_matrix.get_compatibility("AFL-2.1", "GPL-2.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AFL_2_1_GPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("AFL-2.1", "GPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AFL_2_1_GPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("AFL-2.1", "GPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AFL_2_1_HPND(self):        
        assert osadl_matrix.get_compatibility("AFL-2.1", "HPND") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_1_IBM_pibs(self):        
        assert osadl_matrix.get_compatibility("AFL-2.1", "IBM-pibs") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_1_ICU(self):        
        assert osadl_matrix.get_compatibility("AFL-2.1", "ICU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_1_IJG(self):        
        assert osadl_matrix.get_compatibility("AFL-2.1", "IJG") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_1_IPL_1_0(self):        
        assert osadl_matrix.get_compatibility("AFL-2.1", "IPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AFL_2_1_ISC(self):        
        assert osadl_matrix.get_compatibility("AFL-2.1", "ISC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_1_Info_ZIP(self):        
        assert osadl_matrix.get_compatibility("AFL-2.1", "Info-ZIP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_1_LGPL_2_1_only(self):        
        assert osadl_matrix.get_compatibility("AFL-2.1", "LGPL-2.1-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AFL_2_1_LGPL_2_1_or_later(self):        
        assert osadl_matrix.get_compatibility("AFL-2.1", "LGPL-2.1-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AFL_2_1_LGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("AFL-2.1", "LGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AFL_2_1_LGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("AFL-2.1", "LGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AFL_2_1_Libpng(self):        
        assert osadl_matrix.get_compatibility("AFL-2.1", "Libpng") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_1_MIT(self):        
        assert osadl_matrix.get_compatibility("AFL-2.1", "MIT") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_1_MIT_CMU(self):        
        assert osadl_matrix.get_compatibility("AFL-2.1", "MIT-CMU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_1_MPL_1_1(self):        
        assert osadl_matrix.get_compatibility("AFL-2.1", "MPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AFL_2_1_MPL_2_0(self):        
        assert osadl_matrix.get_compatibility("AFL-2.1", "MPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AFL_2_1_MPL_2_0_no_copyleft_exception(self):        
        assert osadl_matrix.get_compatibility("AFL-2.1", "MPL-2.0-no-copyleft-exception") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AFL_2_1_MS_PL(self):        
        assert osadl_matrix.get_compatibility("AFL-2.1", "MS-PL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_AFL_2_1_MS_RL(self):        
        assert osadl_matrix.get_compatibility("AFL-2.1", "MS-RL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AFL_2_1_MirOS(self):        
        assert osadl_matrix.get_compatibility("AFL-2.1", "MirOS") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_1_NBPL_1_0(self):        
        assert osadl_matrix.get_compatibility("AFL-2.1", "NBPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_1_NTP(self):        
        assert osadl_matrix.get_compatibility("AFL-2.1", "NTP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_1_OSL_3_0(self):        
        assert osadl_matrix.get_compatibility("AFL-2.1", "OSL-3.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AFL_2_1_OpenSSL(self):        
        assert osadl_matrix.get_compatibility("AFL-2.1", "OpenSSL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_AFL_2_1_PHP_3_01(self):        
        assert osadl_matrix.get_compatibility("AFL-2.1", "PHP-3.01") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_1_PostgreSQL(self):        
        assert osadl_matrix.get_compatibility("AFL-2.1", "PostgreSQL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_1_Python_2_0(self):        
        assert osadl_matrix.get_compatibility("AFL-2.1", "Python-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_1_Qhull(self):        
        assert osadl_matrix.get_compatibility("AFL-2.1", "Qhull") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_1_RSA_MD(self):        
        assert osadl_matrix.get_compatibility("AFL-2.1", "RSA-MD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_1_Sleepycat(self):        
        assert osadl_matrix.get_compatibility("AFL-2.1", "Sleepycat") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AFL_2_1_SunPro(self):        
        assert osadl_matrix.get_compatibility("AFL-2.1", "SunPro") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_1_UPL_1_0(self):        
        assert osadl_matrix.get_compatibility("AFL-2.1", "UPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_1_Unicode_DFS_2015(self):        
        assert osadl_matrix.get_compatibility("AFL-2.1", "Unicode-DFS-2015") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_1_Unicode_DFS_2016(self):        
        assert osadl_matrix.get_compatibility("AFL-2.1", "Unicode-DFS-2016") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_1_Unlicense(self):        
        assert osadl_matrix.get_compatibility("AFL-2.1", "Unlicense") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_1_W3C(self):        
        assert osadl_matrix.get_compatibility("AFL-2.1", "W3C") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_1_W3C_19980720(self):        
        assert osadl_matrix.get_compatibility("AFL-2.1", "W3C-19980720") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_1_W3C_20150513(self):        
        assert osadl_matrix.get_compatibility("AFL-2.1", "W3C-20150513") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_1_WTFPL(self):        
        assert osadl_matrix.get_compatibility("AFL-2.1", "WTFPL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_1_X11(self):        
        assert osadl_matrix.get_compatibility("AFL-2.1", "X11") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_1_XFree86_1_1(self):        
        assert osadl_matrix.get_compatibility("AFL-2.1", "XFree86-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_1_ZPL_2_0(self):        
        assert osadl_matrix.get_compatibility("AFL-2.1", "ZPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_1_Zlib(self):        
        assert osadl_matrix.get_compatibility("AFL-2.1", "Zlib") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_1_bzip2_1_0_5(self):        
        assert osadl_matrix.get_compatibility("AFL-2.1", "bzip2-1.0.5") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_1_bzip2_1_0_6(self):        
        assert osadl_matrix.get_compatibility("AFL-2.1", "bzip2-1.0.6") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_1_curl(self):        
        assert osadl_matrix.get_compatibility("AFL-2.1", "curl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_1_libtiff(self):        
        assert osadl_matrix.get_compatibility("AFL-2.1", "libtiff") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_2_1_zlib_acknowledgement(self):        
        assert osadl_matrix.get_compatibility("AFL-2.1", "zlib-acknowledgement") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_3_0_0BSD(self):        
        assert osadl_matrix.get_compatibility("AFL-3.0", "0BSD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_3_0_AFL_2_0(self):        
        assert osadl_matrix.get_compatibility("AFL-3.0", "AFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_3_0_AFL_2_1(self):        
        assert osadl_matrix.get_compatibility("AFL-3.0", "AFL-2.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_3_0_AFL_3_0(self):        
        assert osadl_matrix.get_compatibility("AFL-3.0", "AFL-3.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_3_0_AGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("AFL-3.0", "AGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AFL_3_0_AGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("AFL-3.0", "AGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AFL_3_0_Apache_1_0(self):        
        assert osadl_matrix.get_compatibility("AFL-3.0", "Apache-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_3_0_Apache_1_1(self):        
        assert osadl_matrix.get_compatibility("AFL-3.0", "Apache-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_3_0_Apache_2_0(self):        
        assert osadl_matrix.get_compatibility("AFL-3.0", "Apache-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_3_0_Artistic_1_0(self):        
        assert osadl_matrix.get_compatibility("AFL-3.0", "Artistic-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_3_0_Artistic_1_0_Perl(self):        
        assert osadl_matrix.get_compatibility("AFL-3.0", "Artistic-1.0-Perl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_3_0_Artistic_2_0(self):        
        assert osadl_matrix.get_compatibility("AFL-3.0", "Artistic-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_3_0_BSD_1_Clause(self):        
        assert osadl_matrix.get_compatibility("AFL-3.0", "BSD-1-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_3_0_BSD_2_Clause(self):        
        assert osadl_matrix.get_compatibility("AFL-3.0", "BSD-2-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_3_0_BSD_2_Clause_Patent(self):        
        assert osadl_matrix.get_compatibility("AFL-3.0", "BSD-2-Clause-Patent") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_3_0_BSD_3_Clause(self):        
        assert osadl_matrix.get_compatibility("AFL-3.0", "BSD-3-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_3_0_BSD_4_Clause(self):        
        assert osadl_matrix.get_compatibility("AFL-3.0", "BSD-4-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_3_0_BSD_4_Clause_UC(self):        
        assert osadl_matrix.get_compatibility("AFL-3.0", "BSD-4-Clause-UC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_3_0_BSD_Source_Code(self):        
        assert osadl_matrix.get_compatibility("AFL-3.0", "BSD-Source-Code") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_3_0_BSL_1_0(self):        
        assert osadl_matrix.get_compatibility("AFL-3.0", "BSL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_3_0_CC0_1_0(self):        
        assert osadl_matrix.get_compatibility("AFL-3.0", "CC0-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_3_0_CDDL_1_0(self):        
        assert osadl_matrix.get_compatibility("AFL-3.0", "CDDL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AFL_3_0_CDDL_1_1(self):        
        assert osadl_matrix.get_compatibility("AFL-3.0", "CDDL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AFL_3_0_CPL_1_0(self):        
        assert osadl_matrix.get_compatibility("AFL-3.0", "CPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AFL_3_0_EFL_2_0(self):        
        assert osadl_matrix.get_compatibility("AFL-3.0", "EFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_3_0_EPL_1_0(self):        
        assert osadl_matrix.get_compatibility("AFL-3.0", "EPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AFL_3_0_EPL_2_0(self):        
        assert osadl_matrix.get_compatibility("AFL-3.0", "EPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AFL_3_0_EUPL_1_1(self):        
        assert osadl_matrix.get_compatibility("AFL-3.0", "EUPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AFL_3_0_EUPL_1_2(self):        
        assert osadl_matrix.get_compatibility("AFL-3.0", "EUPL-1.2") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AFL_3_0_FSFAP(self):        
        assert osadl_matrix.get_compatibility("AFL-3.0", "FSFAP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_3_0_FSFULLR(self):        
        assert osadl_matrix.get_compatibility("AFL-3.0", "FSFULLR") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_3_0_FTL(self):        
        assert osadl_matrix.get_compatibility("AFL-3.0", "FTL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_3_0_GPL_1_0_only(self):        
        assert osadl_matrix.get_compatibility("AFL-3.0", "GPL-1.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AFL_3_0_GPL_1_0_or_later(self):        
        assert osadl_matrix.get_compatibility("AFL-3.0", "GPL-1.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AFL_3_0_GPL_2_0_only(self):        
        assert osadl_matrix.get_compatibility("AFL-3.0", "GPL-2.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AFL_3_0_GPL_2_0_only_WITH_Classpath_exception_2_0(self):        
        assert osadl_matrix.get_compatibility("AFL-3.0", "GPL-2.0-only WITH Classpath-exception-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AFL_3_0_GPL_2_0_or_later(self):        
        assert osadl_matrix.get_compatibility("AFL-3.0", "GPL-2.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AFL_3_0_GPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("AFL-3.0", "GPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AFL_3_0_GPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("AFL-3.0", "GPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AFL_3_0_HPND(self):        
        assert osadl_matrix.get_compatibility("AFL-3.0", "HPND") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_3_0_IBM_pibs(self):        
        assert osadl_matrix.get_compatibility("AFL-3.0", "IBM-pibs") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_3_0_ICU(self):        
        assert osadl_matrix.get_compatibility("AFL-3.0", "ICU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_3_0_IJG(self):        
        assert osadl_matrix.get_compatibility("AFL-3.0", "IJG") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_3_0_IPL_1_0(self):        
        assert osadl_matrix.get_compatibility("AFL-3.0", "IPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AFL_3_0_ISC(self):        
        assert osadl_matrix.get_compatibility("AFL-3.0", "ISC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_3_0_Info_ZIP(self):        
        assert osadl_matrix.get_compatibility("AFL-3.0", "Info-ZIP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_3_0_LGPL_2_1_only(self):        
        assert osadl_matrix.get_compatibility("AFL-3.0", "LGPL-2.1-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AFL_3_0_LGPL_2_1_or_later(self):        
        assert osadl_matrix.get_compatibility("AFL-3.0", "LGPL-2.1-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AFL_3_0_LGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("AFL-3.0", "LGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AFL_3_0_LGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("AFL-3.0", "LGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AFL_3_0_Libpng(self):        
        assert osadl_matrix.get_compatibility("AFL-3.0", "Libpng") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_3_0_MIT(self):        
        assert osadl_matrix.get_compatibility("AFL-3.0", "MIT") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_3_0_MIT_CMU(self):        
        assert osadl_matrix.get_compatibility("AFL-3.0", "MIT-CMU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_3_0_MPL_1_1(self):        
        assert osadl_matrix.get_compatibility("AFL-3.0", "MPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AFL_3_0_MPL_2_0(self):        
        assert osadl_matrix.get_compatibility("AFL-3.0", "MPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AFL_3_0_MPL_2_0_no_copyleft_exception(self):        
        assert osadl_matrix.get_compatibility("AFL-3.0", "MPL-2.0-no-copyleft-exception") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AFL_3_0_MS_PL(self):        
        assert osadl_matrix.get_compatibility("AFL-3.0", "MS-PL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_AFL_3_0_MS_RL(self):        
        assert osadl_matrix.get_compatibility("AFL-3.0", "MS-RL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AFL_3_0_MirOS(self):        
        assert osadl_matrix.get_compatibility("AFL-3.0", "MirOS") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_3_0_NBPL_1_0(self):        
        assert osadl_matrix.get_compatibility("AFL-3.0", "NBPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_3_0_NTP(self):        
        assert osadl_matrix.get_compatibility("AFL-3.0", "NTP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_3_0_OSL_3_0(self):        
        assert osadl_matrix.get_compatibility("AFL-3.0", "OSL-3.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AFL_3_0_OpenSSL(self):        
        assert osadl_matrix.get_compatibility("AFL-3.0", "OpenSSL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_AFL_3_0_PHP_3_01(self):        
        assert osadl_matrix.get_compatibility("AFL-3.0", "PHP-3.01") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_3_0_PostgreSQL(self):        
        assert osadl_matrix.get_compatibility("AFL-3.0", "PostgreSQL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_3_0_Python_2_0(self):        
        assert osadl_matrix.get_compatibility("AFL-3.0", "Python-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_3_0_Qhull(self):        
        assert osadl_matrix.get_compatibility("AFL-3.0", "Qhull") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_3_0_RSA_MD(self):        
        assert osadl_matrix.get_compatibility("AFL-3.0", "RSA-MD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_3_0_Sleepycat(self):        
        assert osadl_matrix.get_compatibility("AFL-3.0", "Sleepycat") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AFL_3_0_SunPro(self):        
        assert osadl_matrix.get_compatibility("AFL-3.0", "SunPro") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_3_0_UPL_1_0(self):        
        assert osadl_matrix.get_compatibility("AFL-3.0", "UPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_3_0_Unicode_DFS_2015(self):        
        assert osadl_matrix.get_compatibility("AFL-3.0", "Unicode-DFS-2015") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_3_0_Unicode_DFS_2016(self):        
        assert osadl_matrix.get_compatibility("AFL-3.0", "Unicode-DFS-2016") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_3_0_Unlicense(self):        
        assert osadl_matrix.get_compatibility("AFL-3.0", "Unlicense") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_3_0_W3C(self):        
        assert osadl_matrix.get_compatibility("AFL-3.0", "W3C") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_3_0_W3C_19980720(self):        
        assert osadl_matrix.get_compatibility("AFL-3.0", "W3C-19980720") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_3_0_W3C_20150513(self):        
        assert osadl_matrix.get_compatibility("AFL-3.0", "W3C-20150513") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_3_0_WTFPL(self):        
        assert osadl_matrix.get_compatibility("AFL-3.0", "WTFPL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_3_0_X11(self):        
        assert osadl_matrix.get_compatibility("AFL-3.0", "X11") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_3_0_XFree86_1_1(self):        
        assert osadl_matrix.get_compatibility("AFL-3.0", "XFree86-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_3_0_ZPL_2_0(self):        
        assert osadl_matrix.get_compatibility("AFL-3.0", "ZPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_3_0_Zlib(self):        
        assert osadl_matrix.get_compatibility("AFL-3.0", "Zlib") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_3_0_bzip2_1_0_5(self):        
        assert osadl_matrix.get_compatibility("AFL-3.0", "bzip2-1.0.5") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_3_0_bzip2_1_0_6(self):        
        assert osadl_matrix.get_compatibility("AFL-3.0", "bzip2-1.0.6") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_3_0_curl(self):        
        assert osadl_matrix.get_compatibility("AFL-3.0", "curl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_3_0_libtiff(self):        
        assert osadl_matrix.get_compatibility("AFL-3.0", "libtiff") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AFL_3_0_zlib_acknowledgement(self):        
        assert osadl_matrix.get_compatibility("AFL-3.0", "zlib-acknowledgement") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AGPL_3_0_only_0BSD(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-only", "0BSD") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_AGPL_3_0_only_AFL_2_0(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-only", "AFL-2.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_AGPL_3_0_only_AFL_2_1(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-only", "AFL-2.1") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_AGPL_3_0_only_AFL_3_0(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-only", "AFL-3.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_AGPL_3_0_only_AGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-only", "AGPL-3.0-only") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AGPL_3_0_only_AGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-only", "AGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AGPL_3_0_only_Apache_1_0(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-only", "Apache-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AGPL_3_0_only_Apache_1_1(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-only", "Apache-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AGPL_3_0_only_Apache_2_0(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-only", "Apache-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AGPL_3_0_only_Artistic_1_0(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-only", "Artistic-1.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_AGPL_3_0_only_Artistic_1_0_Perl(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-only", "Artistic-1.0-Perl") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_AGPL_3_0_only_Artistic_2_0(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-only", "Artistic-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AGPL_3_0_only_BSD_1_Clause(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-only", "BSD-1-Clause") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_AGPL_3_0_only_BSD_2_Clause(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-only", "BSD-2-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AGPL_3_0_only_BSD_2_Clause_Patent(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-only", "BSD-2-Clause-Patent") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AGPL_3_0_only_BSD_3_Clause(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-only", "BSD-3-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AGPL_3_0_only_BSD_4_Clause(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-only", "BSD-4-Clause") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AGPL_3_0_only_BSD_4_Clause_UC(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-only", "BSD-4-Clause-UC") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AGPL_3_0_only_BSD_Source_Code(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-only", "BSD-Source-Code") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_AGPL_3_0_only_BSL_1_0(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-only", "BSL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AGPL_3_0_only_CC0_1_0(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-only", "CC0-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AGPL_3_0_only_CDDL_1_0(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-only", "CDDL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AGPL_3_0_only_CDDL_1_1(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-only", "CDDL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AGPL_3_0_only_CPL_1_0(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-only", "CPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AGPL_3_0_only_EFL_2_0(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-only", "EFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AGPL_3_0_only_EPL_1_0(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-only", "EPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AGPL_3_0_only_EPL_2_0(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-only", "EPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AGPL_3_0_only_EUPL_1_1(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-only", "EUPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AGPL_3_0_only_EUPL_1_2(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-only", "EUPL-1.2") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AGPL_3_0_only_FSFAP(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-only", "FSFAP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AGPL_3_0_only_FSFULLR(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-only", "FSFULLR") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AGPL_3_0_only_FTL(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-only", "FTL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AGPL_3_0_only_GPL_1_0_only(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-only", "GPL-1.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AGPL_3_0_only_GPL_1_0_or_later(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-only", "GPL-1.0-or-later") == osadl_matrix.OSADLCompatibility.CHECKDEP
    

    def test_AGPL_3_0_only_GPL_2_0_only(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-only", "GPL-2.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AGPL_3_0_only_GPL_2_0_only_WITH_Classpath_exception_2_0(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-only", "GPL-2.0-only WITH Classpath-exception-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AGPL_3_0_only_GPL_2_0_or_later(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-only", "GPL-2.0-or-later") == osadl_matrix.OSADLCompatibility.CHECKDEP
    

    def test_AGPL_3_0_only_GPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-only", "GPL-3.0-only") == osadl_matrix.OSADLCompatibility.CHECKDEP
    

    def test_AGPL_3_0_only_GPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-only", "GPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.CHECKDEP
    

    def test_AGPL_3_0_only_HPND(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-only", "HPND") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_AGPL_3_0_only_IBM_pibs(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-only", "IBM-pibs") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AGPL_3_0_only_ICU(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-only", "ICU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AGPL_3_0_only_IJG(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-only", "IJG") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AGPL_3_0_only_IPL_1_0(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-only", "IPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AGPL_3_0_only_ISC(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-only", "ISC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AGPL_3_0_only_Info_ZIP(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-only", "Info-ZIP") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_AGPL_3_0_only_LGPL_2_1_only(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-only", "LGPL-2.1-only") == osadl_matrix.OSADLCompatibility.CHECKDEP
    

    def test_AGPL_3_0_only_LGPL_2_1_or_later(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-only", "LGPL-2.1-or-later") == osadl_matrix.OSADLCompatibility.CHECKDEP
    

    def test_AGPL_3_0_only_LGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-only", "LGPL-3.0-only") == osadl_matrix.OSADLCompatibility.CHECKDEP
    

    def test_AGPL_3_0_only_LGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-only", "LGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.CHECKDEP
    

    def test_AGPL_3_0_only_Libpng(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-only", "Libpng") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AGPL_3_0_only_MIT(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-only", "MIT") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AGPL_3_0_only_MIT_CMU(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-only", "MIT-CMU") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_AGPL_3_0_only_MPL_1_1(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-only", "MPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AGPL_3_0_only_MPL_2_0(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-only", "MPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AGPL_3_0_only_MPL_2_0_no_copyleft_exception(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-only", "MPL-2.0-no-copyleft-exception") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AGPL_3_0_only_MS_PL(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-only", "MS-PL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_AGPL_3_0_only_MS_RL(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-only", "MS-RL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AGPL_3_0_only_MirOS(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-only", "MirOS") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_AGPL_3_0_only_NBPL_1_0(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-only", "NBPL-1.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_AGPL_3_0_only_NTP(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-only", "NTP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AGPL_3_0_only_OSL_3_0(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-only", "OSL-3.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AGPL_3_0_only_OpenSSL(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-only", "OpenSSL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AGPL_3_0_only_PHP_3_01(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-only", "PHP-3.01") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_AGPL_3_0_only_PostgreSQL(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-only", "PostgreSQL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_AGPL_3_0_only_Python_2_0(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-only", "Python-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AGPL_3_0_only_Qhull(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-only", "Qhull") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_AGPL_3_0_only_RSA_MD(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-only", "RSA-MD") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_AGPL_3_0_only_Sleepycat(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-only", "Sleepycat") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AGPL_3_0_only_SunPro(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-only", "SunPro") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_AGPL_3_0_only_UPL_1_0(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-only", "UPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AGPL_3_0_only_Unicode_DFS_2015(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-only", "Unicode-DFS-2015") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_AGPL_3_0_only_Unicode_DFS_2016(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-only", "Unicode-DFS-2016") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_AGPL_3_0_only_Unlicense(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-only", "Unlicense") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AGPL_3_0_only_W3C(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-only", "W3C") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_AGPL_3_0_only_W3C_19980720(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-only", "W3C-19980720") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_AGPL_3_0_only_W3C_20150513(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-only", "W3C-20150513") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_AGPL_3_0_only_WTFPL(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-only", "WTFPL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AGPL_3_0_only_X11(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-only", "X11") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AGPL_3_0_only_XFree86_1_1(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-only", "XFree86-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AGPL_3_0_only_ZPL_2_0(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-only", "ZPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AGPL_3_0_only_Zlib(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-only", "Zlib") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AGPL_3_0_only_bzip2_1_0_5(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-only", "bzip2-1.0.5") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AGPL_3_0_only_bzip2_1_0_6(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-only", "bzip2-1.0.6") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AGPL_3_0_only_curl(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-only", "curl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AGPL_3_0_only_libtiff(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-only", "libtiff") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_AGPL_3_0_only_zlib_acknowledgement(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-only", "zlib-acknowledgement") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AGPL_3_0_or_later_0BSD(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-or-later", "0BSD") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_AGPL_3_0_or_later_AFL_2_0(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-or-later", "AFL-2.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_AGPL_3_0_or_later_AFL_2_1(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-or-later", "AFL-2.1") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_AGPL_3_0_or_later_AFL_3_0(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-or-later", "AFL-3.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_AGPL_3_0_or_later_AGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-or-later", "AGPL-3.0-only") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AGPL_3_0_or_later_AGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-or-later", "AGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AGPL_3_0_or_later_Apache_1_0(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-or-later", "Apache-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AGPL_3_0_or_later_Apache_1_1(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-or-later", "Apache-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AGPL_3_0_or_later_Apache_2_0(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-or-later", "Apache-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AGPL_3_0_or_later_Artistic_1_0(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-or-later", "Artistic-1.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_AGPL_3_0_or_later_Artistic_1_0_Perl(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-or-later", "Artistic-1.0-Perl") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_AGPL_3_0_or_later_Artistic_2_0(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-or-later", "Artistic-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AGPL_3_0_or_later_BSD_1_Clause(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-or-later", "BSD-1-Clause") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_AGPL_3_0_or_later_BSD_2_Clause(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-or-later", "BSD-2-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AGPL_3_0_or_later_BSD_2_Clause_Patent(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-or-later", "BSD-2-Clause-Patent") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AGPL_3_0_or_later_BSD_3_Clause(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-or-later", "BSD-3-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AGPL_3_0_or_later_BSD_4_Clause(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-or-later", "BSD-4-Clause") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AGPL_3_0_or_later_BSD_4_Clause_UC(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-or-later", "BSD-4-Clause-UC") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AGPL_3_0_or_later_BSD_Source_Code(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-or-later", "BSD-Source-Code") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_AGPL_3_0_or_later_BSL_1_0(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-or-later", "BSL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AGPL_3_0_or_later_CC0_1_0(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-or-later", "CC0-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AGPL_3_0_or_later_CDDL_1_0(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-or-later", "CDDL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AGPL_3_0_or_later_CDDL_1_1(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-or-later", "CDDL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AGPL_3_0_or_later_CPL_1_0(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-or-later", "CPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AGPL_3_0_or_later_EFL_2_0(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-or-later", "EFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AGPL_3_0_or_later_EPL_1_0(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-or-later", "EPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AGPL_3_0_or_later_EPL_2_0(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-or-later", "EPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AGPL_3_0_or_later_EUPL_1_1(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-or-later", "EUPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AGPL_3_0_or_later_EUPL_1_2(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-or-later", "EUPL-1.2") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AGPL_3_0_or_later_FSFAP(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-or-later", "FSFAP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AGPL_3_0_or_later_FSFULLR(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-or-later", "FSFULLR") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AGPL_3_0_or_later_FTL(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-or-later", "FTL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AGPL_3_0_or_later_GPL_1_0_only(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-or-later", "GPL-1.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AGPL_3_0_or_later_GPL_1_0_or_later(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-or-later", "GPL-1.0-or-later") == osadl_matrix.OSADLCompatibility.CHECKDEP
    

    def test_AGPL_3_0_or_later_GPL_2_0_only(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-or-later", "GPL-2.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AGPL_3_0_or_later_GPL_2_0_only_WITH_Classpath_exception_2_0(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-or-later", "GPL-2.0-only WITH Classpath-exception-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AGPL_3_0_or_later_GPL_2_0_or_later(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-or-later", "GPL-2.0-or-later") == osadl_matrix.OSADLCompatibility.CHECKDEP
    

    def test_AGPL_3_0_or_later_GPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-or-later", "GPL-3.0-only") == osadl_matrix.OSADLCompatibility.CHECKDEP
    

    def test_AGPL_3_0_or_later_GPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-or-later", "GPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.CHECKDEP
    

    def test_AGPL_3_0_or_later_HPND(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-or-later", "HPND") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_AGPL_3_0_or_later_IBM_pibs(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-or-later", "IBM-pibs") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AGPL_3_0_or_later_ICU(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-or-later", "ICU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AGPL_3_0_or_later_IJG(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-or-later", "IJG") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AGPL_3_0_or_later_IPL_1_0(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-or-later", "IPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AGPL_3_0_or_later_ISC(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-or-later", "ISC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AGPL_3_0_or_later_Info_ZIP(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-or-later", "Info-ZIP") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_AGPL_3_0_or_later_LGPL_2_1_only(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-or-later", "LGPL-2.1-only") == osadl_matrix.OSADLCompatibility.CHECKDEP
    

    def test_AGPL_3_0_or_later_LGPL_2_1_or_later(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-or-later", "LGPL-2.1-or-later") == osadl_matrix.OSADLCompatibility.CHECKDEP
    

    def test_AGPL_3_0_or_later_LGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-or-later", "LGPL-3.0-only") == osadl_matrix.OSADLCompatibility.CHECKDEP
    

    def test_AGPL_3_0_or_later_LGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-or-later", "LGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.CHECKDEP
    

    def test_AGPL_3_0_or_later_Libpng(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-or-later", "Libpng") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AGPL_3_0_or_later_MIT(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-or-later", "MIT") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AGPL_3_0_or_later_MIT_CMU(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-or-later", "MIT-CMU") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_AGPL_3_0_or_later_MPL_1_1(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-or-later", "MPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AGPL_3_0_or_later_MPL_2_0(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-or-later", "MPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AGPL_3_0_or_later_MPL_2_0_no_copyleft_exception(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-or-later", "MPL-2.0-no-copyleft-exception") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AGPL_3_0_or_later_MS_PL(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-or-later", "MS-PL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_AGPL_3_0_or_later_MS_RL(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-or-later", "MS-RL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AGPL_3_0_or_later_MirOS(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-or-later", "MirOS") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_AGPL_3_0_or_later_NBPL_1_0(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-or-later", "NBPL-1.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_AGPL_3_0_or_later_NTP(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-or-later", "NTP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AGPL_3_0_or_later_OSL_3_0(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-or-later", "OSL-3.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AGPL_3_0_or_later_OpenSSL(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-or-later", "OpenSSL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AGPL_3_0_or_later_PHP_3_01(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-or-later", "PHP-3.01") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_AGPL_3_0_or_later_PostgreSQL(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-or-later", "PostgreSQL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_AGPL_3_0_or_later_Python_2_0(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-or-later", "Python-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AGPL_3_0_or_later_Qhull(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-or-later", "Qhull") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_AGPL_3_0_or_later_RSA_MD(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-or-later", "RSA-MD") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_AGPL_3_0_or_later_Sleepycat(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-or-later", "Sleepycat") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AGPL_3_0_or_later_SunPro(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-or-later", "SunPro") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_AGPL_3_0_or_later_UPL_1_0(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-or-later", "UPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AGPL_3_0_or_later_Unicode_DFS_2015(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-or-later", "Unicode-DFS-2015") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_AGPL_3_0_or_later_Unicode_DFS_2016(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-or-later", "Unicode-DFS-2016") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_AGPL_3_0_or_later_Unlicense(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-or-later", "Unlicense") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AGPL_3_0_or_later_W3C(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-or-later", "W3C") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_AGPL_3_0_or_later_W3C_19980720(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-or-later", "W3C-19980720") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_AGPL_3_0_or_later_W3C_20150513(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-or-later", "W3C-20150513") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_AGPL_3_0_or_later_WTFPL(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-or-later", "WTFPL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AGPL_3_0_or_later_X11(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-or-later", "X11") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AGPL_3_0_or_later_XFree86_1_1(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-or-later", "XFree86-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_AGPL_3_0_or_later_ZPL_2_0(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-or-later", "ZPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AGPL_3_0_or_later_Zlib(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-or-later", "Zlib") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AGPL_3_0_or_later_bzip2_1_0_5(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-or-later", "bzip2-1.0.5") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AGPL_3_0_or_later_bzip2_1_0_6(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-or-later", "bzip2-1.0.6") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AGPL_3_0_or_later_curl(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-or-later", "curl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_AGPL_3_0_or_later_libtiff(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-or-later", "libtiff") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_AGPL_3_0_or_later_zlib_acknowledgement(self):        
        assert osadl_matrix.get_compatibility("AGPL-3.0-or-later", "zlib-acknowledgement") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Apache_1_0_0BSD(self):        
        assert osadl_matrix.get_compatibility("Apache-1.0", "0BSD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_0_AFL_2_0(self):        
        assert osadl_matrix.get_compatibility("Apache-1.0", "AFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_0_AFL_2_1(self):        
        assert osadl_matrix.get_compatibility("Apache-1.0", "AFL-2.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_0_AFL_3_0(self):        
        assert osadl_matrix.get_compatibility("Apache-1.0", "AFL-3.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_0_AGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("Apache-1.0", "AGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Apache_1_0_AGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("Apache-1.0", "AGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Apache_1_0_Apache_1_0(self):        
        assert osadl_matrix.get_compatibility("Apache-1.0", "Apache-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_0_Apache_1_1(self):        
        assert osadl_matrix.get_compatibility("Apache-1.0", "Apache-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_0_Apache_2_0(self):        
        assert osadl_matrix.get_compatibility("Apache-1.0", "Apache-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_0_Artistic_1_0(self):        
        assert osadl_matrix.get_compatibility("Apache-1.0", "Artistic-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_0_Artistic_1_0_Perl(self):        
        assert osadl_matrix.get_compatibility("Apache-1.0", "Artistic-1.0-Perl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_0_Artistic_2_0(self):        
        assert osadl_matrix.get_compatibility("Apache-1.0", "Artistic-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_0_BSD_1_Clause(self):        
        assert osadl_matrix.get_compatibility("Apache-1.0", "BSD-1-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_0_BSD_2_Clause(self):        
        assert osadl_matrix.get_compatibility("Apache-1.0", "BSD-2-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_0_BSD_2_Clause_Patent(self):        
        assert osadl_matrix.get_compatibility("Apache-1.0", "BSD-2-Clause-Patent") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_0_BSD_3_Clause(self):        
        assert osadl_matrix.get_compatibility("Apache-1.0", "BSD-3-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_0_BSD_4_Clause(self):        
        assert osadl_matrix.get_compatibility("Apache-1.0", "BSD-4-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_0_BSD_4_Clause_UC(self):        
        assert osadl_matrix.get_compatibility("Apache-1.0", "BSD-4-Clause-UC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_0_BSD_Source_Code(self):        
        assert osadl_matrix.get_compatibility("Apache-1.0", "BSD-Source-Code") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_0_BSL_1_0(self):        
        assert osadl_matrix.get_compatibility("Apache-1.0", "BSL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_0_CC0_1_0(self):        
        assert osadl_matrix.get_compatibility("Apache-1.0", "CC0-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_0_CDDL_1_0(self):        
        assert osadl_matrix.get_compatibility("Apache-1.0", "CDDL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Apache_1_0_CDDL_1_1(self):        
        assert osadl_matrix.get_compatibility("Apache-1.0", "CDDL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Apache_1_0_CPL_1_0(self):        
        assert osadl_matrix.get_compatibility("Apache-1.0", "CPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Apache_1_0_EFL_2_0(self):        
        assert osadl_matrix.get_compatibility("Apache-1.0", "EFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_0_EPL_1_0(self):        
        assert osadl_matrix.get_compatibility("Apache-1.0", "EPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Apache_1_0_EPL_2_0(self):        
        assert osadl_matrix.get_compatibility("Apache-1.0", "EPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Apache_1_0_EUPL_1_1(self):        
        assert osadl_matrix.get_compatibility("Apache-1.0", "EUPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Apache_1_0_EUPL_1_2(self):        
        assert osadl_matrix.get_compatibility("Apache-1.0", "EUPL-1.2") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Apache_1_0_FSFAP(self):        
        assert osadl_matrix.get_compatibility("Apache-1.0", "FSFAP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_0_FSFULLR(self):        
        assert osadl_matrix.get_compatibility("Apache-1.0", "FSFULLR") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_0_FTL(self):        
        assert osadl_matrix.get_compatibility("Apache-1.0", "FTL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_0_GPL_1_0_only(self):        
        assert osadl_matrix.get_compatibility("Apache-1.0", "GPL-1.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Apache_1_0_GPL_1_0_or_later(self):        
        assert osadl_matrix.get_compatibility("Apache-1.0", "GPL-1.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Apache_1_0_GPL_2_0_only(self):        
        assert osadl_matrix.get_compatibility("Apache-1.0", "GPL-2.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Apache_1_0_GPL_2_0_only_WITH_Classpath_exception_2_0(self):        
        assert osadl_matrix.get_compatibility("Apache-1.0", "GPL-2.0-only WITH Classpath-exception-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Apache_1_0_GPL_2_0_or_later(self):        
        assert osadl_matrix.get_compatibility("Apache-1.0", "GPL-2.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Apache_1_0_GPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("Apache-1.0", "GPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Apache_1_0_GPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("Apache-1.0", "GPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Apache_1_0_HPND(self):        
        assert osadl_matrix.get_compatibility("Apache-1.0", "HPND") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_0_IBM_pibs(self):        
        assert osadl_matrix.get_compatibility("Apache-1.0", "IBM-pibs") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_0_ICU(self):        
        assert osadl_matrix.get_compatibility("Apache-1.0", "ICU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_0_IJG(self):        
        assert osadl_matrix.get_compatibility("Apache-1.0", "IJG") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_0_IPL_1_0(self):        
        assert osadl_matrix.get_compatibility("Apache-1.0", "IPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Apache_1_0_ISC(self):        
        assert osadl_matrix.get_compatibility("Apache-1.0", "ISC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_0_Info_ZIP(self):        
        assert osadl_matrix.get_compatibility("Apache-1.0", "Info-ZIP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_0_LGPL_2_1_only(self):        
        assert osadl_matrix.get_compatibility("Apache-1.0", "LGPL-2.1-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Apache_1_0_LGPL_2_1_or_later(self):        
        assert osadl_matrix.get_compatibility("Apache-1.0", "LGPL-2.1-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Apache_1_0_LGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("Apache-1.0", "LGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Apache_1_0_LGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("Apache-1.0", "LGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Apache_1_0_Libpng(self):        
        assert osadl_matrix.get_compatibility("Apache-1.0", "Libpng") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_0_MIT(self):        
        assert osadl_matrix.get_compatibility("Apache-1.0", "MIT") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_0_MIT_CMU(self):        
        assert osadl_matrix.get_compatibility("Apache-1.0", "MIT-CMU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_0_MPL_1_1(self):        
        assert osadl_matrix.get_compatibility("Apache-1.0", "MPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Apache_1_0_MPL_2_0(self):        
        assert osadl_matrix.get_compatibility("Apache-1.0", "MPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Apache_1_0_MPL_2_0_no_copyleft_exception(self):        
        assert osadl_matrix.get_compatibility("Apache-1.0", "MPL-2.0-no-copyleft-exception") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Apache_1_0_MS_PL(self):        
        assert osadl_matrix.get_compatibility("Apache-1.0", "MS-PL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_Apache_1_0_MS_RL(self):        
        assert osadl_matrix.get_compatibility("Apache-1.0", "MS-RL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Apache_1_0_MirOS(self):        
        assert osadl_matrix.get_compatibility("Apache-1.0", "MirOS") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_0_NBPL_1_0(self):        
        assert osadl_matrix.get_compatibility("Apache-1.0", "NBPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_0_NTP(self):        
        assert osadl_matrix.get_compatibility("Apache-1.0", "NTP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_0_OSL_3_0(self):        
        assert osadl_matrix.get_compatibility("Apache-1.0", "OSL-3.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Apache_1_0_OpenSSL(self):        
        assert osadl_matrix.get_compatibility("Apache-1.0", "OpenSSL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_Apache_1_0_PHP_3_01(self):        
        assert osadl_matrix.get_compatibility("Apache-1.0", "PHP-3.01") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_0_PostgreSQL(self):        
        assert osadl_matrix.get_compatibility("Apache-1.0", "PostgreSQL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_0_Python_2_0(self):        
        assert osadl_matrix.get_compatibility("Apache-1.0", "Python-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_0_Qhull(self):        
        assert osadl_matrix.get_compatibility("Apache-1.0", "Qhull") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_0_RSA_MD(self):        
        assert osadl_matrix.get_compatibility("Apache-1.0", "RSA-MD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_0_Sleepycat(self):        
        assert osadl_matrix.get_compatibility("Apache-1.0", "Sleepycat") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Apache_1_0_SunPro(self):        
        assert osadl_matrix.get_compatibility("Apache-1.0", "SunPro") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_0_UPL_1_0(self):        
        assert osadl_matrix.get_compatibility("Apache-1.0", "UPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_0_Unicode_DFS_2015(self):        
        assert osadl_matrix.get_compatibility("Apache-1.0", "Unicode-DFS-2015") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_0_Unicode_DFS_2016(self):        
        assert osadl_matrix.get_compatibility("Apache-1.0", "Unicode-DFS-2016") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_0_Unlicense(self):        
        assert osadl_matrix.get_compatibility("Apache-1.0", "Unlicense") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_0_W3C(self):        
        assert osadl_matrix.get_compatibility("Apache-1.0", "W3C") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_0_W3C_19980720(self):        
        assert osadl_matrix.get_compatibility("Apache-1.0", "W3C-19980720") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_0_W3C_20150513(self):        
        assert osadl_matrix.get_compatibility("Apache-1.0", "W3C-20150513") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_0_WTFPL(self):        
        assert osadl_matrix.get_compatibility("Apache-1.0", "WTFPL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_0_X11(self):        
        assert osadl_matrix.get_compatibility("Apache-1.0", "X11") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_0_XFree86_1_1(self):        
        assert osadl_matrix.get_compatibility("Apache-1.0", "XFree86-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_0_ZPL_2_0(self):        
        assert osadl_matrix.get_compatibility("Apache-1.0", "ZPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_0_Zlib(self):        
        assert osadl_matrix.get_compatibility("Apache-1.0", "Zlib") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_0_bzip2_1_0_5(self):        
        assert osadl_matrix.get_compatibility("Apache-1.0", "bzip2-1.0.5") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_0_bzip2_1_0_6(self):        
        assert osadl_matrix.get_compatibility("Apache-1.0", "bzip2-1.0.6") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_0_curl(self):        
        assert osadl_matrix.get_compatibility("Apache-1.0", "curl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_0_libtiff(self):        
        assert osadl_matrix.get_compatibility("Apache-1.0", "libtiff") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_0_zlib_acknowledgement(self):        
        assert osadl_matrix.get_compatibility("Apache-1.0", "zlib-acknowledgement") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_1_0BSD(self):        
        assert osadl_matrix.get_compatibility("Apache-1.1", "0BSD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_1_AFL_2_0(self):        
        assert osadl_matrix.get_compatibility("Apache-1.1", "AFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_1_AFL_2_1(self):        
        assert osadl_matrix.get_compatibility("Apache-1.1", "AFL-2.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_1_AFL_3_0(self):        
        assert osadl_matrix.get_compatibility("Apache-1.1", "AFL-3.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_1_AGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("Apache-1.1", "AGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Apache_1_1_AGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("Apache-1.1", "AGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Apache_1_1_Apache_1_0(self):        
        assert osadl_matrix.get_compatibility("Apache-1.1", "Apache-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_1_Apache_1_1(self):        
        assert osadl_matrix.get_compatibility("Apache-1.1", "Apache-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_1_Apache_2_0(self):        
        assert osadl_matrix.get_compatibility("Apache-1.1", "Apache-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_1_Artistic_1_0(self):        
        assert osadl_matrix.get_compatibility("Apache-1.1", "Artistic-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_1_Artistic_1_0_Perl(self):        
        assert osadl_matrix.get_compatibility("Apache-1.1", "Artistic-1.0-Perl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_1_Artistic_2_0(self):        
        assert osadl_matrix.get_compatibility("Apache-1.1", "Artistic-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_1_BSD_1_Clause(self):        
        assert osadl_matrix.get_compatibility("Apache-1.1", "BSD-1-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_1_BSD_2_Clause(self):        
        assert osadl_matrix.get_compatibility("Apache-1.1", "BSD-2-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_1_BSD_2_Clause_Patent(self):        
        assert osadl_matrix.get_compatibility("Apache-1.1", "BSD-2-Clause-Patent") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_1_BSD_3_Clause(self):        
        assert osadl_matrix.get_compatibility("Apache-1.1", "BSD-3-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_1_BSD_4_Clause(self):        
        assert osadl_matrix.get_compatibility("Apache-1.1", "BSD-4-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_1_BSD_4_Clause_UC(self):        
        assert osadl_matrix.get_compatibility("Apache-1.1", "BSD-4-Clause-UC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_1_BSD_Source_Code(self):        
        assert osadl_matrix.get_compatibility("Apache-1.1", "BSD-Source-Code") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_1_BSL_1_0(self):        
        assert osadl_matrix.get_compatibility("Apache-1.1", "BSL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_1_CC0_1_0(self):        
        assert osadl_matrix.get_compatibility("Apache-1.1", "CC0-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_1_CDDL_1_0(self):        
        assert osadl_matrix.get_compatibility("Apache-1.1", "CDDL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Apache_1_1_CDDL_1_1(self):        
        assert osadl_matrix.get_compatibility("Apache-1.1", "CDDL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Apache_1_1_CPL_1_0(self):        
        assert osadl_matrix.get_compatibility("Apache-1.1", "CPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Apache_1_1_EFL_2_0(self):        
        assert osadl_matrix.get_compatibility("Apache-1.1", "EFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_1_EPL_1_0(self):        
        assert osadl_matrix.get_compatibility("Apache-1.1", "EPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Apache_1_1_EPL_2_0(self):        
        assert osadl_matrix.get_compatibility("Apache-1.1", "EPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Apache_1_1_EUPL_1_1(self):        
        assert osadl_matrix.get_compatibility("Apache-1.1", "EUPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Apache_1_1_EUPL_1_2(self):        
        assert osadl_matrix.get_compatibility("Apache-1.1", "EUPL-1.2") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Apache_1_1_FSFAP(self):        
        assert osadl_matrix.get_compatibility("Apache-1.1", "FSFAP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_1_FSFULLR(self):        
        assert osadl_matrix.get_compatibility("Apache-1.1", "FSFULLR") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_1_FTL(self):        
        assert osadl_matrix.get_compatibility("Apache-1.1", "FTL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_1_GPL_1_0_only(self):        
        assert osadl_matrix.get_compatibility("Apache-1.1", "GPL-1.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Apache_1_1_GPL_1_0_or_later(self):        
        assert osadl_matrix.get_compatibility("Apache-1.1", "GPL-1.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Apache_1_1_GPL_2_0_only(self):        
        assert osadl_matrix.get_compatibility("Apache-1.1", "GPL-2.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Apache_1_1_GPL_2_0_only_WITH_Classpath_exception_2_0(self):        
        assert osadl_matrix.get_compatibility("Apache-1.1", "GPL-2.0-only WITH Classpath-exception-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Apache_1_1_GPL_2_0_or_later(self):        
        assert osadl_matrix.get_compatibility("Apache-1.1", "GPL-2.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Apache_1_1_GPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("Apache-1.1", "GPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Apache_1_1_GPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("Apache-1.1", "GPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Apache_1_1_HPND(self):        
        assert osadl_matrix.get_compatibility("Apache-1.1", "HPND") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_1_IBM_pibs(self):        
        assert osadl_matrix.get_compatibility("Apache-1.1", "IBM-pibs") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_1_ICU(self):        
        assert osadl_matrix.get_compatibility("Apache-1.1", "ICU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_1_IJG(self):        
        assert osadl_matrix.get_compatibility("Apache-1.1", "IJG") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_1_IPL_1_0(self):        
        assert osadl_matrix.get_compatibility("Apache-1.1", "IPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Apache_1_1_ISC(self):        
        assert osadl_matrix.get_compatibility("Apache-1.1", "ISC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_1_Info_ZIP(self):        
        assert osadl_matrix.get_compatibility("Apache-1.1", "Info-ZIP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_1_LGPL_2_1_only(self):        
        assert osadl_matrix.get_compatibility("Apache-1.1", "LGPL-2.1-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Apache_1_1_LGPL_2_1_or_later(self):        
        assert osadl_matrix.get_compatibility("Apache-1.1", "LGPL-2.1-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Apache_1_1_LGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("Apache-1.1", "LGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Apache_1_1_LGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("Apache-1.1", "LGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Apache_1_1_Libpng(self):        
        assert osadl_matrix.get_compatibility("Apache-1.1", "Libpng") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_1_MIT(self):        
        assert osadl_matrix.get_compatibility("Apache-1.1", "MIT") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_1_MIT_CMU(self):        
        assert osadl_matrix.get_compatibility("Apache-1.1", "MIT-CMU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_1_MPL_1_1(self):        
        assert osadl_matrix.get_compatibility("Apache-1.1", "MPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Apache_1_1_MPL_2_0(self):        
        assert osadl_matrix.get_compatibility("Apache-1.1", "MPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Apache_1_1_MPL_2_0_no_copyleft_exception(self):        
        assert osadl_matrix.get_compatibility("Apache-1.1", "MPL-2.0-no-copyleft-exception") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Apache_1_1_MS_PL(self):        
        assert osadl_matrix.get_compatibility("Apache-1.1", "MS-PL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_Apache_1_1_MS_RL(self):        
        assert osadl_matrix.get_compatibility("Apache-1.1", "MS-RL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Apache_1_1_MirOS(self):        
        assert osadl_matrix.get_compatibility("Apache-1.1", "MirOS") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_1_NBPL_1_0(self):        
        assert osadl_matrix.get_compatibility("Apache-1.1", "NBPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_1_NTP(self):        
        assert osadl_matrix.get_compatibility("Apache-1.1", "NTP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_1_OSL_3_0(self):        
        assert osadl_matrix.get_compatibility("Apache-1.1", "OSL-3.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Apache_1_1_OpenSSL(self):        
        assert osadl_matrix.get_compatibility("Apache-1.1", "OpenSSL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_Apache_1_1_PHP_3_01(self):        
        assert osadl_matrix.get_compatibility("Apache-1.1", "PHP-3.01") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_1_PostgreSQL(self):        
        assert osadl_matrix.get_compatibility("Apache-1.1", "PostgreSQL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_1_Python_2_0(self):        
        assert osadl_matrix.get_compatibility("Apache-1.1", "Python-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_1_Qhull(self):        
        assert osadl_matrix.get_compatibility("Apache-1.1", "Qhull") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_1_RSA_MD(self):        
        assert osadl_matrix.get_compatibility("Apache-1.1", "RSA-MD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_1_Sleepycat(self):        
        assert osadl_matrix.get_compatibility("Apache-1.1", "Sleepycat") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Apache_1_1_SunPro(self):        
        assert osadl_matrix.get_compatibility("Apache-1.1", "SunPro") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_1_UPL_1_0(self):        
        assert osadl_matrix.get_compatibility("Apache-1.1", "UPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_1_Unicode_DFS_2015(self):        
        assert osadl_matrix.get_compatibility("Apache-1.1", "Unicode-DFS-2015") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_1_Unicode_DFS_2016(self):        
        assert osadl_matrix.get_compatibility("Apache-1.1", "Unicode-DFS-2016") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_1_Unlicense(self):        
        assert osadl_matrix.get_compatibility("Apache-1.1", "Unlicense") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_1_W3C(self):        
        assert osadl_matrix.get_compatibility("Apache-1.1", "W3C") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_1_W3C_19980720(self):        
        assert osadl_matrix.get_compatibility("Apache-1.1", "W3C-19980720") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_1_W3C_20150513(self):        
        assert osadl_matrix.get_compatibility("Apache-1.1", "W3C-20150513") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_1_WTFPL(self):        
        assert osadl_matrix.get_compatibility("Apache-1.1", "WTFPL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_1_X11(self):        
        assert osadl_matrix.get_compatibility("Apache-1.1", "X11") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_1_XFree86_1_1(self):        
        assert osadl_matrix.get_compatibility("Apache-1.1", "XFree86-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_1_ZPL_2_0(self):        
        assert osadl_matrix.get_compatibility("Apache-1.1", "ZPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_1_Zlib(self):        
        assert osadl_matrix.get_compatibility("Apache-1.1", "Zlib") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_1_bzip2_1_0_5(self):        
        assert osadl_matrix.get_compatibility("Apache-1.1", "bzip2-1.0.5") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_1_bzip2_1_0_6(self):        
        assert osadl_matrix.get_compatibility("Apache-1.1", "bzip2-1.0.6") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_1_curl(self):        
        assert osadl_matrix.get_compatibility("Apache-1.1", "curl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_1_libtiff(self):        
        assert osadl_matrix.get_compatibility("Apache-1.1", "libtiff") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_1_1_zlib_acknowledgement(self):        
        assert osadl_matrix.get_compatibility("Apache-1.1", "zlib-acknowledgement") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_2_0_0BSD(self):        
        assert osadl_matrix.get_compatibility("Apache-2.0", "0BSD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_2_0_AFL_2_0(self):        
        assert osadl_matrix.get_compatibility("Apache-2.0", "AFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_2_0_AFL_2_1(self):        
        assert osadl_matrix.get_compatibility("Apache-2.0", "AFL-2.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_2_0_AFL_3_0(self):        
        assert osadl_matrix.get_compatibility("Apache-2.0", "AFL-3.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_2_0_AGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("Apache-2.0", "AGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Apache_2_0_AGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("Apache-2.0", "AGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Apache_2_0_Apache_1_0(self):        
        assert osadl_matrix.get_compatibility("Apache-2.0", "Apache-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_2_0_Apache_1_1(self):        
        assert osadl_matrix.get_compatibility("Apache-2.0", "Apache-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_2_0_Apache_2_0(self):        
        assert osadl_matrix.get_compatibility("Apache-2.0", "Apache-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_2_0_Artistic_1_0(self):        
        assert osadl_matrix.get_compatibility("Apache-2.0", "Artistic-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_2_0_Artistic_1_0_Perl(self):        
        assert osadl_matrix.get_compatibility("Apache-2.0", "Artistic-1.0-Perl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_2_0_Artistic_2_0(self):        
        assert osadl_matrix.get_compatibility("Apache-2.0", "Artistic-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_2_0_BSD_1_Clause(self):        
        assert osadl_matrix.get_compatibility("Apache-2.0", "BSD-1-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_2_0_BSD_2_Clause(self):        
        assert osadl_matrix.get_compatibility("Apache-2.0", "BSD-2-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_2_0_BSD_2_Clause_Patent(self):        
        assert osadl_matrix.get_compatibility("Apache-2.0", "BSD-2-Clause-Patent") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_2_0_BSD_3_Clause(self):        
        assert osadl_matrix.get_compatibility("Apache-2.0", "BSD-3-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_2_0_BSD_4_Clause(self):        
        assert osadl_matrix.get_compatibility("Apache-2.0", "BSD-4-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_2_0_BSD_4_Clause_UC(self):        
        assert osadl_matrix.get_compatibility("Apache-2.0", "BSD-4-Clause-UC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_2_0_BSD_Source_Code(self):        
        assert osadl_matrix.get_compatibility("Apache-2.0", "BSD-Source-Code") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_2_0_BSL_1_0(self):        
        assert osadl_matrix.get_compatibility("Apache-2.0", "BSL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_2_0_CC0_1_0(self):        
        assert osadl_matrix.get_compatibility("Apache-2.0", "CC0-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_2_0_CDDL_1_0(self):        
        assert osadl_matrix.get_compatibility("Apache-2.0", "CDDL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Apache_2_0_CDDL_1_1(self):        
        assert osadl_matrix.get_compatibility("Apache-2.0", "CDDL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Apache_2_0_CPL_1_0(self):        
        assert osadl_matrix.get_compatibility("Apache-2.0", "CPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Apache_2_0_EFL_2_0(self):        
        assert osadl_matrix.get_compatibility("Apache-2.0", "EFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_2_0_EPL_1_0(self):        
        assert osadl_matrix.get_compatibility("Apache-2.0", "EPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Apache_2_0_EPL_2_0(self):        
        assert osadl_matrix.get_compatibility("Apache-2.0", "EPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Apache_2_0_EUPL_1_1(self):        
        assert osadl_matrix.get_compatibility("Apache-2.0", "EUPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Apache_2_0_EUPL_1_2(self):        
        assert osadl_matrix.get_compatibility("Apache-2.0", "EUPL-1.2") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Apache_2_0_FSFAP(self):        
        assert osadl_matrix.get_compatibility("Apache-2.0", "FSFAP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_2_0_FSFULLR(self):        
        assert osadl_matrix.get_compatibility("Apache-2.0", "FSFULLR") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_2_0_FTL(self):        
        assert osadl_matrix.get_compatibility("Apache-2.0", "FTL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_2_0_GPL_1_0_only(self):        
        assert osadl_matrix.get_compatibility("Apache-2.0", "GPL-1.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Apache_2_0_GPL_1_0_or_later(self):        
        assert osadl_matrix.get_compatibility("Apache-2.0", "GPL-1.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Apache_2_0_GPL_2_0_only(self):        
        assert osadl_matrix.get_compatibility("Apache-2.0", "GPL-2.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Apache_2_0_GPL_2_0_only_WITH_Classpath_exception_2_0(self):        
        assert osadl_matrix.get_compatibility("Apache-2.0", "GPL-2.0-only WITH Classpath-exception-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Apache_2_0_GPL_2_0_or_later(self):        
        assert osadl_matrix.get_compatibility("Apache-2.0", "GPL-2.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Apache_2_0_GPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("Apache-2.0", "GPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Apache_2_0_GPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("Apache-2.0", "GPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Apache_2_0_HPND(self):        
        assert osadl_matrix.get_compatibility("Apache-2.0", "HPND") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_2_0_IBM_pibs(self):        
        assert osadl_matrix.get_compatibility("Apache-2.0", "IBM-pibs") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_2_0_ICU(self):        
        assert osadl_matrix.get_compatibility("Apache-2.0", "ICU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_2_0_IJG(self):        
        assert osadl_matrix.get_compatibility("Apache-2.0", "IJG") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_2_0_IPL_1_0(self):        
        assert osadl_matrix.get_compatibility("Apache-2.0", "IPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Apache_2_0_ISC(self):        
        assert osadl_matrix.get_compatibility("Apache-2.0", "ISC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_2_0_Info_ZIP(self):        
        assert osadl_matrix.get_compatibility("Apache-2.0", "Info-ZIP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_2_0_LGPL_2_1_only(self):        
        assert osadl_matrix.get_compatibility("Apache-2.0", "LGPL-2.1-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Apache_2_0_LGPL_2_1_or_later(self):        
        assert osadl_matrix.get_compatibility("Apache-2.0", "LGPL-2.1-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Apache_2_0_LGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("Apache-2.0", "LGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Apache_2_0_LGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("Apache-2.0", "LGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Apache_2_0_Libpng(self):        
        assert osadl_matrix.get_compatibility("Apache-2.0", "Libpng") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_2_0_MIT(self):        
        assert osadl_matrix.get_compatibility("Apache-2.0", "MIT") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_2_0_MIT_CMU(self):        
        assert osadl_matrix.get_compatibility("Apache-2.0", "MIT-CMU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_2_0_MPL_1_1(self):        
        assert osadl_matrix.get_compatibility("Apache-2.0", "MPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Apache_2_0_MPL_2_0(self):        
        assert osadl_matrix.get_compatibility("Apache-2.0", "MPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Apache_2_0_MPL_2_0_no_copyleft_exception(self):        
        assert osadl_matrix.get_compatibility("Apache-2.0", "MPL-2.0-no-copyleft-exception") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Apache_2_0_MS_PL(self):        
        assert osadl_matrix.get_compatibility("Apache-2.0", "MS-PL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_Apache_2_0_MS_RL(self):        
        assert osadl_matrix.get_compatibility("Apache-2.0", "MS-RL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Apache_2_0_MirOS(self):        
        assert osadl_matrix.get_compatibility("Apache-2.0", "MirOS") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_2_0_NBPL_1_0(self):        
        assert osadl_matrix.get_compatibility("Apache-2.0", "NBPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_2_0_NTP(self):        
        assert osadl_matrix.get_compatibility("Apache-2.0", "NTP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_2_0_OSL_3_0(self):        
        assert osadl_matrix.get_compatibility("Apache-2.0", "OSL-3.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Apache_2_0_OpenSSL(self):        
        assert osadl_matrix.get_compatibility("Apache-2.0", "OpenSSL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_Apache_2_0_PHP_3_01(self):        
        assert osadl_matrix.get_compatibility("Apache-2.0", "PHP-3.01") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_2_0_PostgreSQL(self):        
        assert osadl_matrix.get_compatibility("Apache-2.0", "PostgreSQL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_2_0_Python_2_0(self):        
        assert osadl_matrix.get_compatibility("Apache-2.0", "Python-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_2_0_Qhull(self):        
        assert osadl_matrix.get_compatibility("Apache-2.0", "Qhull") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_2_0_RSA_MD(self):        
        assert osadl_matrix.get_compatibility("Apache-2.0", "RSA-MD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_2_0_Sleepycat(self):        
        assert osadl_matrix.get_compatibility("Apache-2.0", "Sleepycat") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Apache_2_0_SunPro(self):        
        assert osadl_matrix.get_compatibility("Apache-2.0", "SunPro") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_2_0_UPL_1_0(self):        
        assert osadl_matrix.get_compatibility("Apache-2.0", "UPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_2_0_Unicode_DFS_2015(self):        
        assert osadl_matrix.get_compatibility("Apache-2.0", "Unicode-DFS-2015") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_2_0_Unicode_DFS_2016(self):        
        assert osadl_matrix.get_compatibility("Apache-2.0", "Unicode-DFS-2016") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_2_0_Unlicense(self):        
        assert osadl_matrix.get_compatibility("Apache-2.0", "Unlicense") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_2_0_W3C(self):        
        assert osadl_matrix.get_compatibility("Apache-2.0", "W3C") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_2_0_W3C_19980720(self):        
        assert osadl_matrix.get_compatibility("Apache-2.0", "W3C-19980720") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_2_0_W3C_20150513(self):        
        assert osadl_matrix.get_compatibility("Apache-2.0", "W3C-20150513") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_2_0_WTFPL(self):        
        assert osadl_matrix.get_compatibility("Apache-2.0", "WTFPL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_2_0_X11(self):        
        assert osadl_matrix.get_compatibility("Apache-2.0", "X11") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_2_0_XFree86_1_1(self):        
        assert osadl_matrix.get_compatibility("Apache-2.0", "XFree86-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_2_0_ZPL_2_0(self):        
        assert osadl_matrix.get_compatibility("Apache-2.0", "ZPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_2_0_Zlib(self):        
        assert osadl_matrix.get_compatibility("Apache-2.0", "Zlib") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_2_0_bzip2_1_0_5(self):        
        assert osadl_matrix.get_compatibility("Apache-2.0", "bzip2-1.0.5") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_2_0_bzip2_1_0_6(self):        
        assert osadl_matrix.get_compatibility("Apache-2.0", "bzip2-1.0.6") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_2_0_curl(self):        
        assert osadl_matrix.get_compatibility("Apache-2.0", "curl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_2_0_libtiff(self):        
        assert osadl_matrix.get_compatibility("Apache-2.0", "libtiff") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Apache_2_0_zlib_acknowledgement(self):        
        assert osadl_matrix.get_compatibility("Apache-2.0", "zlib-acknowledgement") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_0BSD(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0", "0BSD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_AFL_2_0(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0", "AFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_AFL_2_1(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0", "AFL-2.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_AFL_3_0(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0", "AFL-3.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_AGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0", "AGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Artistic_1_0_AGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0", "AGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Artistic_1_0_Apache_1_0(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0", "Apache-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_Apache_1_1(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0", "Apache-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_Apache_2_0(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0", "Apache-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_Artistic_1_0(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0", "Artistic-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_Artistic_1_0_Perl(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0", "Artistic-1.0-Perl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_Artistic_2_0(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0", "Artistic-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_BSD_1_Clause(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0", "BSD-1-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_BSD_2_Clause(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0", "BSD-2-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_BSD_2_Clause_Patent(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0", "BSD-2-Clause-Patent") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_BSD_3_Clause(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0", "BSD-3-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_BSD_4_Clause(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0", "BSD-4-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_BSD_4_Clause_UC(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0", "BSD-4-Clause-UC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_BSD_Source_Code(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0", "BSD-Source-Code") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_BSL_1_0(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0", "BSL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_CC0_1_0(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0", "CC0-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_CDDL_1_0(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0", "CDDL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Artistic_1_0_CDDL_1_1(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0", "CDDL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Artistic_1_0_CPL_1_0(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0", "CPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Artistic_1_0_EFL_2_0(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0", "EFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_EPL_1_0(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0", "EPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Artistic_1_0_EPL_2_0(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0", "EPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Artistic_1_0_EUPL_1_1(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0", "EUPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Artistic_1_0_EUPL_1_2(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0", "EUPL-1.2") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Artistic_1_0_FSFAP(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0", "FSFAP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_FSFULLR(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0", "FSFULLR") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_FTL(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0", "FTL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_GPL_1_0_only(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0", "GPL-1.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Artistic_1_0_GPL_1_0_or_later(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0", "GPL-1.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Artistic_1_0_GPL_2_0_only(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0", "GPL-2.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Artistic_1_0_GPL_2_0_only_WITH_Classpath_exception_2_0(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0", "GPL-2.0-only WITH Classpath-exception-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Artistic_1_0_GPL_2_0_or_later(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0", "GPL-2.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Artistic_1_0_GPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0", "GPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Artistic_1_0_GPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0", "GPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Artistic_1_0_HPND(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0", "HPND") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_IBM_pibs(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0", "IBM-pibs") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_ICU(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0", "ICU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_IJG(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0", "IJG") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_IPL_1_0(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0", "IPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Artistic_1_0_ISC(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0", "ISC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_Info_ZIP(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0", "Info-ZIP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_LGPL_2_1_only(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0", "LGPL-2.1-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Artistic_1_0_LGPL_2_1_or_later(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0", "LGPL-2.1-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Artistic_1_0_LGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0", "LGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Artistic_1_0_LGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0", "LGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Artistic_1_0_Libpng(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0", "Libpng") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_MIT(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0", "MIT") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_MIT_CMU(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0", "MIT-CMU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_MPL_1_1(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0", "MPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Artistic_1_0_MPL_2_0(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0", "MPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Artistic_1_0_MPL_2_0_no_copyleft_exception(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0", "MPL-2.0-no-copyleft-exception") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Artistic_1_0_MS_PL(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0", "MS-PL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_Artistic_1_0_MS_RL(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0", "MS-RL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Artistic_1_0_MirOS(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0", "MirOS") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_NBPL_1_0(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0", "NBPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_NTP(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0", "NTP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_OSL_3_0(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0", "OSL-3.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Artistic_1_0_OpenSSL(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0", "OpenSSL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_Artistic_1_0_PHP_3_01(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0", "PHP-3.01") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_PostgreSQL(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0", "PostgreSQL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_Python_2_0(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0", "Python-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_Qhull(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0", "Qhull") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_RSA_MD(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0", "RSA-MD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_Sleepycat(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0", "Sleepycat") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Artistic_1_0_SunPro(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0", "SunPro") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_UPL_1_0(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0", "UPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_Unicode_DFS_2015(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0", "Unicode-DFS-2015") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_Unicode_DFS_2016(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0", "Unicode-DFS-2016") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_Unlicense(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0", "Unlicense") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_W3C(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0", "W3C") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_W3C_19980720(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0", "W3C-19980720") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_W3C_20150513(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0", "W3C-20150513") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_WTFPL(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0", "WTFPL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_X11(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0", "X11") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_XFree86_1_1(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0", "XFree86-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_ZPL_2_0(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0", "ZPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_Zlib(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0", "Zlib") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_bzip2_1_0_5(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0", "bzip2-1.0.5") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_bzip2_1_0_6(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0", "bzip2-1.0.6") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_curl(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0", "curl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_libtiff(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0", "libtiff") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_zlib_acknowledgement(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0", "zlib-acknowledgement") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_Perl_0BSD(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0-Perl", "0BSD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_Perl_AFL_2_0(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0-Perl", "AFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_Perl_AFL_2_1(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0-Perl", "AFL-2.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_Perl_AFL_3_0(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0-Perl", "AFL-3.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_Perl_AGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0-Perl", "AGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Artistic_1_0_Perl_AGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0-Perl", "AGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Artistic_1_0_Perl_Apache_1_0(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0-Perl", "Apache-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_Perl_Apache_1_1(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0-Perl", "Apache-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_Perl_Apache_2_0(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0-Perl", "Apache-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_Perl_Artistic_1_0(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0-Perl", "Artistic-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_Perl_Artistic_1_0_Perl(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0-Perl", "Artistic-1.0-Perl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_Perl_Artistic_2_0(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0-Perl", "Artistic-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_Perl_BSD_1_Clause(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0-Perl", "BSD-1-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_Perl_BSD_2_Clause(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0-Perl", "BSD-2-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_Perl_BSD_2_Clause_Patent(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0-Perl", "BSD-2-Clause-Patent") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_Perl_BSD_3_Clause(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0-Perl", "BSD-3-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_Perl_BSD_4_Clause(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0-Perl", "BSD-4-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_Perl_BSD_4_Clause_UC(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0-Perl", "BSD-4-Clause-UC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_Perl_BSD_Source_Code(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0-Perl", "BSD-Source-Code") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_Perl_BSL_1_0(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0-Perl", "BSL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_Perl_CC0_1_0(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0-Perl", "CC0-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_Perl_CDDL_1_0(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0-Perl", "CDDL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Artistic_1_0_Perl_CDDL_1_1(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0-Perl", "CDDL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Artistic_1_0_Perl_CPL_1_0(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0-Perl", "CPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Artistic_1_0_Perl_EFL_2_0(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0-Perl", "EFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_Perl_EPL_1_0(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0-Perl", "EPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Artistic_1_0_Perl_EPL_2_0(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0-Perl", "EPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Artistic_1_0_Perl_EUPL_1_1(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0-Perl", "EUPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Artistic_1_0_Perl_EUPL_1_2(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0-Perl", "EUPL-1.2") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Artistic_1_0_Perl_FSFAP(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0-Perl", "FSFAP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_Perl_FSFULLR(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0-Perl", "FSFULLR") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_Perl_FTL(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0-Perl", "FTL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_Perl_GPL_1_0_only(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0-Perl", "GPL-1.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Artistic_1_0_Perl_GPL_1_0_or_later(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0-Perl", "GPL-1.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Artistic_1_0_Perl_GPL_2_0_only(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0-Perl", "GPL-2.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Artistic_1_0_Perl_GPL_2_0_only_WITH_Classpath_exception_2_0(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0-Perl", "GPL-2.0-only WITH Classpath-exception-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Artistic_1_0_Perl_GPL_2_0_or_later(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0-Perl", "GPL-2.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Artistic_1_0_Perl_GPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0-Perl", "GPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Artistic_1_0_Perl_GPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0-Perl", "GPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Artistic_1_0_Perl_HPND(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0-Perl", "HPND") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_Perl_IBM_pibs(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0-Perl", "IBM-pibs") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_Perl_ICU(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0-Perl", "ICU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_Perl_IJG(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0-Perl", "IJG") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_Perl_IPL_1_0(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0-Perl", "IPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Artistic_1_0_Perl_ISC(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0-Perl", "ISC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_Perl_Info_ZIP(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0-Perl", "Info-ZIP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_Perl_LGPL_2_1_only(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0-Perl", "LGPL-2.1-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Artistic_1_0_Perl_LGPL_2_1_or_later(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0-Perl", "LGPL-2.1-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Artistic_1_0_Perl_LGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0-Perl", "LGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Artistic_1_0_Perl_LGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0-Perl", "LGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Artistic_1_0_Perl_Libpng(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0-Perl", "Libpng") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_Perl_MIT(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0-Perl", "MIT") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_Perl_MIT_CMU(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0-Perl", "MIT-CMU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_Perl_MPL_1_1(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0-Perl", "MPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Artistic_1_0_Perl_MPL_2_0(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0-Perl", "MPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Artistic_1_0_Perl_MPL_2_0_no_copyleft_exception(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0-Perl", "MPL-2.0-no-copyleft-exception") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Artistic_1_0_Perl_MS_PL(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0-Perl", "MS-PL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_Artistic_1_0_Perl_MS_RL(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0-Perl", "MS-RL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Artistic_1_0_Perl_MirOS(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0-Perl", "MirOS") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_Perl_NBPL_1_0(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0-Perl", "NBPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_Perl_NTP(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0-Perl", "NTP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_Perl_OSL_3_0(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0-Perl", "OSL-3.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Artistic_1_0_Perl_OpenSSL(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0-Perl", "OpenSSL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_Artistic_1_0_Perl_PHP_3_01(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0-Perl", "PHP-3.01") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_Perl_PostgreSQL(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0-Perl", "PostgreSQL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_Perl_Python_2_0(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0-Perl", "Python-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_Perl_Qhull(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0-Perl", "Qhull") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_Perl_RSA_MD(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0-Perl", "RSA-MD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_Perl_Sleepycat(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0-Perl", "Sleepycat") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Artistic_1_0_Perl_SunPro(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0-Perl", "SunPro") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_Perl_UPL_1_0(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0-Perl", "UPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_Perl_Unicode_DFS_2015(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0-Perl", "Unicode-DFS-2015") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_Perl_Unicode_DFS_2016(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0-Perl", "Unicode-DFS-2016") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_Perl_Unlicense(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0-Perl", "Unlicense") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_Perl_W3C(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0-Perl", "W3C") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_Perl_W3C_19980720(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0-Perl", "W3C-19980720") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_Perl_W3C_20150513(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0-Perl", "W3C-20150513") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_Perl_WTFPL(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0-Perl", "WTFPL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_Perl_X11(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0-Perl", "X11") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_Perl_XFree86_1_1(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0-Perl", "XFree86-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_Perl_ZPL_2_0(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0-Perl", "ZPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_Perl_Zlib(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0-Perl", "Zlib") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_Perl_bzip2_1_0_5(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0-Perl", "bzip2-1.0.5") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_Perl_bzip2_1_0_6(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0-Perl", "bzip2-1.0.6") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_Perl_curl(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0-Perl", "curl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_Perl_libtiff(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0-Perl", "libtiff") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_1_0_Perl_zlib_acknowledgement(self):        
        assert osadl_matrix.get_compatibility("Artistic-1.0-Perl", "zlib-acknowledgement") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_2_0_0BSD(self):        
        assert osadl_matrix.get_compatibility("Artistic-2.0", "0BSD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_2_0_AFL_2_0(self):        
        assert osadl_matrix.get_compatibility("Artistic-2.0", "AFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_2_0_AFL_2_1(self):        
        assert osadl_matrix.get_compatibility("Artistic-2.0", "AFL-2.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_2_0_AFL_3_0(self):        
        assert osadl_matrix.get_compatibility("Artistic-2.0", "AFL-3.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_2_0_AGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("Artistic-2.0", "AGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Artistic_2_0_AGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("Artistic-2.0", "AGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Artistic_2_0_Apache_1_0(self):        
        assert osadl_matrix.get_compatibility("Artistic-2.0", "Apache-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_2_0_Apache_1_1(self):        
        assert osadl_matrix.get_compatibility("Artistic-2.0", "Apache-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_2_0_Apache_2_0(self):        
        assert osadl_matrix.get_compatibility("Artistic-2.0", "Apache-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_2_0_Artistic_1_0(self):        
        assert osadl_matrix.get_compatibility("Artistic-2.0", "Artistic-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_2_0_Artistic_1_0_Perl(self):        
        assert osadl_matrix.get_compatibility("Artistic-2.0", "Artistic-1.0-Perl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_2_0_Artistic_2_0(self):        
        assert osadl_matrix.get_compatibility("Artistic-2.0", "Artistic-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_2_0_BSD_1_Clause(self):        
        assert osadl_matrix.get_compatibility("Artistic-2.0", "BSD-1-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_2_0_BSD_2_Clause(self):        
        assert osadl_matrix.get_compatibility("Artistic-2.0", "BSD-2-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_2_0_BSD_2_Clause_Patent(self):        
        assert osadl_matrix.get_compatibility("Artistic-2.0", "BSD-2-Clause-Patent") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_2_0_BSD_3_Clause(self):        
        assert osadl_matrix.get_compatibility("Artistic-2.0", "BSD-3-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_2_0_BSD_4_Clause(self):        
        assert osadl_matrix.get_compatibility("Artistic-2.0", "BSD-4-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_2_0_BSD_4_Clause_UC(self):        
        assert osadl_matrix.get_compatibility("Artistic-2.0", "BSD-4-Clause-UC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_2_0_BSD_Source_Code(self):        
        assert osadl_matrix.get_compatibility("Artistic-2.0", "BSD-Source-Code") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_2_0_BSL_1_0(self):        
        assert osadl_matrix.get_compatibility("Artistic-2.0", "BSL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_2_0_CC0_1_0(self):        
        assert osadl_matrix.get_compatibility("Artistic-2.0", "CC0-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_2_0_CDDL_1_0(self):        
        assert osadl_matrix.get_compatibility("Artistic-2.0", "CDDL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Artistic_2_0_CDDL_1_1(self):        
        assert osadl_matrix.get_compatibility("Artistic-2.0", "CDDL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Artistic_2_0_CPL_1_0(self):        
        assert osadl_matrix.get_compatibility("Artistic-2.0", "CPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Artistic_2_0_EFL_2_0(self):        
        assert osadl_matrix.get_compatibility("Artistic-2.0", "EFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_2_0_EPL_1_0(self):        
        assert osadl_matrix.get_compatibility("Artistic-2.0", "EPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Artistic_2_0_EPL_2_0(self):        
        assert osadl_matrix.get_compatibility("Artistic-2.0", "EPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Artistic_2_0_EUPL_1_1(self):        
        assert osadl_matrix.get_compatibility("Artistic-2.0", "EUPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Artistic_2_0_EUPL_1_2(self):        
        assert osadl_matrix.get_compatibility("Artistic-2.0", "EUPL-1.2") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Artistic_2_0_FSFAP(self):        
        assert osadl_matrix.get_compatibility("Artistic-2.0", "FSFAP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_2_0_FSFULLR(self):        
        assert osadl_matrix.get_compatibility("Artistic-2.0", "FSFULLR") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_2_0_FTL(self):        
        assert osadl_matrix.get_compatibility("Artistic-2.0", "FTL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_2_0_GPL_1_0_only(self):        
        assert osadl_matrix.get_compatibility("Artistic-2.0", "GPL-1.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Artistic_2_0_GPL_1_0_or_later(self):        
        assert osadl_matrix.get_compatibility("Artistic-2.0", "GPL-1.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Artistic_2_0_GPL_2_0_only(self):        
        assert osadl_matrix.get_compatibility("Artistic-2.0", "GPL-2.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Artistic_2_0_GPL_2_0_only_WITH_Classpath_exception_2_0(self):        
        assert osadl_matrix.get_compatibility("Artistic-2.0", "GPL-2.0-only WITH Classpath-exception-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Artistic_2_0_GPL_2_0_or_later(self):        
        assert osadl_matrix.get_compatibility("Artistic-2.0", "GPL-2.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Artistic_2_0_GPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("Artistic-2.0", "GPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Artistic_2_0_GPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("Artistic-2.0", "GPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Artistic_2_0_HPND(self):        
        assert osadl_matrix.get_compatibility("Artistic-2.0", "HPND") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_2_0_IBM_pibs(self):        
        assert osadl_matrix.get_compatibility("Artistic-2.0", "IBM-pibs") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_2_0_ICU(self):        
        assert osadl_matrix.get_compatibility("Artistic-2.0", "ICU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_2_0_IJG(self):        
        assert osadl_matrix.get_compatibility("Artistic-2.0", "IJG") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_2_0_IPL_1_0(self):        
        assert osadl_matrix.get_compatibility("Artistic-2.0", "IPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Artistic_2_0_ISC(self):        
        assert osadl_matrix.get_compatibility("Artistic-2.0", "ISC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_2_0_Info_ZIP(self):        
        assert osadl_matrix.get_compatibility("Artistic-2.0", "Info-ZIP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_2_0_LGPL_2_1_only(self):        
        assert osadl_matrix.get_compatibility("Artistic-2.0", "LGPL-2.1-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Artistic_2_0_LGPL_2_1_or_later(self):        
        assert osadl_matrix.get_compatibility("Artistic-2.0", "LGPL-2.1-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Artistic_2_0_LGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("Artistic-2.0", "LGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Artistic_2_0_LGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("Artistic-2.0", "LGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Artistic_2_0_Libpng(self):        
        assert osadl_matrix.get_compatibility("Artistic-2.0", "Libpng") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_2_0_MIT(self):        
        assert osadl_matrix.get_compatibility("Artistic-2.0", "MIT") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_2_0_MIT_CMU(self):        
        assert osadl_matrix.get_compatibility("Artistic-2.0", "MIT-CMU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_2_0_MPL_1_1(self):        
        assert osadl_matrix.get_compatibility("Artistic-2.0", "MPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Artistic_2_0_MPL_2_0(self):        
        assert osadl_matrix.get_compatibility("Artistic-2.0", "MPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Artistic_2_0_MPL_2_0_no_copyleft_exception(self):        
        assert osadl_matrix.get_compatibility("Artistic-2.0", "MPL-2.0-no-copyleft-exception") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Artistic_2_0_MS_PL(self):        
        assert osadl_matrix.get_compatibility("Artistic-2.0", "MS-PL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_Artistic_2_0_MS_RL(self):        
        assert osadl_matrix.get_compatibility("Artistic-2.0", "MS-RL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Artistic_2_0_MirOS(self):        
        assert osadl_matrix.get_compatibility("Artistic-2.0", "MirOS") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_2_0_NBPL_1_0(self):        
        assert osadl_matrix.get_compatibility("Artistic-2.0", "NBPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_2_0_NTP(self):        
        assert osadl_matrix.get_compatibility("Artistic-2.0", "NTP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_2_0_OSL_3_0(self):        
        assert osadl_matrix.get_compatibility("Artistic-2.0", "OSL-3.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Artistic_2_0_OpenSSL(self):        
        assert osadl_matrix.get_compatibility("Artistic-2.0", "OpenSSL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_Artistic_2_0_PHP_3_01(self):        
        assert osadl_matrix.get_compatibility("Artistic-2.0", "PHP-3.01") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_2_0_PostgreSQL(self):        
        assert osadl_matrix.get_compatibility("Artistic-2.0", "PostgreSQL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_2_0_Python_2_0(self):        
        assert osadl_matrix.get_compatibility("Artistic-2.0", "Python-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_2_0_Qhull(self):        
        assert osadl_matrix.get_compatibility("Artistic-2.0", "Qhull") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_2_0_RSA_MD(self):        
        assert osadl_matrix.get_compatibility("Artistic-2.0", "RSA-MD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_2_0_Sleepycat(self):        
        assert osadl_matrix.get_compatibility("Artistic-2.0", "Sleepycat") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Artistic_2_0_SunPro(self):        
        assert osadl_matrix.get_compatibility("Artistic-2.0", "SunPro") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_2_0_UPL_1_0(self):        
        assert osadl_matrix.get_compatibility("Artistic-2.0", "UPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_2_0_Unicode_DFS_2015(self):        
        assert osadl_matrix.get_compatibility("Artistic-2.0", "Unicode-DFS-2015") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_2_0_Unicode_DFS_2016(self):        
        assert osadl_matrix.get_compatibility("Artistic-2.0", "Unicode-DFS-2016") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_2_0_Unlicense(self):        
        assert osadl_matrix.get_compatibility("Artistic-2.0", "Unlicense") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_2_0_W3C(self):        
        assert osadl_matrix.get_compatibility("Artistic-2.0", "W3C") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_2_0_W3C_19980720(self):        
        assert osadl_matrix.get_compatibility("Artistic-2.0", "W3C-19980720") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_2_0_W3C_20150513(self):        
        assert osadl_matrix.get_compatibility("Artistic-2.0", "W3C-20150513") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_2_0_WTFPL(self):        
        assert osadl_matrix.get_compatibility("Artistic-2.0", "WTFPL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_2_0_X11(self):        
        assert osadl_matrix.get_compatibility("Artistic-2.0", "X11") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_2_0_XFree86_1_1(self):        
        assert osadl_matrix.get_compatibility("Artistic-2.0", "XFree86-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_2_0_ZPL_2_0(self):        
        assert osadl_matrix.get_compatibility("Artistic-2.0", "ZPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_2_0_Zlib(self):        
        assert osadl_matrix.get_compatibility("Artistic-2.0", "Zlib") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_2_0_bzip2_1_0_5(self):        
        assert osadl_matrix.get_compatibility("Artistic-2.0", "bzip2-1.0.5") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_2_0_bzip2_1_0_6(self):        
        assert osadl_matrix.get_compatibility("Artistic-2.0", "bzip2-1.0.6") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_2_0_curl(self):        
        assert osadl_matrix.get_compatibility("Artistic-2.0", "curl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_2_0_libtiff(self):        
        assert osadl_matrix.get_compatibility("Artistic-2.0", "libtiff") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Artistic_2_0_zlib_acknowledgement(self):        
        assert osadl_matrix.get_compatibility("Artistic-2.0", "zlib-acknowledgement") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_1_Clause_0BSD(self):        
        assert osadl_matrix.get_compatibility("BSD-1-Clause", "0BSD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_1_Clause_AFL_2_0(self):        
        assert osadl_matrix.get_compatibility("BSD-1-Clause", "AFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_1_Clause_AFL_2_1(self):        
        assert osadl_matrix.get_compatibility("BSD-1-Clause", "AFL-2.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_1_Clause_AFL_3_0(self):        
        assert osadl_matrix.get_compatibility("BSD-1-Clause", "AFL-3.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_1_Clause_AGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("BSD-1-Clause", "AGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_1_Clause_AGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("BSD-1-Clause", "AGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_1_Clause_Apache_1_0(self):        
        assert osadl_matrix.get_compatibility("BSD-1-Clause", "Apache-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_1_Clause_Apache_1_1(self):        
        assert osadl_matrix.get_compatibility("BSD-1-Clause", "Apache-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_1_Clause_Apache_2_0(self):        
        assert osadl_matrix.get_compatibility("BSD-1-Clause", "Apache-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_1_Clause_Artistic_1_0(self):        
        assert osadl_matrix.get_compatibility("BSD-1-Clause", "Artistic-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_1_Clause_Artistic_1_0_Perl(self):        
        assert osadl_matrix.get_compatibility("BSD-1-Clause", "Artistic-1.0-Perl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_1_Clause_Artistic_2_0(self):        
        assert osadl_matrix.get_compatibility("BSD-1-Clause", "Artistic-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_1_Clause_BSD_1_Clause(self):        
        assert osadl_matrix.get_compatibility("BSD-1-Clause", "BSD-1-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_1_Clause_BSD_2_Clause(self):        
        assert osadl_matrix.get_compatibility("BSD-1-Clause", "BSD-2-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_1_Clause_BSD_2_Clause_Patent(self):        
        assert osadl_matrix.get_compatibility("BSD-1-Clause", "BSD-2-Clause-Patent") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_1_Clause_BSD_3_Clause(self):        
        assert osadl_matrix.get_compatibility("BSD-1-Clause", "BSD-3-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_1_Clause_BSD_4_Clause(self):        
        assert osadl_matrix.get_compatibility("BSD-1-Clause", "BSD-4-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_1_Clause_BSD_4_Clause_UC(self):        
        assert osadl_matrix.get_compatibility("BSD-1-Clause", "BSD-4-Clause-UC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_1_Clause_BSD_Source_Code(self):        
        assert osadl_matrix.get_compatibility("BSD-1-Clause", "BSD-Source-Code") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_1_Clause_BSL_1_0(self):        
        assert osadl_matrix.get_compatibility("BSD-1-Clause", "BSL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_1_Clause_CC0_1_0(self):        
        assert osadl_matrix.get_compatibility("BSD-1-Clause", "CC0-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_1_Clause_CDDL_1_0(self):        
        assert osadl_matrix.get_compatibility("BSD-1-Clause", "CDDL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_1_Clause_CDDL_1_1(self):        
        assert osadl_matrix.get_compatibility("BSD-1-Clause", "CDDL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_1_Clause_CPL_1_0(self):        
        assert osadl_matrix.get_compatibility("BSD-1-Clause", "CPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_1_Clause_EFL_2_0(self):        
        assert osadl_matrix.get_compatibility("BSD-1-Clause", "EFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_1_Clause_EPL_1_0(self):        
        assert osadl_matrix.get_compatibility("BSD-1-Clause", "EPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_1_Clause_EPL_2_0(self):        
        assert osadl_matrix.get_compatibility("BSD-1-Clause", "EPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_1_Clause_EUPL_1_1(self):        
        assert osadl_matrix.get_compatibility("BSD-1-Clause", "EUPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_1_Clause_EUPL_1_2(self):        
        assert osadl_matrix.get_compatibility("BSD-1-Clause", "EUPL-1.2") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_1_Clause_FSFAP(self):        
        assert osadl_matrix.get_compatibility("BSD-1-Clause", "FSFAP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_1_Clause_FSFULLR(self):        
        assert osadl_matrix.get_compatibility("BSD-1-Clause", "FSFULLR") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_1_Clause_FTL(self):        
        assert osadl_matrix.get_compatibility("BSD-1-Clause", "FTL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_1_Clause_GPL_1_0_only(self):        
        assert osadl_matrix.get_compatibility("BSD-1-Clause", "GPL-1.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_1_Clause_GPL_1_0_or_later(self):        
        assert osadl_matrix.get_compatibility("BSD-1-Clause", "GPL-1.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_1_Clause_GPL_2_0_only(self):        
        assert osadl_matrix.get_compatibility("BSD-1-Clause", "GPL-2.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_1_Clause_GPL_2_0_only_WITH_Classpath_exception_2_0(self):        
        assert osadl_matrix.get_compatibility("BSD-1-Clause", "GPL-2.0-only WITH Classpath-exception-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_1_Clause_GPL_2_0_or_later(self):        
        assert osadl_matrix.get_compatibility("BSD-1-Clause", "GPL-2.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_1_Clause_GPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("BSD-1-Clause", "GPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_1_Clause_GPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("BSD-1-Clause", "GPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_1_Clause_HPND(self):        
        assert osadl_matrix.get_compatibility("BSD-1-Clause", "HPND") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_1_Clause_IBM_pibs(self):        
        assert osadl_matrix.get_compatibility("BSD-1-Clause", "IBM-pibs") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_1_Clause_ICU(self):        
        assert osadl_matrix.get_compatibility("BSD-1-Clause", "ICU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_1_Clause_IJG(self):        
        assert osadl_matrix.get_compatibility("BSD-1-Clause", "IJG") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_1_Clause_IPL_1_0(self):        
        assert osadl_matrix.get_compatibility("BSD-1-Clause", "IPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_1_Clause_ISC(self):        
        assert osadl_matrix.get_compatibility("BSD-1-Clause", "ISC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_1_Clause_Info_ZIP(self):        
        assert osadl_matrix.get_compatibility("BSD-1-Clause", "Info-ZIP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_1_Clause_LGPL_2_1_only(self):        
        assert osadl_matrix.get_compatibility("BSD-1-Clause", "LGPL-2.1-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_1_Clause_LGPL_2_1_or_later(self):        
        assert osadl_matrix.get_compatibility("BSD-1-Clause", "LGPL-2.1-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_1_Clause_LGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("BSD-1-Clause", "LGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_1_Clause_LGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("BSD-1-Clause", "LGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_1_Clause_Libpng(self):        
        assert osadl_matrix.get_compatibility("BSD-1-Clause", "Libpng") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_1_Clause_MIT(self):        
        assert osadl_matrix.get_compatibility("BSD-1-Clause", "MIT") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_1_Clause_MIT_CMU(self):        
        assert osadl_matrix.get_compatibility("BSD-1-Clause", "MIT-CMU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_1_Clause_MPL_1_1(self):        
        assert osadl_matrix.get_compatibility("BSD-1-Clause", "MPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_1_Clause_MPL_2_0(self):        
        assert osadl_matrix.get_compatibility("BSD-1-Clause", "MPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_1_Clause_MPL_2_0_no_copyleft_exception(self):        
        assert osadl_matrix.get_compatibility("BSD-1-Clause", "MPL-2.0-no-copyleft-exception") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_1_Clause_MS_PL(self):        
        assert osadl_matrix.get_compatibility("BSD-1-Clause", "MS-PL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_BSD_1_Clause_MS_RL(self):        
        assert osadl_matrix.get_compatibility("BSD-1-Clause", "MS-RL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_1_Clause_MirOS(self):        
        assert osadl_matrix.get_compatibility("BSD-1-Clause", "MirOS") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_1_Clause_NBPL_1_0(self):        
        assert osadl_matrix.get_compatibility("BSD-1-Clause", "NBPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_1_Clause_NTP(self):        
        assert osadl_matrix.get_compatibility("BSD-1-Clause", "NTP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_1_Clause_OSL_3_0(self):        
        assert osadl_matrix.get_compatibility("BSD-1-Clause", "OSL-3.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_1_Clause_OpenSSL(self):        
        assert osadl_matrix.get_compatibility("BSD-1-Clause", "OpenSSL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_BSD_1_Clause_PHP_3_01(self):        
        assert osadl_matrix.get_compatibility("BSD-1-Clause", "PHP-3.01") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_1_Clause_PostgreSQL(self):        
        assert osadl_matrix.get_compatibility("BSD-1-Clause", "PostgreSQL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_1_Clause_Python_2_0(self):        
        assert osadl_matrix.get_compatibility("BSD-1-Clause", "Python-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_1_Clause_Qhull(self):        
        assert osadl_matrix.get_compatibility("BSD-1-Clause", "Qhull") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_1_Clause_RSA_MD(self):        
        assert osadl_matrix.get_compatibility("BSD-1-Clause", "RSA-MD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_1_Clause_Sleepycat(self):        
        assert osadl_matrix.get_compatibility("BSD-1-Clause", "Sleepycat") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_1_Clause_SunPro(self):        
        assert osadl_matrix.get_compatibility("BSD-1-Clause", "SunPro") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_1_Clause_UPL_1_0(self):        
        assert osadl_matrix.get_compatibility("BSD-1-Clause", "UPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_1_Clause_Unicode_DFS_2015(self):        
        assert osadl_matrix.get_compatibility("BSD-1-Clause", "Unicode-DFS-2015") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_1_Clause_Unicode_DFS_2016(self):        
        assert osadl_matrix.get_compatibility("BSD-1-Clause", "Unicode-DFS-2016") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_1_Clause_Unlicense(self):        
        assert osadl_matrix.get_compatibility("BSD-1-Clause", "Unlicense") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_1_Clause_W3C(self):        
        assert osadl_matrix.get_compatibility("BSD-1-Clause", "W3C") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_1_Clause_W3C_19980720(self):        
        assert osadl_matrix.get_compatibility("BSD-1-Clause", "W3C-19980720") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_1_Clause_W3C_20150513(self):        
        assert osadl_matrix.get_compatibility("BSD-1-Clause", "W3C-20150513") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_1_Clause_WTFPL(self):        
        assert osadl_matrix.get_compatibility("BSD-1-Clause", "WTFPL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_1_Clause_X11(self):        
        assert osadl_matrix.get_compatibility("BSD-1-Clause", "X11") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_1_Clause_XFree86_1_1(self):        
        assert osadl_matrix.get_compatibility("BSD-1-Clause", "XFree86-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_1_Clause_ZPL_2_0(self):        
        assert osadl_matrix.get_compatibility("BSD-1-Clause", "ZPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_1_Clause_Zlib(self):        
        assert osadl_matrix.get_compatibility("BSD-1-Clause", "Zlib") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_1_Clause_bzip2_1_0_5(self):        
        assert osadl_matrix.get_compatibility("BSD-1-Clause", "bzip2-1.0.5") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_1_Clause_bzip2_1_0_6(self):        
        assert osadl_matrix.get_compatibility("BSD-1-Clause", "bzip2-1.0.6") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_1_Clause_curl(self):        
        assert osadl_matrix.get_compatibility("BSD-1-Clause", "curl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_1_Clause_libtiff(self):        
        assert osadl_matrix.get_compatibility("BSD-1-Clause", "libtiff") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_1_Clause_zlib_acknowledgement(self):        
        assert osadl_matrix.get_compatibility("BSD-1-Clause", "zlib-acknowledgement") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_0BSD(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause", "0BSD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_AFL_2_0(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause", "AFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_AFL_2_1(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause", "AFL-2.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_AFL_3_0(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause", "AFL-3.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_AGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause", "AGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_2_Clause_AGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause", "AGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_2_Clause_Apache_1_0(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause", "Apache-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_Apache_1_1(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause", "Apache-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_Apache_2_0(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause", "Apache-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_Artistic_1_0(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause", "Artistic-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_Artistic_1_0_Perl(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause", "Artistic-1.0-Perl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_Artistic_2_0(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause", "Artistic-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_BSD_1_Clause(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause", "BSD-1-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_BSD_2_Clause(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause", "BSD-2-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_BSD_2_Clause_Patent(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause", "BSD-2-Clause-Patent") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_BSD_3_Clause(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause", "BSD-3-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_BSD_4_Clause(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause", "BSD-4-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_BSD_4_Clause_UC(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause", "BSD-4-Clause-UC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_BSD_Source_Code(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause", "BSD-Source-Code") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_BSL_1_0(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause", "BSL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_CC0_1_0(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause", "CC0-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_CDDL_1_0(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause", "CDDL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_2_Clause_CDDL_1_1(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause", "CDDL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_2_Clause_CPL_1_0(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause", "CPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_2_Clause_EFL_2_0(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause", "EFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_EPL_1_0(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause", "EPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_2_Clause_EPL_2_0(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause", "EPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_2_Clause_EUPL_1_1(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause", "EUPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_2_Clause_EUPL_1_2(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause", "EUPL-1.2") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_2_Clause_FSFAP(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause", "FSFAP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_FSFULLR(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause", "FSFULLR") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_FTL(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause", "FTL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_GPL_1_0_only(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause", "GPL-1.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_2_Clause_GPL_1_0_or_later(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause", "GPL-1.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_2_Clause_GPL_2_0_only(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause", "GPL-2.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_2_Clause_GPL_2_0_only_WITH_Classpath_exception_2_0(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause", "GPL-2.0-only WITH Classpath-exception-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_2_Clause_GPL_2_0_or_later(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause", "GPL-2.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_2_Clause_GPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause", "GPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_2_Clause_GPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause", "GPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_2_Clause_HPND(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause", "HPND") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_IBM_pibs(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause", "IBM-pibs") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_ICU(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause", "ICU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_IJG(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause", "IJG") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_IPL_1_0(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause", "IPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_2_Clause_ISC(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause", "ISC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_Info_ZIP(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause", "Info-ZIP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_LGPL_2_1_only(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause", "LGPL-2.1-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_2_Clause_LGPL_2_1_or_later(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause", "LGPL-2.1-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_2_Clause_LGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause", "LGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_2_Clause_LGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause", "LGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_2_Clause_Libpng(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause", "Libpng") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_MIT(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause", "MIT") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_MIT_CMU(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause", "MIT-CMU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_MPL_1_1(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause", "MPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_2_Clause_MPL_2_0(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause", "MPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_2_Clause_MPL_2_0_no_copyleft_exception(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause", "MPL-2.0-no-copyleft-exception") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_2_Clause_MS_PL(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause", "MS-PL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_BSD_2_Clause_MS_RL(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause", "MS-RL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_2_Clause_MirOS(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause", "MirOS") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_NBPL_1_0(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause", "NBPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_NTP(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause", "NTP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_OSL_3_0(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause", "OSL-3.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_2_Clause_OpenSSL(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause", "OpenSSL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_BSD_2_Clause_PHP_3_01(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause", "PHP-3.01") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_PostgreSQL(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause", "PostgreSQL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_Python_2_0(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause", "Python-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_Qhull(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause", "Qhull") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_RSA_MD(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause", "RSA-MD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_Sleepycat(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause", "Sleepycat") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_2_Clause_SunPro(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause", "SunPro") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_UPL_1_0(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause", "UPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_Unicode_DFS_2015(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause", "Unicode-DFS-2015") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_Unicode_DFS_2016(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause", "Unicode-DFS-2016") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_Unlicense(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause", "Unlicense") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_W3C(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause", "W3C") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_W3C_19980720(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause", "W3C-19980720") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_W3C_20150513(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause", "W3C-20150513") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_WTFPL(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause", "WTFPL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_X11(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause", "X11") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_XFree86_1_1(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause", "XFree86-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_ZPL_2_0(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause", "ZPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_Zlib(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause", "Zlib") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_bzip2_1_0_5(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause", "bzip2-1.0.5") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_bzip2_1_0_6(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause", "bzip2-1.0.6") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_curl(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause", "curl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_libtiff(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause", "libtiff") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_zlib_acknowledgement(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause", "zlib-acknowledgement") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_Patent_0BSD(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause-Patent", "0BSD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_Patent_AFL_2_0(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause-Patent", "AFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_Patent_AFL_2_1(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause-Patent", "AFL-2.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_Patent_AFL_3_0(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause-Patent", "AFL-3.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_Patent_AGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause-Patent", "AGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_2_Clause_Patent_AGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause-Patent", "AGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_2_Clause_Patent_Apache_1_0(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause-Patent", "Apache-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_Patent_Apache_1_1(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause-Patent", "Apache-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_Patent_Apache_2_0(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause-Patent", "Apache-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_Patent_Artistic_1_0(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause-Patent", "Artistic-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_Patent_Artistic_1_0_Perl(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause-Patent", "Artistic-1.0-Perl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_Patent_Artistic_2_0(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause-Patent", "Artistic-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_Patent_BSD_1_Clause(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause-Patent", "BSD-1-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_Patent_BSD_2_Clause(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause-Patent", "BSD-2-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_Patent_BSD_2_Clause_Patent(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause-Patent", "BSD-2-Clause-Patent") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_Patent_BSD_3_Clause(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause-Patent", "BSD-3-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_Patent_BSD_4_Clause(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause-Patent", "BSD-4-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_Patent_BSD_4_Clause_UC(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause-Patent", "BSD-4-Clause-UC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_Patent_BSD_Source_Code(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause-Patent", "BSD-Source-Code") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_Patent_BSL_1_0(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause-Patent", "BSL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_Patent_CC0_1_0(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause-Patent", "CC0-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_Patent_CDDL_1_0(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause-Patent", "CDDL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_2_Clause_Patent_CDDL_1_1(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause-Patent", "CDDL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_2_Clause_Patent_CPL_1_0(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause-Patent", "CPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_2_Clause_Patent_EFL_2_0(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause-Patent", "EFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_Patent_EPL_1_0(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause-Patent", "EPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_2_Clause_Patent_EPL_2_0(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause-Patent", "EPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_2_Clause_Patent_EUPL_1_1(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause-Patent", "EUPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_2_Clause_Patent_EUPL_1_2(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause-Patent", "EUPL-1.2") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_2_Clause_Patent_FSFAP(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause-Patent", "FSFAP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_Patent_FSFULLR(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause-Patent", "FSFULLR") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_Patent_FTL(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause-Patent", "FTL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_Patent_GPL_1_0_only(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause-Patent", "GPL-1.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_2_Clause_Patent_GPL_1_0_or_later(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause-Patent", "GPL-1.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_2_Clause_Patent_GPL_2_0_only(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause-Patent", "GPL-2.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_2_Clause_Patent_GPL_2_0_only_WITH_Classpath_exception_2_0(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause-Patent", "GPL-2.0-only WITH Classpath-exception-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_2_Clause_Patent_GPL_2_0_or_later(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause-Patent", "GPL-2.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_2_Clause_Patent_GPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause-Patent", "GPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_2_Clause_Patent_GPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause-Patent", "GPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_2_Clause_Patent_HPND(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause-Patent", "HPND") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_Patent_IBM_pibs(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause-Patent", "IBM-pibs") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_Patent_ICU(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause-Patent", "ICU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_Patent_IJG(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause-Patent", "IJG") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_Patent_IPL_1_0(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause-Patent", "IPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_2_Clause_Patent_ISC(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause-Patent", "ISC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_Patent_Info_ZIP(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause-Patent", "Info-ZIP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_Patent_LGPL_2_1_only(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause-Patent", "LGPL-2.1-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_2_Clause_Patent_LGPL_2_1_or_later(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause-Patent", "LGPL-2.1-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_2_Clause_Patent_LGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause-Patent", "LGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_2_Clause_Patent_LGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause-Patent", "LGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_2_Clause_Patent_Libpng(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause-Patent", "Libpng") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_Patent_MIT(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause-Patent", "MIT") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_Patent_MIT_CMU(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause-Patent", "MIT-CMU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_Patent_MPL_1_1(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause-Patent", "MPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_2_Clause_Patent_MPL_2_0(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause-Patent", "MPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_2_Clause_Patent_MPL_2_0_no_copyleft_exception(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause-Patent", "MPL-2.0-no-copyleft-exception") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_2_Clause_Patent_MS_PL(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause-Patent", "MS-PL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_BSD_2_Clause_Patent_MS_RL(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause-Patent", "MS-RL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_2_Clause_Patent_MirOS(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause-Patent", "MirOS") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_Patent_NBPL_1_0(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause-Patent", "NBPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_Patent_NTP(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause-Patent", "NTP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_Patent_OSL_3_0(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause-Patent", "OSL-3.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_2_Clause_Patent_OpenSSL(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause-Patent", "OpenSSL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_BSD_2_Clause_Patent_PHP_3_01(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause-Patent", "PHP-3.01") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_Patent_PostgreSQL(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause-Patent", "PostgreSQL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_Patent_Python_2_0(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause-Patent", "Python-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_Patent_Qhull(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause-Patent", "Qhull") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_Patent_RSA_MD(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause-Patent", "RSA-MD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_Patent_Sleepycat(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause-Patent", "Sleepycat") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_2_Clause_Patent_SunPro(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause-Patent", "SunPro") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_Patent_UPL_1_0(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause-Patent", "UPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_Patent_Unicode_DFS_2015(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause-Patent", "Unicode-DFS-2015") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_Patent_Unicode_DFS_2016(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause-Patent", "Unicode-DFS-2016") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_Patent_Unlicense(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause-Patent", "Unlicense") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_Patent_W3C(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause-Patent", "W3C") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_Patent_W3C_19980720(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause-Patent", "W3C-19980720") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_Patent_W3C_20150513(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause-Patent", "W3C-20150513") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_Patent_WTFPL(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause-Patent", "WTFPL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_Patent_X11(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause-Patent", "X11") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_Patent_XFree86_1_1(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause-Patent", "XFree86-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_Patent_ZPL_2_0(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause-Patent", "ZPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_Patent_Zlib(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause-Patent", "Zlib") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_Patent_bzip2_1_0_5(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause-Patent", "bzip2-1.0.5") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_Patent_bzip2_1_0_6(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause-Patent", "bzip2-1.0.6") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_Patent_curl(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause-Patent", "curl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_Patent_libtiff(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause-Patent", "libtiff") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_2_Clause_Patent_zlib_acknowledgement(self):        
        assert osadl_matrix.get_compatibility("BSD-2-Clause-Patent", "zlib-acknowledgement") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_3_Clause_0BSD(self):        
        assert osadl_matrix.get_compatibility("BSD-3-Clause", "0BSD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_3_Clause_AFL_2_0(self):        
        assert osadl_matrix.get_compatibility("BSD-3-Clause", "AFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_3_Clause_AFL_2_1(self):        
        assert osadl_matrix.get_compatibility("BSD-3-Clause", "AFL-2.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_3_Clause_AFL_3_0(self):        
        assert osadl_matrix.get_compatibility("BSD-3-Clause", "AFL-3.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_3_Clause_AGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("BSD-3-Clause", "AGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_3_Clause_AGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("BSD-3-Clause", "AGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_3_Clause_Apache_1_0(self):        
        assert osadl_matrix.get_compatibility("BSD-3-Clause", "Apache-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_3_Clause_Apache_1_1(self):        
        assert osadl_matrix.get_compatibility("BSD-3-Clause", "Apache-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_3_Clause_Apache_2_0(self):        
        assert osadl_matrix.get_compatibility("BSD-3-Clause", "Apache-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_3_Clause_Artistic_1_0(self):        
        assert osadl_matrix.get_compatibility("BSD-3-Clause", "Artistic-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_3_Clause_Artistic_1_0_Perl(self):        
        assert osadl_matrix.get_compatibility("BSD-3-Clause", "Artistic-1.0-Perl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_3_Clause_Artistic_2_0(self):        
        assert osadl_matrix.get_compatibility("BSD-3-Clause", "Artistic-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_3_Clause_BSD_1_Clause(self):        
        assert osadl_matrix.get_compatibility("BSD-3-Clause", "BSD-1-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_3_Clause_BSD_2_Clause(self):        
        assert osadl_matrix.get_compatibility("BSD-3-Clause", "BSD-2-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_3_Clause_BSD_2_Clause_Patent(self):        
        assert osadl_matrix.get_compatibility("BSD-3-Clause", "BSD-2-Clause-Patent") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_3_Clause_BSD_3_Clause(self):        
        assert osadl_matrix.get_compatibility("BSD-3-Clause", "BSD-3-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_3_Clause_BSD_4_Clause(self):        
        assert osadl_matrix.get_compatibility("BSD-3-Clause", "BSD-4-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_3_Clause_BSD_4_Clause_UC(self):        
        assert osadl_matrix.get_compatibility("BSD-3-Clause", "BSD-4-Clause-UC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_3_Clause_BSD_Source_Code(self):        
        assert osadl_matrix.get_compatibility("BSD-3-Clause", "BSD-Source-Code") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_3_Clause_BSL_1_0(self):        
        assert osadl_matrix.get_compatibility("BSD-3-Clause", "BSL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_3_Clause_CC0_1_0(self):        
        assert osadl_matrix.get_compatibility("BSD-3-Clause", "CC0-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_3_Clause_CDDL_1_0(self):        
        assert osadl_matrix.get_compatibility("BSD-3-Clause", "CDDL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_3_Clause_CDDL_1_1(self):        
        assert osadl_matrix.get_compatibility("BSD-3-Clause", "CDDL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_3_Clause_CPL_1_0(self):        
        assert osadl_matrix.get_compatibility("BSD-3-Clause", "CPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_3_Clause_EFL_2_0(self):        
        assert osadl_matrix.get_compatibility("BSD-3-Clause", "EFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_3_Clause_EPL_1_0(self):        
        assert osadl_matrix.get_compatibility("BSD-3-Clause", "EPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_3_Clause_EPL_2_0(self):        
        assert osadl_matrix.get_compatibility("BSD-3-Clause", "EPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_3_Clause_EUPL_1_1(self):        
        assert osadl_matrix.get_compatibility("BSD-3-Clause", "EUPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_3_Clause_EUPL_1_2(self):        
        assert osadl_matrix.get_compatibility("BSD-3-Clause", "EUPL-1.2") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_3_Clause_FSFAP(self):        
        assert osadl_matrix.get_compatibility("BSD-3-Clause", "FSFAP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_3_Clause_FSFULLR(self):        
        assert osadl_matrix.get_compatibility("BSD-3-Clause", "FSFULLR") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_3_Clause_FTL(self):        
        assert osadl_matrix.get_compatibility("BSD-3-Clause", "FTL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_3_Clause_GPL_1_0_only(self):        
        assert osadl_matrix.get_compatibility("BSD-3-Clause", "GPL-1.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_3_Clause_GPL_1_0_or_later(self):        
        assert osadl_matrix.get_compatibility("BSD-3-Clause", "GPL-1.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_3_Clause_GPL_2_0_only(self):        
        assert osadl_matrix.get_compatibility("BSD-3-Clause", "GPL-2.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_3_Clause_GPL_2_0_only_WITH_Classpath_exception_2_0(self):        
        assert osadl_matrix.get_compatibility("BSD-3-Clause", "GPL-2.0-only WITH Classpath-exception-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_3_Clause_GPL_2_0_or_later(self):        
        assert osadl_matrix.get_compatibility("BSD-3-Clause", "GPL-2.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_3_Clause_GPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("BSD-3-Clause", "GPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_3_Clause_GPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("BSD-3-Clause", "GPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_3_Clause_HPND(self):        
        assert osadl_matrix.get_compatibility("BSD-3-Clause", "HPND") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_3_Clause_IBM_pibs(self):        
        assert osadl_matrix.get_compatibility("BSD-3-Clause", "IBM-pibs") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_3_Clause_ICU(self):        
        assert osadl_matrix.get_compatibility("BSD-3-Clause", "ICU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_3_Clause_IJG(self):        
        assert osadl_matrix.get_compatibility("BSD-3-Clause", "IJG") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_3_Clause_IPL_1_0(self):        
        assert osadl_matrix.get_compatibility("BSD-3-Clause", "IPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_3_Clause_ISC(self):        
        assert osadl_matrix.get_compatibility("BSD-3-Clause", "ISC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_3_Clause_Info_ZIP(self):        
        assert osadl_matrix.get_compatibility("BSD-3-Clause", "Info-ZIP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_3_Clause_LGPL_2_1_only(self):        
        assert osadl_matrix.get_compatibility("BSD-3-Clause", "LGPL-2.1-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_3_Clause_LGPL_2_1_or_later(self):        
        assert osadl_matrix.get_compatibility("BSD-3-Clause", "LGPL-2.1-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_3_Clause_LGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("BSD-3-Clause", "LGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_3_Clause_LGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("BSD-3-Clause", "LGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_3_Clause_Libpng(self):        
        assert osadl_matrix.get_compatibility("BSD-3-Clause", "Libpng") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_3_Clause_MIT(self):        
        assert osadl_matrix.get_compatibility("BSD-3-Clause", "MIT") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_3_Clause_MIT_CMU(self):        
        assert osadl_matrix.get_compatibility("BSD-3-Clause", "MIT-CMU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_3_Clause_MPL_1_1(self):        
        assert osadl_matrix.get_compatibility("BSD-3-Clause", "MPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_3_Clause_MPL_2_0(self):        
        assert osadl_matrix.get_compatibility("BSD-3-Clause", "MPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_3_Clause_MPL_2_0_no_copyleft_exception(self):        
        assert osadl_matrix.get_compatibility("BSD-3-Clause", "MPL-2.0-no-copyleft-exception") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_3_Clause_MS_PL(self):        
        assert osadl_matrix.get_compatibility("BSD-3-Clause", "MS-PL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_BSD_3_Clause_MS_RL(self):        
        assert osadl_matrix.get_compatibility("BSD-3-Clause", "MS-RL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_3_Clause_MirOS(self):        
        assert osadl_matrix.get_compatibility("BSD-3-Clause", "MirOS") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_3_Clause_NBPL_1_0(self):        
        assert osadl_matrix.get_compatibility("BSD-3-Clause", "NBPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_3_Clause_NTP(self):        
        assert osadl_matrix.get_compatibility("BSD-3-Clause", "NTP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_3_Clause_OSL_3_0(self):        
        assert osadl_matrix.get_compatibility("BSD-3-Clause", "OSL-3.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_3_Clause_OpenSSL(self):        
        assert osadl_matrix.get_compatibility("BSD-3-Clause", "OpenSSL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_BSD_3_Clause_PHP_3_01(self):        
        assert osadl_matrix.get_compatibility("BSD-3-Clause", "PHP-3.01") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_3_Clause_PostgreSQL(self):        
        assert osadl_matrix.get_compatibility("BSD-3-Clause", "PostgreSQL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_3_Clause_Python_2_0(self):        
        assert osadl_matrix.get_compatibility("BSD-3-Clause", "Python-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_3_Clause_Qhull(self):        
        assert osadl_matrix.get_compatibility("BSD-3-Clause", "Qhull") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_3_Clause_RSA_MD(self):        
        assert osadl_matrix.get_compatibility("BSD-3-Clause", "RSA-MD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_3_Clause_Sleepycat(self):        
        assert osadl_matrix.get_compatibility("BSD-3-Clause", "Sleepycat") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_3_Clause_SunPro(self):        
        assert osadl_matrix.get_compatibility("BSD-3-Clause", "SunPro") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_3_Clause_UPL_1_0(self):        
        assert osadl_matrix.get_compatibility("BSD-3-Clause", "UPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_3_Clause_Unicode_DFS_2015(self):        
        assert osadl_matrix.get_compatibility("BSD-3-Clause", "Unicode-DFS-2015") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_3_Clause_Unicode_DFS_2016(self):        
        assert osadl_matrix.get_compatibility("BSD-3-Clause", "Unicode-DFS-2016") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_3_Clause_Unlicense(self):        
        assert osadl_matrix.get_compatibility("BSD-3-Clause", "Unlicense") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_3_Clause_W3C(self):        
        assert osadl_matrix.get_compatibility("BSD-3-Clause", "W3C") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_3_Clause_W3C_19980720(self):        
        assert osadl_matrix.get_compatibility("BSD-3-Clause", "W3C-19980720") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_3_Clause_W3C_20150513(self):        
        assert osadl_matrix.get_compatibility("BSD-3-Clause", "W3C-20150513") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_3_Clause_WTFPL(self):        
        assert osadl_matrix.get_compatibility("BSD-3-Clause", "WTFPL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_3_Clause_X11(self):        
        assert osadl_matrix.get_compatibility("BSD-3-Clause", "X11") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_3_Clause_XFree86_1_1(self):        
        assert osadl_matrix.get_compatibility("BSD-3-Clause", "XFree86-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_3_Clause_ZPL_2_0(self):        
        assert osadl_matrix.get_compatibility("BSD-3-Clause", "ZPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_3_Clause_Zlib(self):        
        assert osadl_matrix.get_compatibility("BSD-3-Clause", "Zlib") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_3_Clause_bzip2_1_0_5(self):        
        assert osadl_matrix.get_compatibility("BSD-3-Clause", "bzip2-1.0.5") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_3_Clause_bzip2_1_0_6(self):        
        assert osadl_matrix.get_compatibility("BSD-3-Clause", "bzip2-1.0.6") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_3_Clause_curl(self):        
        assert osadl_matrix.get_compatibility("BSD-3-Clause", "curl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_3_Clause_libtiff(self):        
        assert osadl_matrix.get_compatibility("BSD-3-Clause", "libtiff") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_3_Clause_zlib_acknowledgement(self):        
        assert osadl_matrix.get_compatibility("BSD-3-Clause", "zlib-acknowledgement") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_0BSD(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause", "0BSD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_AFL_2_0(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause", "AFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_AFL_2_1(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause", "AFL-2.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_AFL_3_0(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause", "AFL-3.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_AGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause", "AGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_4_Clause_AGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause", "AGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_4_Clause_Apache_1_0(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause", "Apache-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_Apache_1_1(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause", "Apache-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_Apache_2_0(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause", "Apache-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_Artistic_1_0(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause", "Artistic-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_Artistic_1_0_Perl(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause", "Artistic-1.0-Perl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_Artistic_2_0(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause", "Artistic-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_BSD_1_Clause(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause", "BSD-1-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_BSD_2_Clause(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause", "BSD-2-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_BSD_2_Clause_Patent(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause", "BSD-2-Clause-Patent") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_BSD_3_Clause(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause", "BSD-3-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_BSD_4_Clause(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause", "BSD-4-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_BSD_4_Clause_UC(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause", "BSD-4-Clause-UC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_BSD_Source_Code(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause", "BSD-Source-Code") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_BSL_1_0(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause", "BSL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_CC0_1_0(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause", "CC0-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_CDDL_1_0(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause", "CDDL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_4_Clause_CDDL_1_1(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause", "CDDL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_4_Clause_CPL_1_0(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause", "CPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_4_Clause_EFL_2_0(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause", "EFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_EPL_1_0(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause", "EPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_4_Clause_EPL_2_0(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause", "EPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_4_Clause_EUPL_1_1(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause", "EUPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_4_Clause_EUPL_1_2(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause", "EUPL-1.2") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_4_Clause_FSFAP(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause", "FSFAP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_FSFULLR(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause", "FSFULLR") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_FTL(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause", "FTL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_GPL_1_0_only(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause", "GPL-1.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_4_Clause_GPL_1_0_or_later(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause", "GPL-1.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_4_Clause_GPL_2_0_only(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause", "GPL-2.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_4_Clause_GPL_2_0_only_WITH_Classpath_exception_2_0(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause", "GPL-2.0-only WITH Classpath-exception-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_4_Clause_GPL_2_0_or_later(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause", "GPL-2.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_4_Clause_GPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause", "GPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_4_Clause_GPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause", "GPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_4_Clause_HPND(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause", "HPND") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_IBM_pibs(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause", "IBM-pibs") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_ICU(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause", "ICU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_IJG(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause", "IJG") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_IPL_1_0(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause", "IPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_4_Clause_ISC(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause", "ISC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_Info_ZIP(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause", "Info-ZIP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_LGPL_2_1_only(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause", "LGPL-2.1-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_4_Clause_LGPL_2_1_or_later(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause", "LGPL-2.1-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_4_Clause_LGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause", "LGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_4_Clause_LGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause", "LGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_4_Clause_Libpng(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause", "Libpng") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_MIT(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause", "MIT") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_MIT_CMU(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause", "MIT-CMU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_MPL_1_1(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause", "MPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_4_Clause_MPL_2_0(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause", "MPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_4_Clause_MPL_2_0_no_copyleft_exception(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause", "MPL-2.0-no-copyleft-exception") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_4_Clause_MS_PL(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause", "MS-PL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_BSD_4_Clause_MS_RL(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause", "MS-RL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_4_Clause_MirOS(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause", "MirOS") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_NBPL_1_0(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause", "NBPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_NTP(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause", "NTP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_OSL_3_0(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause", "OSL-3.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_4_Clause_OpenSSL(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause", "OpenSSL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_BSD_4_Clause_PHP_3_01(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause", "PHP-3.01") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_PostgreSQL(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause", "PostgreSQL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_Python_2_0(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause", "Python-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_Qhull(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause", "Qhull") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_RSA_MD(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause", "RSA-MD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_Sleepycat(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause", "Sleepycat") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_4_Clause_SunPro(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause", "SunPro") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_UPL_1_0(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause", "UPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_Unicode_DFS_2015(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause", "Unicode-DFS-2015") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_Unicode_DFS_2016(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause", "Unicode-DFS-2016") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_Unlicense(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause", "Unlicense") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_W3C(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause", "W3C") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_W3C_19980720(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause", "W3C-19980720") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_W3C_20150513(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause", "W3C-20150513") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_WTFPL(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause", "WTFPL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_X11(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause", "X11") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_XFree86_1_1(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause", "XFree86-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_ZPL_2_0(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause", "ZPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_Zlib(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause", "Zlib") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_bzip2_1_0_5(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause", "bzip2-1.0.5") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_bzip2_1_0_6(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause", "bzip2-1.0.6") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_curl(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause", "curl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_libtiff(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause", "libtiff") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_zlib_acknowledgement(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause", "zlib-acknowledgement") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_UC_0BSD(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause-UC", "0BSD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_UC_AFL_2_0(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause-UC", "AFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_UC_AFL_2_1(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause-UC", "AFL-2.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_UC_AFL_3_0(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause-UC", "AFL-3.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_UC_AGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause-UC", "AGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_4_Clause_UC_AGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause-UC", "AGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_4_Clause_UC_Apache_1_0(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause-UC", "Apache-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_UC_Apache_1_1(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause-UC", "Apache-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_UC_Apache_2_0(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause-UC", "Apache-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_UC_Artistic_1_0(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause-UC", "Artistic-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_UC_Artistic_1_0_Perl(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause-UC", "Artistic-1.0-Perl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_UC_Artistic_2_0(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause-UC", "Artistic-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_UC_BSD_1_Clause(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause-UC", "BSD-1-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_UC_BSD_2_Clause(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause-UC", "BSD-2-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_UC_BSD_2_Clause_Patent(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause-UC", "BSD-2-Clause-Patent") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_UC_BSD_3_Clause(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause-UC", "BSD-3-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_UC_BSD_4_Clause(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause-UC", "BSD-4-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_UC_BSD_4_Clause_UC(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause-UC", "BSD-4-Clause-UC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_UC_BSD_Source_Code(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause-UC", "BSD-Source-Code") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_UC_BSL_1_0(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause-UC", "BSL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_UC_CC0_1_0(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause-UC", "CC0-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_UC_CDDL_1_0(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause-UC", "CDDL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_4_Clause_UC_CDDL_1_1(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause-UC", "CDDL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_4_Clause_UC_CPL_1_0(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause-UC", "CPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_4_Clause_UC_EFL_2_0(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause-UC", "EFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_UC_EPL_1_0(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause-UC", "EPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_4_Clause_UC_EPL_2_0(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause-UC", "EPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_4_Clause_UC_EUPL_1_1(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause-UC", "EUPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_4_Clause_UC_EUPL_1_2(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause-UC", "EUPL-1.2") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_4_Clause_UC_FSFAP(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause-UC", "FSFAP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_UC_FSFULLR(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause-UC", "FSFULLR") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_UC_FTL(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause-UC", "FTL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_UC_GPL_1_0_only(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause-UC", "GPL-1.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_4_Clause_UC_GPL_1_0_or_later(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause-UC", "GPL-1.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_4_Clause_UC_GPL_2_0_only(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause-UC", "GPL-2.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_4_Clause_UC_GPL_2_0_only_WITH_Classpath_exception_2_0(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause-UC", "GPL-2.0-only WITH Classpath-exception-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_4_Clause_UC_GPL_2_0_or_later(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause-UC", "GPL-2.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_4_Clause_UC_GPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause-UC", "GPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_4_Clause_UC_GPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause-UC", "GPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_4_Clause_UC_HPND(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause-UC", "HPND") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_UC_IBM_pibs(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause-UC", "IBM-pibs") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_UC_ICU(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause-UC", "ICU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_UC_IJG(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause-UC", "IJG") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_UC_IPL_1_0(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause-UC", "IPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_4_Clause_UC_ISC(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause-UC", "ISC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_UC_Info_ZIP(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause-UC", "Info-ZIP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_UC_LGPL_2_1_only(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause-UC", "LGPL-2.1-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_4_Clause_UC_LGPL_2_1_or_later(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause-UC", "LGPL-2.1-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_4_Clause_UC_LGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause-UC", "LGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_4_Clause_UC_LGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause-UC", "LGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_4_Clause_UC_Libpng(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause-UC", "Libpng") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_UC_MIT(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause-UC", "MIT") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_UC_MIT_CMU(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause-UC", "MIT-CMU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_UC_MPL_1_1(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause-UC", "MPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_4_Clause_UC_MPL_2_0(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause-UC", "MPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_4_Clause_UC_MPL_2_0_no_copyleft_exception(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause-UC", "MPL-2.0-no-copyleft-exception") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_4_Clause_UC_MS_PL(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause-UC", "MS-PL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_BSD_4_Clause_UC_MS_RL(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause-UC", "MS-RL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_4_Clause_UC_MirOS(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause-UC", "MirOS") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_UC_NBPL_1_0(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause-UC", "NBPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_UC_NTP(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause-UC", "NTP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_UC_OSL_3_0(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause-UC", "OSL-3.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_4_Clause_UC_OpenSSL(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause-UC", "OpenSSL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_BSD_4_Clause_UC_PHP_3_01(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause-UC", "PHP-3.01") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_UC_PostgreSQL(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause-UC", "PostgreSQL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_UC_Python_2_0(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause-UC", "Python-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_UC_Qhull(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause-UC", "Qhull") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_UC_RSA_MD(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause-UC", "RSA-MD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_UC_Sleepycat(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause-UC", "Sleepycat") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_4_Clause_UC_SunPro(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause-UC", "SunPro") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_UC_UPL_1_0(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause-UC", "UPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_UC_Unicode_DFS_2015(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause-UC", "Unicode-DFS-2015") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_UC_Unicode_DFS_2016(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause-UC", "Unicode-DFS-2016") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_UC_Unlicense(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause-UC", "Unlicense") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_UC_W3C(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause-UC", "W3C") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_UC_W3C_19980720(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause-UC", "W3C-19980720") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_UC_W3C_20150513(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause-UC", "W3C-20150513") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_UC_WTFPL(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause-UC", "WTFPL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_UC_X11(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause-UC", "X11") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_UC_XFree86_1_1(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause-UC", "XFree86-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_UC_ZPL_2_0(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause-UC", "ZPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_UC_Zlib(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause-UC", "Zlib") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_UC_bzip2_1_0_5(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause-UC", "bzip2-1.0.5") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_UC_bzip2_1_0_6(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause-UC", "bzip2-1.0.6") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_UC_curl(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause-UC", "curl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_UC_libtiff(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause-UC", "libtiff") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_4_Clause_UC_zlib_acknowledgement(self):        
        assert osadl_matrix.get_compatibility("BSD-4-Clause-UC", "zlib-acknowledgement") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_Source_Code_0BSD(self):        
        assert osadl_matrix.get_compatibility("BSD-Source-Code", "0BSD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_Source_Code_AFL_2_0(self):        
        assert osadl_matrix.get_compatibility("BSD-Source-Code", "AFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_Source_Code_AFL_2_1(self):        
        assert osadl_matrix.get_compatibility("BSD-Source-Code", "AFL-2.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_Source_Code_AFL_3_0(self):        
        assert osadl_matrix.get_compatibility("BSD-Source-Code", "AFL-3.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_Source_Code_AGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("BSD-Source-Code", "AGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_Source_Code_AGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("BSD-Source-Code", "AGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_Source_Code_Apache_1_0(self):        
        assert osadl_matrix.get_compatibility("BSD-Source-Code", "Apache-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_Source_Code_Apache_1_1(self):        
        assert osadl_matrix.get_compatibility("BSD-Source-Code", "Apache-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_Source_Code_Apache_2_0(self):        
        assert osadl_matrix.get_compatibility("BSD-Source-Code", "Apache-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_Source_Code_Artistic_1_0(self):        
        assert osadl_matrix.get_compatibility("BSD-Source-Code", "Artistic-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_Source_Code_Artistic_1_0_Perl(self):        
        assert osadl_matrix.get_compatibility("BSD-Source-Code", "Artistic-1.0-Perl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_Source_Code_Artistic_2_0(self):        
        assert osadl_matrix.get_compatibility("BSD-Source-Code", "Artistic-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_Source_Code_BSD_1_Clause(self):        
        assert osadl_matrix.get_compatibility("BSD-Source-Code", "BSD-1-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_Source_Code_BSD_2_Clause(self):        
        assert osadl_matrix.get_compatibility("BSD-Source-Code", "BSD-2-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_Source_Code_BSD_2_Clause_Patent(self):        
        assert osadl_matrix.get_compatibility("BSD-Source-Code", "BSD-2-Clause-Patent") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_Source_Code_BSD_3_Clause(self):        
        assert osadl_matrix.get_compatibility("BSD-Source-Code", "BSD-3-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_Source_Code_BSD_4_Clause(self):        
        assert osadl_matrix.get_compatibility("BSD-Source-Code", "BSD-4-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_Source_Code_BSD_4_Clause_UC(self):        
        assert osadl_matrix.get_compatibility("BSD-Source-Code", "BSD-4-Clause-UC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_Source_Code_BSD_Source_Code(self):        
        assert osadl_matrix.get_compatibility("BSD-Source-Code", "BSD-Source-Code") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_Source_Code_BSL_1_0(self):        
        assert osadl_matrix.get_compatibility("BSD-Source-Code", "BSL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_Source_Code_CC0_1_0(self):        
        assert osadl_matrix.get_compatibility("BSD-Source-Code", "CC0-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_Source_Code_CDDL_1_0(self):        
        assert osadl_matrix.get_compatibility("BSD-Source-Code", "CDDL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_Source_Code_CDDL_1_1(self):        
        assert osadl_matrix.get_compatibility("BSD-Source-Code", "CDDL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_Source_Code_CPL_1_0(self):        
        assert osadl_matrix.get_compatibility("BSD-Source-Code", "CPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_Source_Code_EFL_2_0(self):        
        assert osadl_matrix.get_compatibility("BSD-Source-Code", "EFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_Source_Code_EPL_1_0(self):        
        assert osadl_matrix.get_compatibility("BSD-Source-Code", "EPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_Source_Code_EPL_2_0(self):        
        assert osadl_matrix.get_compatibility("BSD-Source-Code", "EPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_Source_Code_EUPL_1_1(self):        
        assert osadl_matrix.get_compatibility("BSD-Source-Code", "EUPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_Source_Code_EUPL_1_2(self):        
        assert osadl_matrix.get_compatibility("BSD-Source-Code", "EUPL-1.2") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_Source_Code_FSFAP(self):        
        assert osadl_matrix.get_compatibility("BSD-Source-Code", "FSFAP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_Source_Code_FSFULLR(self):        
        assert osadl_matrix.get_compatibility("BSD-Source-Code", "FSFULLR") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_Source_Code_FTL(self):        
        assert osadl_matrix.get_compatibility("BSD-Source-Code", "FTL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_Source_Code_GPL_1_0_only(self):        
        assert osadl_matrix.get_compatibility("BSD-Source-Code", "GPL-1.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_Source_Code_GPL_1_0_or_later(self):        
        assert osadl_matrix.get_compatibility("BSD-Source-Code", "GPL-1.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_Source_Code_GPL_2_0_only(self):        
        assert osadl_matrix.get_compatibility("BSD-Source-Code", "GPL-2.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_Source_Code_GPL_2_0_only_WITH_Classpath_exception_2_0(self):        
        assert osadl_matrix.get_compatibility("BSD-Source-Code", "GPL-2.0-only WITH Classpath-exception-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_Source_Code_GPL_2_0_or_later(self):        
        assert osadl_matrix.get_compatibility("BSD-Source-Code", "GPL-2.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_Source_Code_GPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("BSD-Source-Code", "GPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_Source_Code_GPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("BSD-Source-Code", "GPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_Source_Code_HPND(self):        
        assert osadl_matrix.get_compatibility("BSD-Source-Code", "HPND") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_Source_Code_IBM_pibs(self):        
        assert osadl_matrix.get_compatibility("BSD-Source-Code", "IBM-pibs") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_Source_Code_ICU(self):        
        assert osadl_matrix.get_compatibility("BSD-Source-Code", "ICU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_Source_Code_IJG(self):        
        assert osadl_matrix.get_compatibility("BSD-Source-Code", "IJG") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_Source_Code_IPL_1_0(self):        
        assert osadl_matrix.get_compatibility("BSD-Source-Code", "IPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_Source_Code_ISC(self):        
        assert osadl_matrix.get_compatibility("BSD-Source-Code", "ISC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_Source_Code_Info_ZIP(self):        
        assert osadl_matrix.get_compatibility("BSD-Source-Code", "Info-ZIP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_Source_Code_LGPL_2_1_only(self):        
        assert osadl_matrix.get_compatibility("BSD-Source-Code", "LGPL-2.1-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_Source_Code_LGPL_2_1_or_later(self):        
        assert osadl_matrix.get_compatibility("BSD-Source-Code", "LGPL-2.1-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_Source_Code_LGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("BSD-Source-Code", "LGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_Source_Code_LGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("BSD-Source-Code", "LGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_Source_Code_Libpng(self):        
        assert osadl_matrix.get_compatibility("BSD-Source-Code", "Libpng") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_Source_Code_MIT(self):        
        assert osadl_matrix.get_compatibility("BSD-Source-Code", "MIT") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_Source_Code_MIT_CMU(self):        
        assert osadl_matrix.get_compatibility("BSD-Source-Code", "MIT-CMU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_Source_Code_MPL_1_1(self):        
        assert osadl_matrix.get_compatibility("BSD-Source-Code", "MPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_Source_Code_MPL_2_0(self):        
        assert osadl_matrix.get_compatibility("BSD-Source-Code", "MPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_Source_Code_MPL_2_0_no_copyleft_exception(self):        
        assert osadl_matrix.get_compatibility("BSD-Source-Code", "MPL-2.0-no-copyleft-exception") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_Source_Code_MS_PL(self):        
        assert osadl_matrix.get_compatibility("BSD-Source-Code", "MS-PL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_BSD_Source_Code_MS_RL(self):        
        assert osadl_matrix.get_compatibility("BSD-Source-Code", "MS-RL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_Source_Code_MirOS(self):        
        assert osadl_matrix.get_compatibility("BSD-Source-Code", "MirOS") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_Source_Code_NBPL_1_0(self):        
        assert osadl_matrix.get_compatibility("BSD-Source-Code", "NBPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_Source_Code_NTP(self):        
        assert osadl_matrix.get_compatibility("BSD-Source-Code", "NTP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_Source_Code_OSL_3_0(self):        
        assert osadl_matrix.get_compatibility("BSD-Source-Code", "OSL-3.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_Source_Code_OpenSSL(self):        
        assert osadl_matrix.get_compatibility("BSD-Source-Code", "OpenSSL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_BSD_Source_Code_PHP_3_01(self):        
        assert osadl_matrix.get_compatibility("BSD-Source-Code", "PHP-3.01") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_Source_Code_PostgreSQL(self):        
        assert osadl_matrix.get_compatibility("BSD-Source-Code", "PostgreSQL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_Source_Code_Python_2_0(self):        
        assert osadl_matrix.get_compatibility("BSD-Source-Code", "Python-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_Source_Code_Qhull(self):        
        assert osadl_matrix.get_compatibility("BSD-Source-Code", "Qhull") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_Source_Code_RSA_MD(self):        
        assert osadl_matrix.get_compatibility("BSD-Source-Code", "RSA-MD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_Source_Code_Sleepycat(self):        
        assert osadl_matrix.get_compatibility("BSD-Source-Code", "Sleepycat") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSD_Source_Code_SunPro(self):        
        assert osadl_matrix.get_compatibility("BSD-Source-Code", "SunPro") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_Source_Code_UPL_1_0(self):        
        assert osadl_matrix.get_compatibility("BSD-Source-Code", "UPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_Source_Code_Unicode_DFS_2015(self):        
        assert osadl_matrix.get_compatibility("BSD-Source-Code", "Unicode-DFS-2015") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_Source_Code_Unicode_DFS_2016(self):        
        assert osadl_matrix.get_compatibility("BSD-Source-Code", "Unicode-DFS-2016") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_Source_Code_Unlicense(self):        
        assert osadl_matrix.get_compatibility("BSD-Source-Code", "Unlicense") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_Source_Code_W3C(self):        
        assert osadl_matrix.get_compatibility("BSD-Source-Code", "W3C") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_Source_Code_W3C_19980720(self):        
        assert osadl_matrix.get_compatibility("BSD-Source-Code", "W3C-19980720") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_Source_Code_W3C_20150513(self):        
        assert osadl_matrix.get_compatibility("BSD-Source-Code", "W3C-20150513") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_Source_Code_WTFPL(self):        
        assert osadl_matrix.get_compatibility("BSD-Source-Code", "WTFPL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_Source_Code_X11(self):        
        assert osadl_matrix.get_compatibility("BSD-Source-Code", "X11") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_Source_Code_XFree86_1_1(self):        
        assert osadl_matrix.get_compatibility("BSD-Source-Code", "XFree86-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_Source_Code_ZPL_2_0(self):        
        assert osadl_matrix.get_compatibility("BSD-Source-Code", "ZPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_Source_Code_Zlib(self):        
        assert osadl_matrix.get_compatibility("BSD-Source-Code", "Zlib") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_Source_Code_bzip2_1_0_5(self):        
        assert osadl_matrix.get_compatibility("BSD-Source-Code", "bzip2-1.0.5") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_Source_Code_bzip2_1_0_6(self):        
        assert osadl_matrix.get_compatibility("BSD-Source-Code", "bzip2-1.0.6") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_Source_Code_curl(self):        
        assert osadl_matrix.get_compatibility("BSD-Source-Code", "curl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_Source_Code_libtiff(self):        
        assert osadl_matrix.get_compatibility("BSD-Source-Code", "libtiff") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSD_Source_Code_zlib_acknowledgement(self):        
        assert osadl_matrix.get_compatibility("BSD-Source-Code", "zlib-acknowledgement") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSL_1_0_0BSD(self):        
        assert osadl_matrix.get_compatibility("BSL-1.0", "0BSD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSL_1_0_AFL_2_0(self):        
        assert osadl_matrix.get_compatibility("BSL-1.0", "AFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSL_1_0_AFL_2_1(self):        
        assert osadl_matrix.get_compatibility("BSL-1.0", "AFL-2.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSL_1_0_AFL_3_0(self):        
        assert osadl_matrix.get_compatibility("BSL-1.0", "AFL-3.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSL_1_0_AGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("BSL-1.0", "AGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSL_1_0_AGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("BSL-1.0", "AGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSL_1_0_Apache_1_0(self):        
        assert osadl_matrix.get_compatibility("BSL-1.0", "Apache-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSL_1_0_Apache_1_1(self):        
        assert osadl_matrix.get_compatibility("BSL-1.0", "Apache-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSL_1_0_Apache_2_0(self):        
        assert osadl_matrix.get_compatibility("BSL-1.0", "Apache-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSL_1_0_Artistic_1_0(self):        
        assert osadl_matrix.get_compatibility("BSL-1.0", "Artistic-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSL_1_0_Artistic_1_0_Perl(self):        
        assert osadl_matrix.get_compatibility("BSL-1.0", "Artistic-1.0-Perl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSL_1_0_Artistic_2_0(self):        
        assert osadl_matrix.get_compatibility("BSL-1.0", "Artistic-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSL_1_0_BSD_1_Clause(self):        
        assert osadl_matrix.get_compatibility("BSL-1.0", "BSD-1-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSL_1_0_BSD_2_Clause(self):        
        assert osadl_matrix.get_compatibility("BSL-1.0", "BSD-2-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSL_1_0_BSD_2_Clause_Patent(self):        
        assert osadl_matrix.get_compatibility("BSL-1.0", "BSD-2-Clause-Patent") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSL_1_0_BSD_3_Clause(self):        
        assert osadl_matrix.get_compatibility("BSL-1.0", "BSD-3-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSL_1_0_BSD_4_Clause(self):        
        assert osadl_matrix.get_compatibility("BSL-1.0", "BSD-4-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSL_1_0_BSD_4_Clause_UC(self):        
        assert osadl_matrix.get_compatibility("BSL-1.0", "BSD-4-Clause-UC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSL_1_0_BSD_Source_Code(self):        
        assert osadl_matrix.get_compatibility("BSL-1.0", "BSD-Source-Code") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSL_1_0_BSL_1_0(self):        
        assert osadl_matrix.get_compatibility("BSL-1.0", "BSL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSL_1_0_CC0_1_0(self):        
        assert osadl_matrix.get_compatibility("BSL-1.0", "CC0-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSL_1_0_CDDL_1_0(self):        
        assert osadl_matrix.get_compatibility("BSL-1.0", "CDDL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSL_1_0_CDDL_1_1(self):        
        assert osadl_matrix.get_compatibility("BSL-1.0", "CDDL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSL_1_0_CPL_1_0(self):        
        assert osadl_matrix.get_compatibility("BSL-1.0", "CPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSL_1_0_EFL_2_0(self):        
        assert osadl_matrix.get_compatibility("BSL-1.0", "EFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSL_1_0_EPL_1_0(self):        
        assert osadl_matrix.get_compatibility("BSL-1.0", "EPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSL_1_0_EPL_2_0(self):        
        assert osadl_matrix.get_compatibility("BSL-1.0", "EPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSL_1_0_EUPL_1_1(self):        
        assert osadl_matrix.get_compatibility("BSL-1.0", "EUPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSL_1_0_EUPL_1_2(self):        
        assert osadl_matrix.get_compatibility("BSL-1.0", "EUPL-1.2") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSL_1_0_FSFAP(self):        
        assert osadl_matrix.get_compatibility("BSL-1.0", "FSFAP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSL_1_0_FSFULLR(self):        
        assert osadl_matrix.get_compatibility("BSL-1.0", "FSFULLR") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSL_1_0_FTL(self):        
        assert osadl_matrix.get_compatibility("BSL-1.0", "FTL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSL_1_0_GPL_1_0_only(self):        
        assert osadl_matrix.get_compatibility("BSL-1.0", "GPL-1.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSL_1_0_GPL_1_0_or_later(self):        
        assert osadl_matrix.get_compatibility("BSL-1.0", "GPL-1.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSL_1_0_GPL_2_0_only(self):        
        assert osadl_matrix.get_compatibility("BSL-1.0", "GPL-2.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSL_1_0_GPL_2_0_only_WITH_Classpath_exception_2_0(self):        
        assert osadl_matrix.get_compatibility("BSL-1.0", "GPL-2.0-only WITH Classpath-exception-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSL_1_0_GPL_2_0_or_later(self):        
        assert osadl_matrix.get_compatibility("BSL-1.0", "GPL-2.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSL_1_0_GPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("BSL-1.0", "GPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSL_1_0_GPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("BSL-1.0", "GPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSL_1_0_HPND(self):        
        assert osadl_matrix.get_compatibility("BSL-1.0", "HPND") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSL_1_0_IBM_pibs(self):        
        assert osadl_matrix.get_compatibility("BSL-1.0", "IBM-pibs") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSL_1_0_ICU(self):        
        assert osadl_matrix.get_compatibility("BSL-1.0", "ICU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSL_1_0_IJG(self):        
        assert osadl_matrix.get_compatibility("BSL-1.0", "IJG") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSL_1_0_IPL_1_0(self):        
        assert osadl_matrix.get_compatibility("BSL-1.0", "IPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSL_1_0_ISC(self):        
        assert osadl_matrix.get_compatibility("BSL-1.0", "ISC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSL_1_0_Info_ZIP(self):        
        assert osadl_matrix.get_compatibility("BSL-1.0", "Info-ZIP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSL_1_0_LGPL_2_1_only(self):        
        assert osadl_matrix.get_compatibility("BSL-1.0", "LGPL-2.1-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSL_1_0_LGPL_2_1_or_later(self):        
        assert osadl_matrix.get_compatibility("BSL-1.0", "LGPL-2.1-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSL_1_0_LGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("BSL-1.0", "LGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSL_1_0_LGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("BSL-1.0", "LGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSL_1_0_Libpng(self):        
        assert osadl_matrix.get_compatibility("BSL-1.0", "Libpng") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSL_1_0_MIT(self):        
        assert osadl_matrix.get_compatibility("BSL-1.0", "MIT") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSL_1_0_MIT_CMU(self):        
        assert osadl_matrix.get_compatibility("BSL-1.0", "MIT-CMU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSL_1_0_MPL_1_1(self):        
        assert osadl_matrix.get_compatibility("BSL-1.0", "MPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSL_1_0_MPL_2_0(self):        
        assert osadl_matrix.get_compatibility("BSL-1.0", "MPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSL_1_0_MPL_2_0_no_copyleft_exception(self):        
        assert osadl_matrix.get_compatibility("BSL-1.0", "MPL-2.0-no-copyleft-exception") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSL_1_0_MS_PL(self):        
        assert osadl_matrix.get_compatibility("BSL-1.0", "MS-PL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_BSL_1_0_MS_RL(self):        
        assert osadl_matrix.get_compatibility("BSL-1.0", "MS-RL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSL_1_0_MirOS(self):        
        assert osadl_matrix.get_compatibility("BSL-1.0", "MirOS") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSL_1_0_NBPL_1_0(self):        
        assert osadl_matrix.get_compatibility("BSL-1.0", "NBPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSL_1_0_NTP(self):        
        assert osadl_matrix.get_compatibility("BSL-1.0", "NTP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSL_1_0_OSL_3_0(self):        
        assert osadl_matrix.get_compatibility("BSL-1.0", "OSL-3.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSL_1_0_OpenSSL(self):        
        assert osadl_matrix.get_compatibility("BSL-1.0", "OpenSSL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_BSL_1_0_PHP_3_01(self):        
        assert osadl_matrix.get_compatibility("BSL-1.0", "PHP-3.01") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSL_1_0_PostgreSQL(self):        
        assert osadl_matrix.get_compatibility("BSL-1.0", "PostgreSQL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSL_1_0_Python_2_0(self):        
        assert osadl_matrix.get_compatibility("BSL-1.0", "Python-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSL_1_0_Qhull(self):        
        assert osadl_matrix.get_compatibility("BSL-1.0", "Qhull") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSL_1_0_RSA_MD(self):        
        assert osadl_matrix.get_compatibility("BSL-1.0", "RSA-MD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSL_1_0_Sleepycat(self):        
        assert osadl_matrix.get_compatibility("BSL-1.0", "Sleepycat") == osadl_matrix.OSADLCompatibility.NO
    

    def test_BSL_1_0_SunPro(self):        
        assert osadl_matrix.get_compatibility("BSL-1.0", "SunPro") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSL_1_0_UPL_1_0(self):        
        assert osadl_matrix.get_compatibility("BSL-1.0", "UPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSL_1_0_Unicode_DFS_2015(self):        
        assert osadl_matrix.get_compatibility("BSL-1.0", "Unicode-DFS-2015") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSL_1_0_Unicode_DFS_2016(self):        
        assert osadl_matrix.get_compatibility("BSL-1.0", "Unicode-DFS-2016") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSL_1_0_Unlicense(self):        
        assert osadl_matrix.get_compatibility("BSL-1.0", "Unlicense") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSL_1_0_W3C(self):        
        assert osadl_matrix.get_compatibility("BSL-1.0", "W3C") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSL_1_0_W3C_19980720(self):        
        assert osadl_matrix.get_compatibility("BSL-1.0", "W3C-19980720") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSL_1_0_W3C_20150513(self):        
        assert osadl_matrix.get_compatibility("BSL-1.0", "W3C-20150513") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSL_1_0_WTFPL(self):        
        assert osadl_matrix.get_compatibility("BSL-1.0", "WTFPL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSL_1_0_X11(self):        
        assert osadl_matrix.get_compatibility("BSL-1.0", "X11") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSL_1_0_XFree86_1_1(self):        
        assert osadl_matrix.get_compatibility("BSL-1.0", "XFree86-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSL_1_0_ZPL_2_0(self):        
        assert osadl_matrix.get_compatibility("BSL-1.0", "ZPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSL_1_0_Zlib(self):        
        assert osadl_matrix.get_compatibility("BSL-1.0", "Zlib") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSL_1_0_bzip2_1_0_5(self):        
        assert osadl_matrix.get_compatibility("BSL-1.0", "bzip2-1.0.5") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSL_1_0_bzip2_1_0_6(self):        
        assert osadl_matrix.get_compatibility("BSL-1.0", "bzip2-1.0.6") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSL_1_0_curl(self):        
        assert osadl_matrix.get_compatibility("BSL-1.0", "curl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSL_1_0_libtiff(self):        
        assert osadl_matrix.get_compatibility("BSL-1.0", "libtiff") == osadl_matrix.OSADLCompatibility.YES
    

    def test_BSL_1_0_zlib_acknowledgement(self):        
        assert osadl_matrix.get_compatibility("BSL-1.0", "zlib-acknowledgement") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CC0_1_0_0BSD(self):        
        assert osadl_matrix.get_compatibility("CC0-1.0", "0BSD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CC0_1_0_AFL_2_0(self):        
        assert osadl_matrix.get_compatibility("CC0-1.0", "AFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CC0_1_0_AFL_2_1(self):        
        assert osadl_matrix.get_compatibility("CC0-1.0", "AFL-2.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CC0_1_0_AFL_3_0(self):        
        assert osadl_matrix.get_compatibility("CC0-1.0", "AFL-3.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CC0_1_0_AGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("CC0-1.0", "AGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CC0_1_0_AGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("CC0-1.0", "AGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CC0_1_0_Apache_1_0(self):        
        assert osadl_matrix.get_compatibility("CC0-1.0", "Apache-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CC0_1_0_Apache_1_1(self):        
        assert osadl_matrix.get_compatibility("CC0-1.0", "Apache-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CC0_1_0_Apache_2_0(self):        
        assert osadl_matrix.get_compatibility("CC0-1.0", "Apache-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CC0_1_0_Artistic_1_0(self):        
        assert osadl_matrix.get_compatibility("CC0-1.0", "Artistic-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CC0_1_0_Artistic_1_0_Perl(self):        
        assert osadl_matrix.get_compatibility("CC0-1.0", "Artistic-1.0-Perl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CC0_1_0_Artistic_2_0(self):        
        assert osadl_matrix.get_compatibility("CC0-1.0", "Artistic-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CC0_1_0_BSD_1_Clause(self):        
        assert osadl_matrix.get_compatibility("CC0-1.0", "BSD-1-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CC0_1_0_BSD_2_Clause(self):        
        assert osadl_matrix.get_compatibility("CC0-1.0", "BSD-2-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CC0_1_0_BSD_2_Clause_Patent(self):        
        assert osadl_matrix.get_compatibility("CC0-1.0", "BSD-2-Clause-Patent") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CC0_1_0_BSD_3_Clause(self):        
        assert osadl_matrix.get_compatibility("CC0-1.0", "BSD-3-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CC0_1_0_BSD_4_Clause(self):        
        assert osadl_matrix.get_compatibility("CC0-1.0", "BSD-4-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CC0_1_0_BSD_4_Clause_UC(self):        
        assert osadl_matrix.get_compatibility("CC0-1.0", "BSD-4-Clause-UC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CC0_1_0_BSD_Source_Code(self):        
        assert osadl_matrix.get_compatibility("CC0-1.0", "BSD-Source-Code") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CC0_1_0_BSL_1_0(self):        
        assert osadl_matrix.get_compatibility("CC0-1.0", "BSL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CC0_1_0_CC0_1_0(self):        
        assert osadl_matrix.get_compatibility("CC0-1.0", "CC0-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CC0_1_0_CDDL_1_0(self):        
        assert osadl_matrix.get_compatibility("CC0-1.0", "CDDL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CC0_1_0_CDDL_1_1(self):        
        assert osadl_matrix.get_compatibility("CC0-1.0", "CDDL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CC0_1_0_CPL_1_0(self):        
        assert osadl_matrix.get_compatibility("CC0-1.0", "CPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CC0_1_0_EFL_2_0(self):        
        assert osadl_matrix.get_compatibility("CC0-1.0", "EFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CC0_1_0_EPL_1_0(self):        
        assert osadl_matrix.get_compatibility("CC0-1.0", "EPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CC0_1_0_EPL_2_0(self):        
        assert osadl_matrix.get_compatibility("CC0-1.0", "EPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CC0_1_0_EUPL_1_1(self):        
        assert osadl_matrix.get_compatibility("CC0-1.0", "EUPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CC0_1_0_EUPL_1_2(self):        
        assert osadl_matrix.get_compatibility("CC0-1.0", "EUPL-1.2") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CC0_1_0_FSFAP(self):        
        assert osadl_matrix.get_compatibility("CC0-1.0", "FSFAP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CC0_1_0_FSFULLR(self):        
        assert osadl_matrix.get_compatibility("CC0-1.0", "FSFULLR") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CC0_1_0_FTL(self):        
        assert osadl_matrix.get_compatibility("CC0-1.0", "FTL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CC0_1_0_GPL_1_0_only(self):        
        assert osadl_matrix.get_compatibility("CC0-1.0", "GPL-1.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CC0_1_0_GPL_1_0_or_later(self):        
        assert osadl_matrix.get_compatibility("CC0-1.0", "GPL-1.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CC0_1_0_GPL_2_0_only(self):        
        assert osadl_matrix.get_compatibility("CC0-1.0", "GPL-2.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CC0_1_0_GPL_2_0_only_WITH_Classpath_exception_2_0(self):        
        assert osadl_matrix.get_compatibility("CC0-1.0", "GPL-2.0-only WITH Classpath-exception-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CC0_1_0_GPL_2_0_or_later(self):        
        assert osadl_matrix.get_compatibility("CC0-1.0", "GPL-2.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CC0_1_0_GPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("CC0-1.0", "GPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CC0_1_0_GPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("CC0-1.0", "GPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CC0_1_0_HPND(self):        
        assert osadl_matrix.get_compatibility("CC0-1.0", "HPND") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CC0_1_0_IBM_pibs(self):        
        assert osadl_matrix.get_compatibility("CC0-1.0", "IBM-pibs") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CC0_1_0_ICU(self):        
        assert osadl_matrix.get_compatibility("CC0-1.0", "ICU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CC0_1_0_IJG(self):        
        assert osadl_matrix.get_compatibility("CC0-1.0", "IJG") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CC0_1_0_IPL_1_0(self):        
        assert osadl_matrix.get_compatibility("CC0-1.0", "IPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CC0_1_0_ISC(self):        
        assert osadl_matrix.get_compatibility("CC0-1.0", "ISC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CC0_1_0_Info_ZIP(self):        
        assert osadl_matrix.get_compatibility("CC0-1.0", "Info-ZIP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CC0_1_0_LGPL_2_1_only(self):        
        assert osadl_matrix.get_compatibility("CC0-1.0", "LGPL-2.1-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CC0_1_0_LGPL_2_1_or_later(self):        
        assert osadl_matrix.get_compatibility("CC0-1.0", "LGPL-2.1-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CC0_1_0_LGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("CC0-1.0", "LGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CC0_1_0_LGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("CC0-1.0", "LGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CC0_1_0_Libpng(self):        
        assert osadl_matrix.get_compatibility("CC0-1.0", "Libpng") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CC0_1_0_MIT(self):        
        assert osadl_matrix.get_compatibility("CC0-1.0", "MIT") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CC0_1_0_MIT_CMU(self):        
        assert osadl_matrix.get_compatibility("CC0-1.0", "MIT-CMU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CC0_1_0_MPL_1_1(self):        
        assert osadl_matrix.get_compatibility("CC0-1.0", "MPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CC0_1_0_MPL_2_0(self):        
        assert osadl_matrix.get_compatibility("CC0-1.0", "MPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CC0_1_0_MPL_2_0_no_copyleft_exception(self):        
        assert osadl_matrix.get_compatibility("CC0-1.0", "MPL-2.0-no-copyleft-exception") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CC0_1_0_MS_PL(self):        
        assert osadl_matrix.get_compatibility("CC0-1.0", "MS-PL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CC0_1_0_MS_RL(self):        
        assert osadl_matrix.get_compatibility("CC0-1.0", "MS-RL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CC0_1_0_MirOS(self):        
        assert osadl_matrix.get_compatibility("CC0-1.0", "MirOS") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CC0_1_0_NBPL_1_0(self):        
        assert osadl_matrix.get_compatibility("CC0-1.0", "NBPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CC0_1_0_NTP(self):        
        assert osadl_matrix.get_compatibility("CC0-1.0", "NTP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CC0_1_0_OSL_3_0(self):        
        assert osadl_matrix.get_compatibility("CC0-1.0", "OSL-3.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CC0_1_0_OpenSSL(self):        
        assert osadl_matrix.get_compatibility("CC0-1.0", "OpenSSL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CC0_1_0_PHP_3_01(self):        
        assert osadl_matrix.get_compatibility("CC0-1.0", "PHP-3.01") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CC0_1_0_PostgreSQL(self):        
        assert osadl_matrix.get_compatibility("CC0-1.0", "PostgreSQL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CC0_1_0_Python_2_0(self):        
        assert osadl_matrix.get_compatibility("CC0-1.0", "Python-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CC0_1_0_Qhull(self):        
        assert osadl_matrix.get_compatibility("CC0-1.0", "Qhull") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CC0_1_0_RSA_MD(self):        
        assert osadl_matrix.get_compatibility("CC0-1.0", "RSA-MD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CC0_1_0_Sleepycat(self):        
        assert osadl_matrix.get_compatibility("CC0-1.0", "Sleepycat") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CC0_1_0_SunPro(self):        
        assert osadl_matrix.get_compatibility("CC0-1.0", "SunPro") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CC0_1_0_UPL_1_0(self):        
        assert osadl_matrix.get_compatibility("CC0-1.0", "UPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CC0_1_0_Unicode_DFS_2015(self):        
        assert osadl_matrix.get_compatibility("CC0-1.0", "Unicode-DFS-2015") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CC0_1_0_Unicode_DFS_2016(self):        
        assert osadl_matrix.get_compatibility("CC0-1.0", "Unicode-DFS-2016") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CC0_1_0_Unlicense(self):        
        assert osadl_matrix.get_compatibility("CC0-1.0", "Unlicense") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CC0_1_0_W3C(self):        
        assert osadl_matrix.get_compatibility("CC0-1.0", "W3C") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CC0_1_0_W3C_19980720(self):        
        assert osadl_matrix.get_compatibility("CC0-1.0", "W3C-19980720") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CC0_1_0_W3C_20150513(self):        
        assert osadl_matrix.get_compatibility("CC0-1.0", "W3C-20150513") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CC0_1_0_WTFPL(self):        
        assert osadl_matrix.get_compatibility("CC0-1.0", "WTFPL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CC0_1_0_X11(self):        
        assert osadl_matrix.get_compatibility("CC0-1.0", "X11") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CC0_1_0_XFree86_1_1(self):        
        assert osadl_matrix.get_compatibility("CC0-1.0", "XFree86-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CC0_1_0_ZPL_2_0(self):        
        assert osadl_matrix.get_compatibility("CC0-1.0", "ZPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CC0_1_0_Zlib(self):        
        assert osadl_matrix.get_compatibility("CC0-1.0", "Zlib") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CC0_1_0_bzip2_1_0_5(self):        
        assert osadl_matrix.get_compatibility("CC0-1.0", "bzip2-1.0.5") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CC0_1_0_bzip2_1_0_6(self):        
        assert osadl_matrix.get_compatibility("CC0-1.0", "bzip2-1.0.6") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CC0_1_0_curl(self):        
        assert osadl_matrix.get_compatibility("CC0-1.0", "curl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CC0_1_0_libtiff(self):        
        assert osadl_matrix.get_compatibility("CC0-1.0", "libtiff") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CC0_1_0_zlib_acknowledgement(self):        
        assert osadl_matrix.get_compatibility("CC0-1.0", "zlib-acknowledgement") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CDDL_1_0_0BSD(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.0", "0BSD") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CDDL_1_0_AFL_2_0(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.0", "AFL-2.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CDDL_1_0_AFL_2_1(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.0", "AFL-2.1") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CDDL_1_0_AFL_3_0(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.0", "AFL-3.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CDDL_1_0_AGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.0", "AGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CDDL_1_0_AGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.0", "AGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CDDL_1_0_Apache_1_0(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.0", "Apache-1.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CDDL_1_0_Apache_1_1(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.0", "Apache-1.1") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CDDL_1_0_Apache_2_0(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.0", "Apache-2.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CDDL_1_0_Artistic_1_0(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.0", "Artistic-1.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CDDL_1_0_Artistic_1_0_Perl(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.0", "Artistic-1.0-Perl") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CDDL_1_0_Artistic_2_0(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.0", "Artistic-2.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CDDL_1_0_BSD_1_Clause(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.0", "BSD-1-Clause") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CDDL_1_0_BSD_2_Clause(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.0", "BSD-2-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CDDL_1_0_BSD_2_Clause_Patent(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.0", "BSD-2-Clause-Patent") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CDDL_1_0_BSD_3_Clause(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.0", "BSD-3-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CDDL_1_0_BSD_4_Clause(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.0", "BSD-4-Clause") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CDDL_1_0_BSD_4_Clause_UC(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.0", "BSD-4-Clause-UC") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CDDL_1_0_BSD_Source_Code(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.0", "BSD-Source-Code") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CDDL_1_0_BSL_1_0(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.0", "BSL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CDDL_1_0_CC0_1_0(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.0", "CC0-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CDDL_1_0_CDDL_1_0(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.0", "CDDL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CDDL_1_0_CDDL_1_1(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.0", "CDDL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CDDL_1_0_CPL_1_0(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.0", "CPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CDDL_1_0_EFL_2_0(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.0", "EFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CDDL_1_0_EPL_1_0(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.0", "EPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CDDL_1_0_EPL_2_0(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.0", "EPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CDDL_1_0_EUPL_1_1(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.0", "EUPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CDDL_1_0_EUPL_1_2(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.0", "EUPL-1.2") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CDDL_1_0_FSFAP(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.0", "FSFAP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CDDL_1_0_FSFULLR(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.0", "FSFULLR") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CDDL_1_0_FTL(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.0", "FTL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CDDL_1_0_GPL_1_0_only(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.0", "GPL-1.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CDDL_1_0_GPL_1_0_or_later(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.0", "GPL-1.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CDDL_1_0_GPL_2_0_only(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.0", "GPL-2.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CDDL_1_0_GPL_2_0_only_WITH_Classpath_exception_2_0(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.0", "GPL-2.0-only WITH Classpath-exception-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CDDL_1_0_GPL_2_0_or_later(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.0", "GPL-2.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CDDL_1_0_GPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.0", "GPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CDDL_1_0_GPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.0", "GPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CDDL_1_0_HPND(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.0", "HPND") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CDDL_1_0_IBM_pibs(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.0", "IBM-pibs") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CDDL_1_0_ICU(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.0", "ICU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CDDL_1_0_IJG(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.0", "IJG") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CDDL_1_0_IPL_1_0(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.0", "IPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CDDL_1_0_ISC(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.0", "ISC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CDDL_1_0_Info_ZIP(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.0", "Info-ZIP") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CDDL_1_0_LGPL_2_1_only(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.0", "LGPL-2.1-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CDDL_1_0_LGPL_2_1_or_later(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.0", "LGPL-2.1-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CDDL_1_0_LGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.0", "LGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CDDL_1_0_LGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.0", "LGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CDDL_1_0_Libpng(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.0", "Libpng") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CDDL_1_0_MIT(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.0", "MIT") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CDDL_1_0_MIT_CMU(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.0", "MIT-CMU") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CDDL_1_0_MPL_1_1(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.0", "MPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CDDL_1_0_MPL_2_0(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.0", "MPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CDDL_1_0_MPL_2_0_no_copyleft_exception(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.0", "MPL-2.0-no-copyleft-exception") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CDDL_1_0_MS_PL(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.0", "MS-PL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CDDL_1_0_MS_RL(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.0", "MS-RL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CDDL_1_0_MirOS(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.0", "MirOS") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CDDL_1_0_NBPL_1_0(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.0", "NBPL-1.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CDDL_1_0_NTP(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.0", "NTP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CDDL_1_0_OSL_3_0(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.0", "OSL-3.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CDDL_1_0_OpenSSL(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.0", "OpenSSL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CDDL_1_0_PHP_3_01(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.0", "PHP-3.01") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CDDL_1_0_PostgreSQL(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.0", "PostgreSQL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CDDL_1_0_Python_2_0(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.0", "Python-2.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CDDL_1_0_Qhull(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.0", "Qhull") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CDDL_1_0_RSA_MD(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.0", "RSA-MD") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CDDL_1_0_Sleepycat(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.0", "Sleepycat") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CDDL_1_0_SunPro(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.0", "SunPro") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CDDL_1_0_UPL_1_0(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.0", "UPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CDDL_1_0_Unicode_DFS_2015(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.0", "Unicode-DFS-2015") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CDDL_1_0_Unicode_DFS_2016(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.0", "Unicode-DFS-2016") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CDDL_1_0_Unlicense(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.0", "Unlicense") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CDDL_1_0_W3C(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.0", "W3C") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CDDL_1_0_W3C_19980720(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.0", "W3C-19980720") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CDDL_1_0_W3C_20150513(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.0", "W3C-20150513") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CDDL_1_0_WTFPL(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.0", "WTFPL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CDDL_1_0_X11(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.0", "X11") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CDDL_1_0_XFree86_1_1(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.0", "XFree86-1.1") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CDDL_1_0_ZPL_2_0(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.0", "ZPL-2.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CDDL_1_0_Zlib(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.0", "Zlib") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CDDL_1_0_bzip2_1_0_5(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.0", "bzip2-1.0.5") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CDDL_1_0_bzip2_1_0_6(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.0", "bzip2-1.0.6") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CDDL_1_0_curl(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.0", "curl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CDDL_1_0_libtiff(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.0", "libtiff") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CDDL_1_0_zlib_acknowledgement(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.0", "zlib-acknowledgement") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CDDL_1_1_0BSD(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.1", "0BSD") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CDDL_1_1_AFL_2_0(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.1", "AFL-2.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CDDL_1_1_AFL_2_1(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.1", "AFL-2.1") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CDDL_1_1_AFL_3_0(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.1", "AFL-3.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CDDL_1_1_AGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.1", "AGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CDDL_1_1_AGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.1", "AGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CDDL_1_1_Apache_1_0(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.1", "Apache-1.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CDDL_1_1_Apache_1_1(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.1", "Apache-1.1") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CDDL_1_1_Apache_2_0(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.1", "Apache-2.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CDDL_1_1_Artistic_1_0(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.1", "Artistic-1.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CDDL_1_1_Artistic_1_0_Perl(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.1", "Artistic-1.0-Perl") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CDDL_1_1_Artistic_2_0(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.1", "Artistic-2.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CDDL_1_1_BSD_1_Clause(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.1", "BSD-1-Clause") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CDDL_1_1_BSD_2_Clause(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.1", "BSD-2-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CDDL_1_1_BSD_2_Clause_Patent(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.1", "BSD-2-Clause-Patent") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CDDL_1_1_BSD_3_Clause(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.1", "BSD-3-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CDDL_1_1_BSD_4_Clause(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.1", "BSD-4-Clause") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CDDL_1_1_BSD_4_Clause_UC(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.1", "BSD-4-Clause-UC") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CDDL_1_1_BSD_Source_Code(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.1", "BSD-Source-Code") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CDDL_1_1_BSL_1_0(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.1", "BSL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CDDL_1_1_CC0_1_0(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.1", "CC0-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CDDL_1_1_CDDL_1_0(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.1", "CDDL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CDDL_1_1_CDDL_1_1(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.1", "CDDL-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CDDL_1_1_CPL_1_0(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.1", "CPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CDDL_1_1_EFL_2_0(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.1", "EFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CDDL_1_1_EPL_1_0(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.1", "EPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CDDL_1_1_EPL_2_0(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.1", "EPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CDDL_1_1_EUPL_1_1(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.1", "EUPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CDDL_1_1_EUPL_1_2(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.1", "EUPL-1.2") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CDDL_1_1_FSFAP(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.1", "FSFAP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CDDL_1_1_FSFULLR(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.1", "FSFULLR") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CDDL_1_1_FTL(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.1", "FTL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CDDL_1_1_GPL_1_0_only(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.1", "GPL-1.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CDDL_1_1_GPL_1_0_or_later(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.1", "GPL-1.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CDDL_1_1_GPL_2_0_only(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.1", "GPL-2.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CDDL_1_1_GPL_2_0_only_WITH_Classpath_exception_2_0(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.1", "GPL-2.0-only WITH Classpath-exception-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CDDL_1_1_GPL_2_0_or_later(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.1", "GPL-2.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CDDL_1_1_GPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.1", "GPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CDDL_1_1_GPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.1", "GPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CDDL_1_1_HPND(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.1", "HPND") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CDDL_1_1_IBM_pibs(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.1", "IBM-pibs") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CDDL_1_1_ICU(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.1", "ICU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CDDL_1_1_IJG(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.1", "IJG") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CDDL_1_1_IPL_1_0(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.1", "IPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CDDL_1_1_ISC(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.1", "ISC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CDDL_1_1_Info_ZIP(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.1", "Info-ZIP") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CDDL_1_1_LGPL_2_1_only(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.1", "LGPL-2.1-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CDDL_1_1_LGPL_2_1_or_later(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.1", "LGPL-2.1-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CDDL_1_1_LGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.1", "LGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CDDL_1_1_LGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.1", "LGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CDDL_1_1_Libpng(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.1", "Libpng") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CDDL_1_1_MIT(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.1", "MIT") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CDDL_1_1_MIT_CMU(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.1", "MIT-CMU") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CDDL_1_1_MPL_1_1(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.1", "MPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CDDL_1_1_MPL_2_0(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.1", "MPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CDDL_1_1_MPL_2_0_no_copyleft_exception(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.1", "MPL-2.0-no-copyleft-exception") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CDDL_1_1_MS_PL(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.1", "MS-PL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CDDL_1_1_MS_RL(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.1", "MS-RL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CDDL_1_1_MirOS(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.1", "MirOS") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CDDL_1_1_NBPL_1_0(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.1", "NBPL-1.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CDDL_1_1_NTP(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.1", "NTP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CDDL_1_1_OSL_3_0(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.1", "OSL-3.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CDDL_1_1_OpenSSL(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.1", "OpenSSL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CDDL_1_1_PHP_3_01(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.1", "PHP-3.01") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CDDL_1_1_PostgreSQL(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.1", "PostgreSQL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CDDL_1_1_Python_2_0(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.1", "Python-2.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CDDL_1_1_Qhull(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.1", "Qhull") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CDDL_1_1_RSA_MD(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.1", "RSA-MD") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CDDL_1_1_Sleepycat(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.1", "Sleepycat") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CDDL_1_1_SunPro(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.1", "SunPro") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CDDL_1_1_UPL_1_0(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.1", "UPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CDDL_1_1_Unicode_DFS_2015(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.1", "Unicode-DFS-2015") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CDDL_1_1_Unicode_DFS_2016(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.1", "Unicode-DFS-2016") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CDDL_1_1_Unlicense(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.1", "Unlicense") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CDDL_1_1_W3C(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.1", "W3C") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CDDL_1_1_W3C_19980720(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.1", "W3C-19980720") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CDDL_1_1_W3C_20150513(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.1", "W3C-20150513") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CDDL_1_1_WTFPL(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.1", "WTFPL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CDDL_1_1_X11(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.1", "X11") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CDDL_1_1_XFree86_1_1(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.1", "XFree86-1.1") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CDDL_1_1_ZPL_2_0(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.1", "ZPL-2.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CDDL_1_1_Zlib(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.1", "Zlib") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CDDL_1_1_bzip2_1_0_5(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.1", "bzip2-1.0.5") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CDDL_1_1_bzip2_1_0_6(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.1", "bzip2-1.0.6") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CDDL_1_1_curl(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.1", "curl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CDDL_1_1_libtiff(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.1", "libtiff") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CDDL_1_1_zlib_acknowledgement(self):        
        assert osadl_matrix.get_compatibility("CDDL-1.1", "zlib-acknowledgement") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CPL_1_0_0BSD(self):        
        assert osadl_matrix.get_compatibility("CPL-1.0", "0BSD") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CPL_1_0_AFL_2_0(self):        
        assert osadl_matrix.get_compatibility("CPL-1.0", "AFL-2.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CPL_1_0_AFL_2_1(self):        
        assert osadl_matrix.get_compatibility("CPL-1.0", "AFL-2.1") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CPL_1_0_AFL_3_0(self):        
        assert osadl_matrix.get_compatibility("CPL-1.0", "AFL-3.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CPL_1_0_AGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("CPL-1.0", "AGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CPL_1_0_AGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("CPL-1.0", "AGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CPL_1_0_Apache_1_0(self):        
        assert osadl_matrix.get_compatibility("CPL-1.0", "Apache-1.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CPL_1_0_Apache_1_1(self):        
        assert osadl_matrix.get_compatibility("CPL-1.0", "Apache-1.1") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CPL_1_0_Apache_2_0(self):        
        assert osadl_matrix.get_compatibility("CPL-1.0", "Apache-2.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CPL_1_0_Artistic_1_0(self):        
        assert osadl_matrix.get_compatibility("CPL-1.0", "Artistic-1.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CPL_1_0_Artistic_1_0_Perl(self):        
        assert osadl_matrix.get_compatibility("CPL-1.0", "Artistic-1.0-Perl") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CPL_1_0_Artistic_2_0(self):        
        assert osadl_matrix.get_compatibility("CPL-1.0", "Artistic-2.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CPL_1_0_BSD_1_Clause(self):        
        assert osadl_matrix.get_compatibility("CPL-1.0", "BSD-1-Clause") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CPL_1_0_BSD_2_Clause(self):        
        assert osadl_matrix.get_compatibility("CPL-1.0", "BSD-2-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CPL_1_0_BSD_2_Clause_Patent(self):        
        assert osadl_matrix.get_compatibility("CPL-1.0", "BSD-2-Clause-Patent") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CPL_1_0_BSD_3_Clause(self):        
        assert osadl_matrix.get_compatibility("CPL-1.0", "BSD-3-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CPL_1_0_BSD_4_Clause(self):        
        assert osadl_matrix.get_compatibility("CPL-1.0", "BSD-4-Clause") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CPL_1_0_BSD_4_Clause_UC(self):        
        assert osadl_matrix.get_compatibility("CPL-1.0", "BSD-4-Clause-UC") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CPL_1_0_BSD_Source_Code(self):        
        assert osadl_matrix.get_compatibility("CPL-1.0", "BSD-Source-Code") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CPL_1_0_BSL_1_0(self):        
        assert osadl_matrix.get_compatibility("CPL-1.0", "BSL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CPL_1_0_CC0_1_0(self):        
        assert osadl_matrix.get_compatibility("CPL-1.0", "CC0-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CPL_1_0_CDDL_1_0(self):        
        assert osadl_matrix.get_compatibility("CPL-1.0", "CDDL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CPL_1_0_CDDL_1_1(self):        
        assert osadl_matrix.get_compatibility("CPL-1.0", "CDDL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CPL_1_0_CPL_1_0(self):        
        assert osadl_matrix.get_compatibility("CPL-1.0", "CPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CPL_1_0_EFL_2_0(self):        
        assert osadl_matrix.get_compatibility("CPL-1.0", "EFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CPL_1_0_EPL_1_0(self):        
        assert osadl_matrix.get_compatibility("CPL-1.0", "EPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CPL_1_0_EPL_2_0(self):        
        assert osadl_matrix.get_compatibility("CPL-1.0", "EPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CPL_1_0_EUPL_1_1(self):        
        assert osadl_matrix.get_compatibility("CPL-1.0", "EUPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CPL_1_0_EUPL_1_2(self):        
        assert osadl_matrix.get_compatibility("CPL-1.0", "EUPL-1.2") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CPL_1_0_FSFAP(self):        
        assert osadl_matrix.get_compatibility("CPL-1.0", "FSFAP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CPL_1_0_FSFULLR(self):        
        assert osadl_matrix.get_compatibility("CPL-1.0", "FSFULLR") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CPL_1_0_FTL(self):        
        assert osadl_matrix.get_compatibility("CPL-1.0", "FTL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CPL_1_0_GPL_1_0_only(self):        
        assert osadl_matrix.get_compatibility("CPL-1.0", "GPL-1.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CPL_1_0_GPL_1_0_or_later(self):        
        assert osadl_matrix.get_compatibility("CPL-1.0", "GPL-1.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CPL_1_0_GPL_2_0_only(self):        
        assert osadl_matrix.get_compatibility("CPL-1.0", "GPL-2.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CPL_1_0_GPL_2_0_only_WITH_Classpath_exception_2_0(self):        
        assert osadl_matrix.get_compatibility("CPL-1.0", "GPL-2.0-only WITH Classpath-exception-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CPL_1_0_GPL_2_0_or_later(self):        
        assert osadl_matrix.get_compatibility("CPL-1.0", "GPL-2.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CPL_1_0_GPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("CPL-1.0", "GPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CPL_1_0_GPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("CPL-1.0", "GPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CPL_1_0_HPND(self):        
        assert osadl_matrix.get_compatibility("CPL-1.0", "HPND") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CPL_1_0_IBM_pibs(self):        
        assert osadl_matrix.get_compatibility("CPL-1.0", "IBM-pibs") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CPL_1_0_ICU(self):        
        assert osadl_matrix.get_compatibility("CPL-1.0", "ICU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CPL_1_0_IJG(self):        
        assert osadl_matrix.get_compatibility("CPL-1.0", "IJG") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CPL_1_0_IPL_1_0(self):        
        assert osadl_matrix.get_compatibility("CPL-1.0", "IPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CPL_1_0_ISC(self):        
        assert osadl_matrix.get_compatibility("CPL-1.0", "ISC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CPL_1_0_Info_ZIP(self):        
        assert osadl_matrix.get_compatibility("CPL-1.0", "Info-ZIP") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CPL_1_0_LGPL_2_1_only(self):        
        assert osadl_matrix.get_compatibility("CPL-1.0", "LGPL-2.1-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CPL_1_0_LGPL_2_1_or_later(self):        
        assert osadl_matrix.get_compatibility("CPL-1.0", "LGPL-2.1-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CPL_1_0_LGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("CPL-1.0", "LGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CPL_1_0_LGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("CPL-1.0", "LGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CPL_1_0_Libpng(self):        
        assert osadl_matrix.get_compatibility("CPL-1.0", "Libpng") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CPL_1_0_MIT(self):        
        assert osadl_matrix.get_compatibility("CPL-1.0", "MIT") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CPL_1_0_MIT_CMU(self):        
        assert osadl_matrix.get_compatibility("CPL-1.0", "MIT-CMU") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CPL_1_0_MPL_1_1(self):        
        assert osadl_matrix.get_compatibility("CPL-1.0", "MPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CPL_1_0_MPL_2_0(self):        
        assert osadl_matrix.get_compatibility("CPL-1.0", "MPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CPL_1_0_MPL_2_0_no_copyleft_exception(self):        
        assert osadl_matrix.get_compatibility("CPL-1.0", "MPL-2.0-no-copyleft-exception") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CPL_1_0_MS_PL(self):        
        assert osadl_matrix.get_compatibility("CPL-1.0", "MS-PL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CPL_1_0_MS_RL(self):        
        assert osadl_matrix.get_compatibility("CPL-1.0", "MS-RL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CPL_1_0_MirOS(self):        
        assert osadl_matrix.get_compatibility("CPL-1.0", "MirOS") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CPL_1_0_NBPL_1_0(self):        
        assert osadl_matrix.get_compatibility("CPL-1.0", "NBPL-1.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CPL_1_0_NTP(self):        
        assert osadl_matrix.get_compatibility("CPL-1.0", "NTP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CPL_1_0_OSL_3_0(self):        
        assert osadl_matrix.get_compatibility("CPL-1.0", "OSL-3.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CPL_1_0_OpenSSL(self):        
        assert osadl_matrix.get_compatibility("CPL-1.0", "OpenSSL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CPL_1_0_PHP_3_01(self):        
        assert osadl_matrix.get_compatibility("CPL-1.0", "PHP-3.01") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CPL_1_0_PostgreSQL(self):        
        assert osadl_matrix.get_compatibility("CPL-1.0", "PostgreSQL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CPL_1_0_Python_2_0(self):        
        assert osadl_matrix.get_compatibility("CPL-1.0", "Python-2.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CPL_1_0_Qhull(self):        
        assert osadl_matrix.get_compatibility("CPL-1.0", "Qhull") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CPL_1_0_RSA_MD(self):        
        assert osadl_matrix.get_compatibility("CPL-1.0", "RSA-MD") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CPL_1_0_Sleepycat(self):        
        assert osadl_matrix.get_compatibility("CPL-1.0", "Sleepycat") == osadl_matrix.OSADLCompatibility.NO
    

    def test_CPL_1_0_SunPro(self):        
        assert osadl_matrix.get_compatibility("CPL-1.0", "SunPro") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CPL_1_0_UPL_1_0(self):        
        assert osadl_matrix.get_compatibility("CPL-1.0", "UPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CPL_1_0_Unicode_DFS_2015(self):        
        assert osadl_matrix.get_compatibility("CPL-1.0", "Unicode-DFS-2015") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CPL_1_0_Unicode_DFS_2016(self):        
        assert osadl_matrix.get_compatibility("CPL-1.0", "Unicode-DFS-2016") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CPL_1_0_Unlicense(self):        
        assert osadl_matrix.get_compatibility("CPL-1.0", "Unlicense") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CPL_1_0_W3C(self):        
        assert osadl_matrix.get_compatibility("CPL-1.0", "W3C") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CPL_1_0_W3C_19980720(self):        
        assert osadl_matrix.get_compatibility("CPL-1.0", "W3C-19980720") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CPL_1_0_W3C_20150513(self):        
        assert osadl_matrix.get_compatibility("CPL-1.0", "W3C-20150513") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CPL_1_0_WTFPL(self):        
        assert osadl_matrix.get_compatibility("CPL-1.0", "WTFPL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CPL_1_0_X11(self):        
        assert osadl_matrix.get_compatibility("CPL-1.0", "X11") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CPL_1_0_XFree86_1_1(self):        
        assert osadl_matrix.get_compatibility("CPL-1.0", "XFree86-1.1") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CPL_1_0_ZPL_2_0(self):        
        assert osadl_matrix.get_compatibility("CPL-1.0", "ZPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CPL_1_0_Zlib(self):        
        assert osadl_matrix.get_compatibility("CPL-1.0", "Zlib") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CPL_1_0_bzip2_1_0_5(self):        
        assert osadl_matrix.get_compatibility("CPL-1.0", "bzip2-1.0.5") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CPL_1_0_bzip2_1_0_6(self):        
        assert osadl_matrix.get_compatibility("CPL-1.0", "bzip2-1.0.6") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CPL_1_0_curl(self):        
        assert osadl_matrix.get_compatibility("CPL-1.0", "curl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_CPL_1_0_libtiff(self):        
        assert osadl_matrix.get_compatibility("CPL-1.0", "libtiff") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_CPL_1_0_zlib_acknowledgement(self):        
        assert osadl_matrix.get_compatibility("CPL-1.0", "zlib-acknowledgement") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EFL_2_0_0BSD(self):        
        assert osadl_matrix.get_compatibility("EFL-2.0", "0BSD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EFL_2_0_AFL_2_0(self):        
        assert osadl_matrix.get_compatibility("EFL-2.0", "AFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EFL_2_0_AFL_2_1(self):        
        assert osadl_matrix.get_compatibility("EFL-2.0", "AFL-2.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EFL_2_0_AFL_3_0(self):        
        assert osadl_matrix.get_compatibility("EFL-2.0", "AFL-3.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EFL_2_0_AGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("EFL-2.0", "AGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EFL_2_0_AGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("EFL-2.0", "AGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EFL_2_0_Apache_1_0(self):        
        assert osadl_matrix.get_compatibility("EFL-2.0", "Apache-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EFL_2_0_Apache_1_1(self):        
        assert osadl_matrix.get_compatibility("EFL-2.0", "Apache-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EFL_2_0_Apache_2_0(self):        
        assert osadl_matrix.get_compatibility("EFL-2.0", "Apache-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EFL_2_0_Artistic_1_0(self):        
        assert osadl_matrix.get_compatibility("EFL-2.0", "Artistic-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EFL_2_0_Artistic_1_0_Perl(self):        
        assert osadl_matrix.get_compatibility("EFL-2.0", "Artistic-1.0-Perl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EFL_2_0_Artistic_2_0(self):        
        assert osadl_matrix.get_compatibility("EFL-2.0", "Artistic-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EFL_2_0_BSD_1_Clause(self):        
        assert osadl_matrix.get_compatibility("EFL-2.0", "BSD-1-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EFL_2_0_BSD_2_Clause(self):        
        assert osadl_matrix.get_compatibility("EFL-2.0", "BSD-2-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EFL_2_0_BSD_2_Clause_Patent(self):        
        assert osadl_matrix.get_compatibility("EFL-2.0", "BSD-2-Clause-Patent") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EFL_2_0_BSD_3_Clause(self):        
        assert osadl_matrix.get_compatibility("EFL-2.0", "BSD-3-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EFL_2_0_BSD_4_Clause(self):        
        assert osadl_matrix.get_compatibility("EFL-2.0", "BSD-4-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EFL_2_0_BSD_4_Clause_UC(self):        
        assert osadl_matrix.get_compatibility("EFL-2.0", "BSD-4-Clause-UC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EFL_2_0_BSD_Source_Code(self):        
        assert osadl_matrix.get_compatibility("EFL-2.0", "BSD-Source-Code") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EFL_2_0_BSL_1_0(self):        
        assert osadl_matrix.get_compatibility("EFL-2.0", "BSL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EFL_2_0_CC0_1_0(self):        
        assert osadl_matrix.get_compatibility("EFL-2.0", "CC0-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EFL_2_0_CDDL_1_0(self):        
        assert osadl_matrix.get_compatibility("EFL-2.0", "CDDL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EFL_2_0_CDDL_1_1(self):        
        assert osadl_matrix.get_compatibility("EFL-2.0", "CDDL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EFL_2_0_CPL_1_0(self):        
        assert osadl_matrix.get_compatibility("EFL-2.0", "CPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EFL_2_0_EFL_2_0(self):        
        assert osadl_matrix.get_compatibility("EFL-2.0", "EFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EFL_2_0_EPL_1_0(self):        
        assert osadl_matrix.get_compatibility("EFL-2.0", "EPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EFL_2_0_EPL_2_0(self):        
        assert osadl_matrix.get_compatibility("EFL-2.0", "EPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EFL_2_0_EUPL_1_1(self):        
        assert osadl_matrix.get_compatibility("EFL-2.0", "EUPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EFL_2_0_EUPL_1_2(self):        
        assert osadl_matrix.get_compatibility("EFL-2.0", "EUPL-1.2") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EFL_2_0_FSFAP(self):        
        assert osadl_matrix.get_compatibility("EFL-2.0", "FSFAP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EFL_2_0_FSFULLR(self):        
        assert osadl_matrix.get_compatibility("EFL-2.0", "FSFULLR") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EFL_2_0_FTL(self):        
        assert osadl_matrix.get_compatibility("EFL-2.0", "FTL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EFL_2_0_GPL_1_0_only(self):        
        assert osadl_matrix.get_compatibility("EFL-2.0", "GPL-1.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EFL_2_0_GPL_1_0_or_later(self):        
        assert osadl_matrix.get_compatibility("EFL-2.0", "GPL-1.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EFL_2_0_GPL_2_0_only(self):        
        assert osadl_matrix.get_compatibility("EFL-2.0", "GPL-2.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EFL_2_0_GPL_2_0_only_WITH_Classpath_exception_2_0(self):        
        assert osadl_matrix.get_compatibility("EFL-2.0", "GPL-2.0-only WITH Classpath-exception-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EFL_2_0_GPL_2_0_or_later(self):        
        assert osadl_matrix.get_compatibility("EFL-2.0", "GPL-2.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EFL_2_0_GPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("EFL-2.0", "GPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EFL_2_0_GPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("EFL-2.0", "GPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EFL_2_0_HPND(self):        
        assert osadl_matrix.get_compatibility("EFL-2.0", "HPND") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EFL_2_0_IBM_pibs(self):        
        assert osadl_matrix.get_compatibility("EFL-2.0", "IBM-pibs") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EFL_2_0_ICU(self):        
        assert osadl_matrix.get_compatibility("EFL-2.0", "ICU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EFL_2_0_IJG(self):        
        assert osadl_matrix.get_compatibility("EFL-2.0", "IJG") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EFL_2_0_IPL_1_0(self):        
        assert osadl_matrix.get_compatibility("EFL-2.0", "IPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EFL_2_0_ISC(self):        
        assert osadl_matrix.get_compatibility("EFL-2.0", "ISC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EFL_2_0_Info_ZIP(self):        
        assert osadl_matrix.get_compatibility("EFL-2.0", "Info-ZIP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EFL_2_0_LGPL_2_1_only(self):        
        assert osadl_matrix.get_compatibility("EFL-2.0", "LGPL-2.1-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EFL_2_0_LGPL_2_1_or_later(self):        
        assert osadl_matrix.get_compatibility("EFL-2.0", "LGPL-2.1-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EFL_2_0_LGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("EFL-2.0", "LGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EFL_2_0_LGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("EFL-2.0", "LGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EFL_2_0_Libpng(self):        
        assert osadl_matrix.get_compatibility("EFL-2.0", "Libpng") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EFL_2_0_MIT(self):        
        assert osadl_matrix.get_compatibility("EFL-2.0", "MIT") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EFL_2_0_MIT_CMU(self):        
        assert osadl_matrix.get_compatibility("EFL-2.0", "MIT-CMU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EFL_2_0_MPL_1_1(self):        
        assert osadl_matrix.get_compatibility("EFL-2.0", "MPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EFL_2_0_MPL_2_0(self):        
        assert osadl_matrix.get_compatibility("EFL-2.0", "MPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EFL_2_0_MPL_2_0_no_copyleft_exception(self):        
        assert osadl_matrix.get_compatibility("EFL-2.0", "MPL-2.0-no-copyleft-exception") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EFL_2_0_MS_PL(self):        
        assert osadl_matrix.get_compatibility("EFL-2.0", "MS-PL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EFL_2_0_MS_RL(self):        
        assert osadl_matrix.get_compatibility("EFL-2.0", "MS-RL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EFL_2_0_MirOS(self):        
        assert osadl_matrix.get_compatibility("EFL-2.0", "MirOS") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EFL_2_0_NBPL_1_0(self):        
        assert osadl_matrix.get_compatibility("EFL-2.0", "NBPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EFL_2_0_NTP(self):        
        assert osadl_matrix.get_compatibility("EFL-2.0", "NTP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EFL_2_0_OSL_3_0(self):        
        assert osadl_matrix.get_compatibility("EFL-2.0", "OSL-3.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EFL_2_0_OpenSSL(self):        
        assert osadl_matrix.get_compatibility("EFL-2.0", "OpenSSL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EFL_2_0_PHP_3_01(self):        
        assert osadl_matrix.get_compatibility("EFL-2.0", "PHP-3.01") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EFL_2_0_PostgreSQL(self):        
        assert osadl_matrix.get_compatibility("EFL-2.0", "PostgreSQL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EFL_2_0_Python_2_0(self):        
        assert osadl_matrix.get_compatibility("EFL-2.0", "Python-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EFL_2_0_Qhull(self):        
        assert osadl_matrix.get_compatibility("EFL-2.0", "Qhull") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EFL_2_0_RSA_MD(self):        
        assert osadl_matrix.get_compatibility("EFL-2.0", "RSA-MD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EFL_2_0_Sleepycat(self):        
        assert osadl_matrix.get_compatibility("EFL-2.0", "Sleepycat") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EFL_2_0_SunPro(self):        
        assert osadl_matrix.get_compatibility("EFL-2.0", "SunPro") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EFL_2_0_UPL_1_0(self):        
        assert osadl_matrix.get_compatibility("EFL-2.0", "UPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EFL_2_0_Unicode_DFS_2015(self):        
        assert osadl_matrix.get_compatibility("EFL-2.0", "Unicode-DFS-2015") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EFL_2_0_Unicode_DFS_2016(self):        
        assert osadl_matrix.get_compatibility("EFL-2.0", "Unicode-DFS-2016") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EFL_2_0_Unlicense(self):        
        assert osadl_matrix.get_compatibility("EFL-2.0", "Unlicense") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EFL_2_0_W3C(self):        
        assert osadl_matrix.get_compatibility("EFL-2.0", "W3C") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EFL_2_0_W3C_19980720(self):        
        assert osadl_matrix.get_compatibility("EFL-2.0", "W3C-19980720") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EFL_2_0_W3C_20150513(self):        
        assert osadl_matrix.get_compatibility("EFL-2.0", "W3C-20150513") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EFL_2_0_WTFPL(self):        
        assert osadl_matrix.get_compatibility("EFL-2.0", "WTFPL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EFL_2_0_X11(self):        
        assert osadl_matrix.get_compatibility("EFL-2.0", "X11") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EFL_2_0_XFree86_1_1(self):        
        assert osadl_matrix.get_compatibility("EFL-2.0", "XFree86-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EFL_2_0_ZPL_2_0(self):        
        assert osadl_matrix.get_compatibility("EFL-2.0", "ZPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EFL_2_0_Zlib(self):        
        assert osadl_matrix.get_compatibility("EFL-2.0", "Zlib") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EFL_2_0_bzip2_1_0_5(self):        
        assert osadl_matrix.get_compatibility("EFL-2.0", "bzip2-1.0.5") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EFL_2_0_bzip2_1_0_6(self):        
        assert osadl_matrix.get_compatibility("EFL-2.0", "bzip2-1.0.6") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EFL_2_0_curl(self):        
        assert osadl_matrix.get_compatibility("EFL-2.0", "curl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EFL_2_0_libtiff(self):        
        assert osadl_matrix.get_compatibility("EFL-2.0", "libtiff") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EFL_2_0_zlib_acknowledgement(self):        
        assert osadl_matrix.get_compatibility("EFL-2.0", "zlib-acknowledgement") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EPL_1_0_0BSD(self):        
        assert osadl_matrix.get_compatibility("EPL-1.0", "0BSD") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EPL_1_0_AFL_2_0(self):        
        assert osadl_matrix.get_compatibility("EPL-1.0", "AFL-2.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EPL_1_0_AFL_2_1(self):        
        assert osadl_matrix.get_compatibility("EPL-1.0", "AFL-2.1") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EPL_1_0_AFL_3_0(self):        
        assert osadl_matrix.get_compatibility("EPL-1.0", "AFL-3.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EPL_1_0_AGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("EPL-1.0", "AGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EPL_1_0_AGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("EPL-1.0", "AGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EPL_1_0_Apache_1_0(self):        
        assert osadl_matrix.get_compatibility("EPL-1.0", "Apache-1.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EPL_1_0_Apache_1_1(self):        
        assert osadl_matrix.get_compatibility("EPL-1.0", "Apache-1.1") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EPL_1_0_Apache_2_0(self):        
        assert osadl_matrix.get_compatibility("EPL-1.0", "Apache-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EPL_1_0_Artistic_1_0(self):        
        assert osadl_matrix.get_compatibility("EPL-1.0", "Artistic-1.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EPL_1_0_Artistic_1_0_Perl(self):        
        assert osadl_matrix.get_compatibility("EPL-1.0", "Artistic-1.0-Perl") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EPL_1_0_Artistic_2_0(self):        
        assert osadl_matrix.get_compatibility("EPL-1.0", "Artistic-2.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EPL_1_0_BSD_1_Clause(self):        
        assert osadl_matrix.get_compatibility("EPL-1.0", "BSD-1-Clause") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EPL_1_0_BSD_2_Clause(self):        
        assert osadl_matrix.get_compatibility("EPL-1.0", "BSD-2-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EPL_1_0_BSD_2_Clause_Patent(self):        
        assert osadl_matrix.get_compatibility("EPL-1.0", "BSD-2-Clause-Patent") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EPL_1_0_BSD_3_Clause(self):        
        assert osadl_matrix.get_compatibility("EPL-1.0", "BSD-3-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EPL_1_0_BSD_4_Clause(self):        
        assert osadl_matrix.get_compatibility("EPL-1.0", "BSD-4-Clause") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EPL_1_0_BSD_4_Clause_UC(self):        
        assert osadl_matrix.get_compatibility("EPL-1.0", "BSD-4-Clause-UC") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EPL_1_0_BSD_Source_Code(self):        
        assert osadl_matrix.get_compatibility("EPL-1.0", "BSD-Source-Code") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EPL_1_0_BSL_1_0(self):        
        assert osadl_matrix.get_compatibility("EPL-1.0", "BSL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EPL_1_0_CC0_1_0(self):        
        assert osadl_matrix.get_compatibility("EPL-1.0", "CC0-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EPL_1_0_CDDL_1_0(self):        
        assert osadl_matrix.get_compatibility("EPL-1.0", "CDDL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EPL_1_0_CDDL_1_1(self):        
        assert osadl_matrix.get_compatibility("EPL-1.0", "CDDL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EPL_1_0_CPL_1_0(self):        
        assert osadl_matrix.get_compatibility("EPL-1.0", "CPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EPL_1_0_EFL_2_0(self):        
        assert osadl_matrix.get_compatibility("EPL-1.0", "EFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EPL_1_0_EPL_1_0(self):        
        assert osadl_matrix.get_compatibility("EPL-1.0", "EPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EPL_1_0_EPL_2_0(self):        
        assert osadl_matrix.get_compatibility("EPL-1.0", "EPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EPL_1_0_EUPL_1_1(self):        
        assert osadl_matrix.get_compatibility("EPL-1.0", "EUPL-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EPL_1_0_EUPL_1_2(self):        
        assert osadl_matrix.get_compatibility("EPL-1.0", "EUPL-1.2") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EPL_1_0_FSFAP(self):        
        assert osadl_matrix.get_compatibility("EPL-1.0", "FSFAP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EPL_1_0_FSFULLR(self):        
        assert osadl_matrix.get_compatibility("EPL-1.0", "FSFULLR") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EPL_1_0_FTL(self):        
        assert osadl_matrix.get_compatibility("EPL-1.0", "FTL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EPL_1_0_GPL_1_0_only(self):        
        assert osadl_matrix.get_compatibility("EPL-1.0", "GPL-1.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EPL_1_0_GPL_1_0_or_later(self):        
        assert osadl_matrix.get_compatibility("EPL-1.0", "GPL-1.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EPL_1_0_GPL_2_0_only(self):        
        assert osadl_matrix.get_compatibility("EPL-1.0", "GPL-2.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EPL_1_0_GPL_2_0_only_WITH_Classpath_exception_2_0(self):        
        assert osadl_matrix.get_compatibility("EPL-1.0", "GPL-2.0-only WITH Classpath-exception-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EPL_1_0_GPL_2_0_or_later(self):        
        assert osadl_matrix.get_compatibility("EPL-1.0", "GPL-2.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EPL_1_0_GPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("EPL-1.0", "GPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EPL_1_0_GPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("EPL-1.0", "GPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EPL_1_0_HPND(self):        
        assert osadl_matrix.get_compatibility("EPL-1.0", "HPND") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EPL_1_0_IBM_pibs(self):        
        assert osadl_matrix.get_compatibility("EPL-1.0", "IBM-pibs") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EPL_1_0_ICU(self):        
        assert osadl_matrix.get_compatibility("EPL-1.0", "ICU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EPL_1_0_IJG(self):        
        assert osadl_matrix.get_compatibility("EPL-1.0", "IJG") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EPL_1_0_IPL_1_0(self):        
        assert osadl_matrix.get_compatibility("EPL-1.0", "IPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EPL_1_0_ISC(self):        
        assert osadl_matrix.get_compatibility("EPL-1.0", "ISC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EPL_1_0_Info_ZIP(self):        
        assert osadl_matrix.get_compatibility("EPL-1.0", "Info-ZIP") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EPL_1_0_LGPL_2_1_only(self):        
        assert osadl_matrix.get_compatibility("EPL-1.0", "LGPL-2.1-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EPL_1_0_LGPL_2_1_or_later(self):        
        assert osadl_matrix.get_compatibility("EPL-1.0", "LGPL-2.1-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EPL_1_0_LGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("EPL-1.0", "LGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EPL_1_0_LGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("EPL-1.0", "LGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EPL_1_0_Libpng(self):        
        assert osadl_matrix.get_compatibility("EPL-1.0", "Libpng") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EPL_1_0_MIT(self):        
        assert osadl_matrix.get_compatibility("EPL-1.0", "MIT") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EPL_1_0_MIT_CMU(self):        
        assert osadl_matrix.get_compatibility("EPL-1.0", "MIT-CMU") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EPL_1_0_MPL_1_1(self):        
        assert osadl_matrix.get_compatibility("EPL-1.0", "MPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EPL_1_0_MPL_2_0(self):        
        assert osadl_matrix.get_compatibility("EPL-1.0", "MPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EPL_1_0_MPL_2_0_no_copyleft_exception(self):        
        assert osadl_matrix.get_compatibility("EPL-1.0", "MPL-2.0-no-copyleft-exception") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EPL_1_0_MS_PL(self):        
        assert osadl_matrix.get_compatibility("EPL-1.0", "MS-PL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EPL_1_0_MS_RL(self):        
        assert osadl_matrix.get_compatibility("EPL-1.0", "MS-RL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EPL_1_0_MirOS(self):        
        assert osadl_matrix.get_compatibility("EPL-1.0", "MirOS") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EPL_1_0_NBPL_1_0(self):        
        assert osadl_matrix.get_compatibility("EPL-1.0", "NBPL-1.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EPL_1_0_NTP(self):        
        assert osadl_matrix.get_compatibility("EPL-1.0", "NTP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EPL_1_0_OSL_3_0(self):        
        assert osadl_matrix.get_compatibility("EPL-1.0", "OSL-3.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EPL_1_0_OpenSSL(self):        
        assert osadl_matrix.get_compatibility("EPL-1.0", "OpenSSL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EPL_1_0_PHP_3_01(self):        
        assert osadl_matrix.get_compatibility("EPL-1.0", "PHP-3.01") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EPL_1_0_PostgreSQL(self):        
        assert osadl_matrix.get_compatibility("EPL-1.0", "PostgreSQL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EPL_1_0_Python_2_0(self):        
        assert osadl_matrix.get_compatibility("EPL-1.0", "Python-2.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EPL_1_0_Qhull(self):        
        assert osadl_matrix.get_compatibility("EPL-1.0", "Qhull") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EPL_1_0_RSA_MD(self):        
        assert osadl_matrix.get_compatibility("EPL-1.0", "RSA-MD") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EPL_1_0_Sleepycat(self):        
        assert osadl_matrix.get_compatibility("EPL-1.0", "Sleepycat") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EPL_1_0_SunPro(self):        
        assert osadl_matrix.get_compatibility("EPL-1.0", "SunPro") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EPL_1_0_UPL_1_0(self):        
        assert osadl_matrix.get_compatibility("EPL-1.0", "UPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EPL_1_0_Unicode_DFS_2015(self):        
        assert osadl_matrix.get_compatibility("EPL-1.0", "Unicode-DFS-2015") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EPL_1_0_Unicode_DFS_2016(self):        
        assert osadl_matrix.get_compatibility("EPL-1.0", "Unicode-DFS-2016") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EPL_1_0_Unlicense(self):        
        assert osadl_matrix.get_compatibility("EPL-1.0", "Unlicense") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EPL_1_0_W3C(self):        
        assert osadl_matrix.get_compatibility("EPL-1.0", "W3C") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EPL_1_0_W3C_19980720(self):        
        assert osadl_matrix.get_compatibility("EPL-1.0", "W3C-19980720") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EPL_1_0_W3C_20150513(self):        
        assert osadl_matrix.get_compatibility("EPL-1.0", "W3C-20150513") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EPL_1_0_WTFPL(self):        
        assert osadl_matrix.get_compatibility("EPL-1.0", "WTFPL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EPL_1_0_X11(self):        
        assert osadl_matrix.get_compatibility("EPL-1.0", "X11") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EPL_1_0_XFree86_1_1(self):        
        assert osadl_matrix.get_compatibility("EPL-1.0", "XFree86-1.1") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EPL_1_0_ZPL_2_0(self):        
        assert osadl_matrix.get_compatibility("EPL-1.0", "ZPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EPL_1_0_Zlib(self):        
        assert osadl_matrix.get_compatibility("EPL-1.0", "Zlib") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EPL_1_0_bzip2_1_0_5(self):        
        assert osadl_matrix.get_compatibility("EPL-1.0", "bzip2-1.0.5") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EPL_1_0_bzip2_1_0_6(self):        
        assert osadl_matrix.get_compatibility("EPL-1.0", "bzip2-1.0.6") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EPL_1_0_curl(self):        
        assert osadl_matrix.get_compatibility("EPL-1.0", "curl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EPL_1_0_libtiff(self):        
        assert osadl_matrix.get_compatibility("EPL-1.0", "libtiff") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EPL_1_0_zlib_acknowledgement(self):        
        assert osadl_matrix.get_compatibility("EPL-1.0", "zlib-acknowledgement") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EPL_2_0_0BSD(self):        
        assert osadl_matrix.get_compatibility("EPL-2.0", "0BSD") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EPL_2_0_AFL_2_0(self):        
        assert osadl_matrix.get_compatibility("EPL-2.0", "AFL-2.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EPL_2_0_AFL_2_1(self):        
        assert osadl_matrix.get_compatibility("EPL-2.0", "AFL-2.1") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EPL_2_0_AFL_3_0(self):        
        assert osadl_matrix.get_compatibility("EPL-2.0", "AFL-3.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EPL_2_0_AGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("EPL-2.0", "AGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EPL_2_0_AGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("EPL-2.0", "AGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EPL_2_0_Apache_1_0(self):        
        assert osadl_matrix.get_compatibility("EPL-2.0", "Apache-1.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EPL_2_0_Apache_1_1(self):        
        assert osadl_matrix.get_compatibility("EPL-2.0", "Apache-1.1") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EPL_2_0_Apache_2_0(self):        
        assert osadl_matrix.get_compatibility("EPL-2.0", "Apache-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EPL_2_0_Artistic_1_0(self):        
        assert osadl_matrix.get_compatibility("EPL-2.0", "Artistic-1.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EPL_2_0_Artistic_1_0_Perl(self):        
        assert osadl_matrix.get_compatibility("EPL-2.0", "Artistic-1.0-Perl") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EPL_2_0_Artistic_2_0(self):        
        assert osadl_matrix.get_compatibility("EPL-2.0", "Artistic-2.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EPL_2_0_BSD_1_Clause(self):        
        assert osadl_matrix.get_compatibility("EPL-2.0", "BSD-1-Clause") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EPL_2_0_BSD_2_Clause(self):        
        assert osadl_matrix.get_compatibility("EPL-2.0", "BSD-2-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EPL_2_0_BSD_2_Clause_Patent(self):        
        assert osadl_matrix.get_compatibility("EPL-2.0", "BSD-2-Clause-Patent") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EPL_2_0_BSD_3_Clause(self):        
        assert osadl_matrix.get_compatibility("EPL-2.0", "BSD-3-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EPL_2_0_BSD_4_Clause(self):        
        assert osadl_matrix.get_compatibility("EPL-2.0", "BSD-4-Clause") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EPL_2_0_BSD_4_Clause_UC(self):        
        assert osadl_matrix.get_compatibility("EPL-2.0", "BSD-4-Clause-UC") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EPL_2_0_BSD_Source_Code(self):        
        assert osadl_matrix.get_compatibility("EPL-2.0", "BSD-Source-Code") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EPL_2_0_BSL_1_0(self):        
        assert osadl_matrix.get_compatibility("EPL-2.0", "BSL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EPL_2_0_CC0_1_0(self):        
        assert osadl_matrix.get_compatibility("EPL-2.0", "CC0-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EPL_2_0_CDDL_1_0(self):        
        assert osadl_matrix.get_compatibility("EPL-2.0", "CDDL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EPL_2_0_CDDL_1_1(self):        
        assert osadl_matrix.get_compatibility("EPL-2.0", "CDDL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EPL_2_0_CPL_1_0(self):        
        assert osadl_matrix.get_compatibility("EPL-2.0", "CPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EPL_2_0_EFL_2_0(self):        
        assert osadl_matrix.get_compatibility("EPL-2.0", "EFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EPL_2_0_EPL_1_0(self):        
        assert osadl_matrix.get_compatibility("EPL-2.0", "EPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EPL_2_0_EPL_2_0(self):        
        assert osadl_matrix.get_compatibility("EPL-2.0", "EPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EPL_2_0_EUPL_1_1(self):        
        assert osadl_matrix.get_compatibility("EPL-2.0", "EUPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EPL_2_0_EUPL_1_2(self):        
        assert osadl_matrix.get_compatibility("EPL-2.0", "EUPL-1.2") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EPL_2_0_FSFAP(self):        
        assert osadl_matrix.get_compatibility("EPL-2.0", "FSFAP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EPL_2_0_FSFULLR(self):        
        assert osadl_matrix.get_compatibility("EPL-2.0", "FSFULLR") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EPL_2_0_FTL(self):        
        assert osadl_matrix.get_compatibility("EPL-2.0", "FTL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EPL_2_0_GPL_1_0_only(self):        
        assert osadl_matrix.get_compatibility("EPL-2.0", "GPL-1.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EPL_2_0_GPL_1_0_or_later(self):        
        assert osadl_matrix.get_compatibility("EPL-2.0", "GPL-1.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EPL_2_0_GPL_2_0_only(self):        
        assert osadl_matrix.get_compatibility("EPL-2.0", "GPL-2.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EPL_2_0_GPL_2_0_only_WITH_Classpath_exception_2_0(self):        
        assert osadl_matrix.get_compatibility("EPL-2.0", "GPL-2.0-only WITH Classpath-exception-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EPL_2_0_GPL_2_0_or_later(self):        
        assert osadl_matrix.get_compatibility("EPL-2.0", "GPL-2.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EPL_2_0_GPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("EPL-2.0", "GPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EPL_2_0_GPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("EPL-2.0", "GPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EPL_2_0_HPND(self):        
        assert osadl_matrix.get_compatibility("EPL-2.0", "HPND") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EPL_2_0_IBM_pibs(self):        
        assert osadl_matrix.get_compatibility("EPL-2.0", "IBM-pibs") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EPL_2_0_ICU(self):        
        assert osadl_matrix.get_compatibility("EPL-2.0", "ICU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EPL_2_0_IJG(self):        
        assert osadl_matrix.get_compatibility("EPL-2.0", "IJG") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EPL_2_0_IPL_1_0(self):        
        assert osadl_matrix.get_compatibility("EPL-2.0", "IPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EPL_2_0_ISC(self):        
        assert osadl_matrix.get_compatibility("EPL-2.0", "ISC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EPL_2_0_Info_ZIP(self):        
        assert osadl_matrix.get_compatibility("EPL-2.0", "Info-ZIP") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EPL_2_0_LGPL_2_1_only(self):        
        assert osadl_matrix.get_compatibility("EPL-2.0", "LGPL-2.1-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EPL_2_0_LGPL_2_1_or_later(self):        
        assert osadl_matrix.get_compatibility("EPL-2.0", "LGPL-2.1-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EPL_2_0_LGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("EPL-2.0", "LGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EPL_2_0_LGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("EPL-2.0", "LGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EPL_2_0_Libpng(self):        
        assert osadl_matrix.get_compatibility("EPL-2.0", "Libpng") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EPL_2_0_MIT(self):        
        assert osadl_matrix.get_compatibility("EPL-2.0", "MIT") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EPL_2_0_MIT_CMU(self):        
        assert osadl_matrix.get_compatibility("EPL-2.0", "MIT-CMU") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EPL_2_0_MPL_1_1(self):        
        assert osadl_matrix.get_compatibility("EPL-2.0", "MPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EPL_2_0_MPL_2_0(self):        
        assert osadl_matrix.get_compatibility("EPL-2.0", "MPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EPL_2_0_MPL_2_0_no_copyleft_exception(self):        
        assert osadl_matrix.get_compatibility("EPL-2.0", "MPL-2.0-no-copyleft-exception") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EPL_2_0_MS_PL(self):        
        assert osadl_matrix.get_compatibility("EPL-2.0", "MS-PL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EPL_2_0_MS_RL(self):        
        assert osadl_matrix.get_compatibility("EPL-2.0", "MS-RL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EPL_2_0_MirOS(self):        
        assert osadl_matrix.get_compatibility("EPL-2.0", "MirOS") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EPL_2_0_NBPL_1_0(self):        
        assert osadl_matrix.get_compatibility("EPL-2.0", "NBPL-1.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EPL_2_0_NTP(self):        
        assert osadl_matrix.get_compatibility("EPL-2.0", "NTP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EPL_2_0_OSL_3_0(self):        
        assert osadl_matrix.get_compatibility("EPL-2.0", "OSL-3.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EPL_2_0_OpenSSL(self):        
        assert osadl_matrix.get_compatibility("EPL-2.0", "OpenSSL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EPL_2_0_PHP_3_01(self):        
        assert osadl_matrix.get_compatibility("EPL-2.0", "PHP-3.01") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EPL_2_0_PostgreSQL(self):        
        assert osadl_matrix.get_compatibility("EPL-2.0", "PostgreSQL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EPL_2_0_Python_2_0(self):        
        assert osadl_matrix.get_compatibility("EPL-2.0", "Python-2.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EPL_2_0_Qhull(self):        
        assert osadl_matrix.get_compatibility("EPL-2.0", "Qhull") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EPL_2_0_RSA_MD(self):        
        assert osadl_matrix.get_compatibility("EPL-2.0", "RSA-MD") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EPL_2_0_Sleepycat(self):        
        assert osadl_matrix.get_compatibility("EPL-2.0", "Sleepycat") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EPL_2_0_SunPro(self):        
        assert osadl_matrix.get_compatibility("EPL-2.0", "SunPro") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EPL_2_0_UPL_1_0(self):        
        assert osadl_matrix.get_compatibility("EPL-2.0", "UPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EPL_2_0_Unicode_DFS_2015(self):        
        assert osadl_matrix.get_compatibility("EPL-2.0", "Unicode-DFS-2015") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EPL_2_0_Unicode_DFS_2016(self):        
        assert osadl_matrix.get_compatibility("EPL-2.0", "Unicode-DFS-2016") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EPL_2_0_Unlicense(self):        
        assert osadl_matrix.get_compatibility("EPL-2.0", "Unlicense") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EPL_2_0_W3C(self):        
        assert osadl_matrix.get_compatibility("EPL-2.0", "W3C") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EPL_2_0_W3C_19980720(self):        
        assert osadl_matrix.get_compatibility("EPL-2.0", "W3C-19980720") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EPL_2_0_W3C_20150513(self):        
        assert osadl_matrix.get_compatibility("EPL-2.0", "W3C-20150513") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EPL_2_0_WTFPL(self):        
        assert osadl_matrix.get_compatibility("EPL-2.0", "WTFPL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EPL_2_0_X11(self):        
        assert osadl_matrix.get_compatibility("EPL-2.0", "X11") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EPL_2_0_XFree86_1_1(self):        
        assert osadl_matrix.get_compatibility("EPL-2.0", "XFree86-1.1") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EPL_2_0_ZPL_2_0(self):        
        assert osadl_matrix.get_compatibility("EPL-2.0", "ZPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EPL_2_0_Zlib(self):        
        assert osadl_matrix.get_compatibility("EPL-2.0", "Zlib") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EPL_2_0_bzip2_1_0_5(self):        
        assert osadl_matrix.get_compatibility("EPL-2.0", "bzip2-1.0.5") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EPL_2_0_bzip2_1_0_6(self):        
        assert osadl_matrix.get_compatibility("EPL-2.0", "bzip2-1.0.6") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EPL_2_0_curl(self):        
        assert osadl_matrix.get_compatibility("EPL-2.0", "curl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EPL_2_0_libtiff(self):        
        assert osadl_matrix.get_compatibility("EPL-2.0", "libtiff") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EPL_2_0_zlib_acknowledgement(self):        
        assert osadl_matrix.get_compatibility("EPL-2.0", "zlib-acknowledgement") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EUPL_1_1_0BSD(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.1", "0BSD") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EUPL_1_1_AFL_2_0(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.1", "AFL-2.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EUPL_1_1_AFL_2_1(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.1", "AFL-2.1") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EUPL_1_1_AFL_3_0(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.1", "AFL-3.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EUPL_1_1_AGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.1", "AGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EUPL_1_1_AGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.1", "AGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EUPL_1_1_Apache_1_0(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.1", "Apache-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EUPL_1_1_Apache_1_1(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.1", "Apache-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EUPL_1_1_Apache_2_0(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.1", "Apache-2.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EUPL_1_1_Artistic_1_0(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.1", "Artistic-1.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EUPL_1_1_Artistic_1_0_Perl(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.1", "Artistic-1.0-Perl") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EUPL_1_1_Artistic_2_0(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.1", "Artistic-2.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EUPL_1_1_BSD_1_Clause(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.1", "BSD-1-Clause") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EUPL_1_1_BSD_2_Clause(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.1", "BSD-2-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EUPL_1_1_BSD_2_Clause_Patent(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.1", "BSD-2-Clause-Patent") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EUPL_1_1_BSD_3_Clause(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.1", "BSD-3-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EUPL_1_1_BSD_4_Clause(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.1", "BSD-4-Clause") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EUPL_1_1_BSD_4_Clause_UC(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.1", "BSD-4-Clause-UC") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EUPL_1_1_BSD_Source_Code(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.1", "BSD-Source-Code") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EUPL_1_1_BSL_1_0(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.1", "BSL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EUPL_1_1_CC0_1_0(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.1", "CC0-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EUPL_1_1_CDDL_1_0(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.1", "CDDL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EUPL_1_1_CDDL_1_1(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.1", "CDDL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EUPL_1_1_CPL_1_0(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.1", "CPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EUPL_1_1_EFL_2_0(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.1", "EFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EUPL_1_1_EPL_1_0(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.1", "EPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EUPL_1_1_EPL_2_0(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.1", "EPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EUPL_1_1_EUPL_1_1(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.1", "EUPL-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EUPL_1_1_EUPL_1_2(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.1", "EUPL-1.2") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EUPL_1_1_FSFAP(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.1", "FSFAP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EUPL_1_1_FSFULLR(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.1", "FSFULLR") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EUPL_1_1_FTL(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.1", "FTL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EUPL_1_1_GPL_1_0_only(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.1", "GPL-1.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EUPL_1_1_GPL_1_0_or_later(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.1", "GPL-1.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EUPL_1_1_GPL_2_0_only(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.1", "GPL-2.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EUPL_1_1_GPL_2_0_only_WITH_Classpath_exception_2_0(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.1", "GPL-2.0-only WITH Classpath-exception-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EUPL_1_1_GPL_2_0_or_later(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.1", "GPL-2.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EUPL_1_1_GPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.1", "GPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EUPL_1_1_GPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.1", "GPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EUPL_1_1_HPND(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.1", "HPND") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EUPL_1_1_IBM_pibs(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.1", "IBM-pibs") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EUPL_1_1_ICU(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.1", "ICU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EUPL_1_1_IJG(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.1", "IJG") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EUPL_1_1_IPL_1_0(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.1", "IPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EUPL_1_1_ISC(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.1", "ISC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EUPL_1_1_Info_ZIP(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.1", "Info-ZIP") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EUPL_1_1_LGPL_2_1_only(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.1", "LGPL-2.1-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EUPL_1_1_LGPL_2_1_or_later(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.1", "LGPL-2.1-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EUPL_1_1_LGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.1", "LGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EUPL_1_1_LGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.1", "LGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EUPL_1_1_Libpng(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.1", "Libpng") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EUPL_1_1_MIT(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.1", "MIT") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EUPL_1_1_MIT_CMU(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.1", "MIT-CMU") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EUPL_1_1_MPL_1_1(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.1", "MPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EUPL_1_1_MPL_2_0(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.1", "MPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EUPL_1_1_MPL_2_0_no_copyleft_exception(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.1", "MPL-2.0-no-copyleft-exception") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EUPL_1_1_MS_PL(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.1", "MS-PL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EUPL_1_1_MS_RL(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.1", "MS-RL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EUPL_1_1_MirOS(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.1", "MirOS") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EUPL_1_1_NBPL_1_0(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.1", "NBPL-1.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EUPL_1_1_NTP(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.1", "NTP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EUPL_1_1_OSL_3_0(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.1", "OSL-3.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EUPL_1_1_OpenSSL(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.1", "OpenSSL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EUPL_1_1_PHP_3_01(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.1", "PHP-3.01") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EUPL_1_1_PostgreSQL(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.1", "PostgreSQL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EUPL_1_1_Python_2_0(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.1", "Python-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EUPL_1_1_Qhull(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.1", "Qhull") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EUPL_1_1_RSA_MD(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.1", "RSA-MD") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EUPL_1_1_Sleepycat(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.1", "Sleepycat") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EUPL_1_1_SunPro(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.1", "SunPro") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EUPL_1_1_UPL_1_0(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.1", "UPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EUPL_1_1_Unicode_DFS_2015(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.1", "Unicode-DFS-2015") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EUPL_1_1_Unicode_DFS_2016(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.1", "Unicode-DFS-2016") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EUPL_1_1_Unlicense(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.1", "Unlicense") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EUPL_1_1_W3C(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.1", "W3C") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EUPL_1_1_W3C_19980720(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.1", "W3C-19980720") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EUPL_1_1_W3C_20150513(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.1", "W3C-20150513") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EUPL_1_1_WTFPL(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.1", "WTFPL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EUPL_1_1_X11(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.1", "X11") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EUPL_1_1_XFree86_1_1(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.1", "XFree86-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EUPL_1_1_ZPL_2_0(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.1", "ZPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EUPL_1_1_Zlib(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.1", "Zlib") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EUPL_1_1_bzip2_1_0_5(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.1", "bzip2-1.0.5") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EUPL_1_1_bzip2_1_0_6(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.1", "bzip2-1.0.6") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EUPL_1_1_curl(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.1", "curl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EUPL_1_1_libtiff(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.1", "libtiff") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EUPL_1_1_zlib_acknowledgement(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.1", "zlib-acknowledgement") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EUPL_1_2_0BSD(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.2", "0BSD") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EUPL_1_2_AFL_2_0(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.2", "AFL-2.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EUPL_1_2_AFL_2_1(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.2", "AFL-2.1") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EUPL_1_2_AFL_3_0(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.2", "AFL-3.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EUPL_1_2_AGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.2", "AGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EUPL_1_2_AGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.2", "AGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EUPL_1_2_Apache_1_0(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.2", "Apache-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EUPL_1_2_Apache_1_1(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.2", "Apache-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EUPL_1_2_Apache_2_0(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.2", "Apache-2.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EUPL_1_2_Artistic_1_0(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.2", "Artistic-1.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EUPL_1_2_Artistic_1_0_Perl(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.2", "Artistic-1.0-Perl") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EUPL_1_2_Artistic_2_0(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.2", "Artistic-2.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EUPL_1_2_BSD_1_Clause(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.2", "BSD-1-Clause") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EUPL_1_2_BSD_2_Clause(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.2", "BSD-2-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EUPL_1_2_BSD_2_Clause_Patent(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.2", "BSD-2-Clause-Patent") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EUPL_1_2_BSD_3_Clause(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.2", "BSD-3-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EUPL_1_2_BSD_4_Clause(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.2", "BSD-4-Clause") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EUPL_1_2_BSD_4_Clause_UC(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.2", "BSD-4-Clause-UC") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EUPL_1_2_BSD_Source_Code(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.2", "BSD-Source-Code") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EUPL_1_2_BSL_1_0(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.2", "BSL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EUPL_1_2_CC0_1_0(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.2", "CC0-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EUPL_1_2_CDDL_1_0(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.2", "CDDL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EUPL_1_2_CDDL_1_1(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.2", "CDDL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EUPL_1_2_CPL_1_0(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.2", "CPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EUPL_1_2_EFL_2_0(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.2", "EFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EUPL_1_2_EPL_1_0(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.2", "EPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EUPL_1_2_EPL_2_0(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.2", "EPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EUPL_1_2_EUPL_1_1(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.2", "EUPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EUPL_1_2_EUPL_1_2(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.2", "EUPL-1.2") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EUPL_1_2_FSFAP(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.2", "FSFAP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EUPL_1_2_FSFULLR(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.2", "FSFULLR") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EUPL_1_2_FTL(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.2", "FTL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EUPL_1_2_GPL_1_0_only(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.2", "GPL-1.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EUPL_1_2_GPL_1_0_or_later(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.2", "GPL-1.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EUPL_1_2_GPL_2_0_only(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.2", "GPL-2.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EUPL_1_2_GPL_2_0_only_WITH_Classpath_exception_2_0(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.2", "GPL-2.0-only WITH Classpath-exception-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EUPL_1_2_GPL_2_0_or_later(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.2", "GPL-2.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EUPL_1_2_GPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.2", "GPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EUPL_1_2_GPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.2", "GPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EUPL_1_2_HPND(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.2", "HPND") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EUPL_1_2_IBM_pibs(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.2", "IBM-pibs") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EUPL_1_2_ICU(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.2", "ICU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EUPL_1_2_IJG(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.2", "IJG") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EUPL_1_2_IPL_1_0(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.2", "IPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EUPL_1_2_ISC(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.2", "ISC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EUPL_1_2_Info_ZIP(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.2", "Info-ZIP") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EUPL_1_2_LGPL_2_1_only(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.2", "LGPL-2.1-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EUPL_1_2_LGPL_2_1_or_later(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.2", "LGPL-2.1-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EUPL_1_2_LGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.2", "LGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EUPL_1_2_LGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.2", "LGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EUPL_1_2_Libpng(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.2", "Libpng") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EUPL_1_2_MIT(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.2", "MIT") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EUPL_1_2_MIT_CMU(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.2", "MIT-CMU") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EUPL_1_2_MPL_1_1(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.2", "MPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EUPL_1_2_MPL_2_0(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.2", "MPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EUPL_1_2_MPL_2_0_no_copyleft_exception(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.2", "MPL-2.0-no-copyleft-exception") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EUPL_1_2_MS_PL(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.2", "MS-PL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EUPL_1_2_MS_RL(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.2", "MS-RL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EUPL_1_2_MirOS(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.2", "MirOS") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EUPL_1_2_NBPL_1_0(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.2", "NBPL-1.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EUPL_1_2_NTP(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.2", "NTP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EUPL_1_2_OSL_3_0(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.2", "OSL-3.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EUPL_1_2_OpenSSL(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.2", "OpenSSL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EUPL_1_2_PHP_3_01(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.2", "PHP-3.01") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EUPL_1_2_PostgreSQL(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.2", "PostgreSQL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EUPL_1_2_Python_2_0(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.2", "Python-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EUPL_1_2_Qhull(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.2", "Qhull") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EUPL_1_2_RSA_MD(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.2", "RSA-MD") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EUPL_1_2_Sleepycat(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.2", "Sleepycat") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EUPL_1_2_SunPro(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.2", "SunPro") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EUPL_1_2_UPL_1_0(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.2", "UPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EUPL_1_2_Unicode_DFS_2015(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.2", "Unicode-DFS-2015") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EUPL_1_2_Unicode_DFS_2016(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.2", "Unicode-DFS-2016") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EUPL_1_2_Unlicense(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.2", "Unlicense") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EUPL_1_2_W3C(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.2", "W3C") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EUPL_1_2_W3C_19980720(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.2", "W3C-19980720") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EUPL_1_2_W3C_20150513(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.2", "W3C-20150513") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EUPL_1_2_WTFPL(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.2", "WTFPL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EUPL_1_2_X11(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.2", "X11") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EUPL_1_2_XFree86_1_1(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.2", "XFree86-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_EUPL_1_2_ZPL_2_0(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.2", "ZPL-2.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EUPL_1_2_Zlib(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.2", "Zlib") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EUPL_1_2_bzip2_1_0_5(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.2", "bzip2-1.0.5") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EUPL_1_2_bzip2_1_0_6(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.2", "bzip2-1.0.6") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EUPL_1_2_curl(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.2", "curl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_EUPL_1_2_libtiff(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.2", "libtiff") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_EUPL_1_2_zlib_acknowledgement(self):        
        assert osadl_matrix.get_compatibility("EUPL-1.2", "zlib-acknowledgement") == osadl_matrix.OSADLCompatibility.NO
    

    def test_FSFAP_0BSD(self):        
        assert osadl_matrix.get_compatibility("FSFAP", "0BSD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFAP_AFL_2_0(self):        
        assert osadl_matrix.get_compatibility("FSFAP", "AFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFAP_AFL_2_1(self):        
        assert osadl_matrix.get_compatibility("FSFAP", "AFL-2.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFAP_AFL_3_0(self):        
        assert osadl_matrix.get_compatibility("FSFAP", "AFL-3.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFAP_AGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("FSFAP", "AGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_FSFAP_AGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("FSFAP", "AGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_FSFAP_Apache_1_0(self):        
        assert osadl_matrix.get_compatibility("FSFAP", "Apache-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFAP_Apache_1_1(self):        
        assert osadl_matrix.get_compatibility("FSFAP", "Apache-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFAP_Apache_2_0(self):        
        assert osadl_matrix.get_compatibility("FSFAP", "Apache-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFAP_Artistic_1_0(self):        
        assert osadl_matrix.get_compatibility("FSFAP", "Artistic-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFAP_Artistic_1_0_Perl(self):        
        assert osadl_matrix.get_compatibility("FSFAP", "Artistic-1.0-Perl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFAP_Artistic_2_0(self):        
        assert osadl_matrix.get_compatibility("FSFAP", "Artistic-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFAP_BSD_1_Clause(self):        
        assert osadl_matrix.get_compatibility("FSFAP", "BSD-1-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFAP_BSD_2_Clause(self):        
        assert osadl_matrix.get_compatibility("FSFAP", "BSD-2-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFAP_BSD_2_Clause_Patent(self):        
        assert osadl_matrix.get_compatibility("FSFAP", "BSD-2-Clause-Patent") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFAP_BSD_3_Clause(self):        
        assert osadl_matrix.get_compatibility("FSFAP", "BSD-3-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFAP_BSD_4_Clause(self):        
        assert osadl_matrix.get_compatibility("FSFAP", "BSD-4-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFAP_BSD_4_Clause_UC(self):        
        assert osadl_matrix.get_compatibility("FSFAP", "BSD-4-Clause-UC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFAP_BSD_Source_Code(self):        
        assert osadl_matrix.get_compatibility("FSFAP", "BSD-Source-Code") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFAP_BSL_1_0(self):        
        assert osadl_matrix.get_compatibility("FSFAP", "BSL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFAP_CC0_1_0(self):        
        assert osadl_matrix.get_compatibility("FSFAP", "CC0-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFAP_CDDL_1_0(self):        
        assert osadl_matrix.get_compatibility("FSFAP", "CDDL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_FSFAP_CDDL_1_1(self):        
        assert osadl_matrix.get_compatibility("FSFAP", "CDDL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_FSFAP_CPL_1_0(self):        
        assert osadl_matrix.get_compatibility("FSFAP", "CPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_FSFAP_EFL_2_0(self):        
        assert osadl_matrix.get_compatibility("FSFAP", "EFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFAP_EPL_1_0(self):        
        assert osadl_matrix.get_compatibility("FSFAP", "EPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_FSFAP_EPL_2_0(self):        
        assert osadl_matrix.get_compatibility("FSFAP", "EPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_FSFAP_EUPL_1_1(self):        
        assert osadl_matrix.get_compatibility("FSFAP", "EUPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_FSFAP_EUPL_1_2(self):        
        assert osadl_matrix.get_compatibility("FSFAP", "EUPL-1.2") == osadl_matrix.OSADLCompatibility.NO
    

    def test_FSFAP_FSFAP(self):        
        assert osadl_matrix.get_compatibility("FSFAP", "FSFAP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFAP_FSFULLR(self):        
        assert osadl_matrix.get_compatibility("FSFAP", "FSFULLR") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFAP_FTL(self):        
        assert osadl_matrix.get_compatibility("FSFAP", "FTL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFAP_GPL_1_0_only(self):        
        assert osadl_matrix.get_compatibility("FSFAP", "GPL-1.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_FSFAP_GPL_1_0_or_later(self):        
        assert osadl_matrix.get_compatibility("FSFAP", "GPL-1.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_FSFAP_GPL_2_0_only(self):        
        assert osadl_matrix.get_compatibility("FSFAP", "GPL-2.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_FSFAP_GPL_2_0_only_WITH_Classpath_exception_2_0(self):        
        assert osadl_matrix.get_compatibility("FSFAP", "GPL-2.0-only WITH Classpath-exception-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_FSFAP_GPL_2_0_or_later(self):        
        assert osadl_matrix.get_compatibility("FSFAP", "GPL-2.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_FSFAP_GPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("FSFAP", "GPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_FSFAP_GPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("FSFAP", "GPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_FSFAP_HPND(self):        
        assert osadl_matrix.get_compatibility("FSFAP", "HPND") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFAP_IBM_pibs(self):        
        assert osadl_matrix.get_compatibility("FSFAP", "IBM-pibs") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFAP_ICU(self):        
        assert osadl_matrix.get_compatibility("FSFAP", "ICU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFAP_IJG(self):        
        assert osadl_matrix.get_compatibility("FSFAP", "IJG") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFAP_IPL_1_0(self):        
        assert osadl_matrix.get_compatibility("FSFAP", "IPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_FSFAP_ISC(self):        
        assert osadl_matrix.get_compatibility("FSFAP", "ISC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFAP_Info_ZIP(self):        
        assert osadl_matrix.get_compatibility("FSFAP", "Info-ZIP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFAP_LGPL_2_1_only(self):        
        assert osadl_matrix.get_compatibility("FSFAP", "LGPL-2.1-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_FSFAP_LGPL_2_1_or_later(self):        
        assert osadl_matrix.get_compatibility("FSFAP", "LGPL-2.1-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_FSFAP_LGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("FSFAP", "LGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_FSFAP_LGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("FSFAP", "LGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_FSFAP_Libpng(self):        
        assert osadl_matrix.get_compatibility("FSFAP", "Libpng") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFAP_MIT(self):        
        assert osadl_matrix.get_compatibility("FSFAP", "MIT") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFAP_MIT_CMU(self):        
        assert osadl_matrix.get_compatibility("FSFAP", "MIT-CMU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFAP_MPL_1_1(self):        
        assert osadl_matrix.get_compatibility("FSFAP", "MPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_FSFAP_MPL_2_0(self):        
        assert osadl_matrix.get_compatibility("FSFAP", "MPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_FSFAP_MPL_2_0_no_copyleft_exception(self):        
        assert osadl_matrix.get_compatibility("FSFAP", "MPL-2.0-no-copyleft-exception") == osadl_matrix.OSADLCompatibility.NO
    

    def test_FSFAP_MS_PL(self):        
        assert osadl_matrix.get_compatibility("FSFAP", "MS-PL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_FSFAP_MS_RL(self):        
        assert osadl_matrix.get_compatibility("FSFAP", "MS-RL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_FSFAP_MirOS(self):        
        assert osadl_matrix.get_compatibility("FSFAP", "MirOS") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFAP_NBPL_1_0(self):        
        assert osadl_matrix.get_compatibility("FSFAP", "NBPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFAP_NTP(self):        
        assert osadl_matrix.get_compatibility("FSFAP", "NTP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFAP_OSL_3_0(self):        
        assert osadl_matrix.get_compatibility("FSFAP", "OSL-3.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_FSFAP_OpenSSL(self):        
        assert osadl_matrix.get_compatibility("FSFAP", "OpenSSL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_FSFAP_PHP_3_01(self):        
        assert osadl_matrix.get_compatibility("FSFAP", "PHP-3.01") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFAP_PostgreSQL(self):        
        assert osadl_matrix.get_compatibility("FSFAP", "PostgreSQL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFAP_Python_2_0(self):        
        assert osadl_matrix.get_compatibility("FSFAP", "Python-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFAP_Qhull(self):        
        assert osadl_matrix.get_compatibility("FSFAP", "Qhull") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFAP_RSA_MD(self):        
        assert osadl_matrix.get_compatibility("FSFAP", "RSA-MD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFAP_Sleepycat(self):        
        assert osadl_matrix.get_compatibility("FSFAP", "Sleepycat") == osadl_matrix.OSADLCompatibility.NO
    

    def test_FSFAP_SunPro(self):        
        assert osadl_matrix.get_compatibility("FSFAP", "SunPro") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFAP_UPL_1_0(self):        
        assert osadl_matrix.get_compatibility("FSFAP", "UPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFAP_Unicode_DFS_2015(self):        
        assert osadl_matrix.get_compatibility("FSFAP", "Unicode-DFS-2015") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFAP_Unicode_DFS_2016(self):        
        assert osadl_matrix.get_compatibility("FSFAP", "Unicode-DFS-2016") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFAP_Unlicense(self):        
        assert osadl_matrix.get_compatibility("FSFAP", "Unlicense") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFAP_W3C(self):        
        assert osadl_matrix.get_compatibility("FSFAP", "W3C") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFAP_W3C_19980720(self):        
        assert osadl_matrix.get_compatibility("FSFAP", "W3C-19980720") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFAP_W3C_20150513(self):        
        assert osadl_matrix.get_compatibility("FSFAP", "W3C-20150513") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFAP_WTFPL(self):        
        assert osadl_matrix.get_compatibility("FSFAP", "WTFPL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFAP_X11(self):        
        assert osadl_matrix.get_compatibility("FSFAP", "X11") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFAP_XFree86_1_1(self):        
        assert osadl_matrix.get_compatibility("FSFAP", "XFree86-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFAP_ZPL_2_0(self):        
        assert osadl_matrix.get_compatibility("FSFAP", "ZPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFAP_Zlib(self):        
        assert osadl_matrix.get_compatibility("FSFAP", "Zlib") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFAP_bzip2_1_0_5(self):        
        assert osadl_matrix.get_compatibility("FSFAP", "bzip2-1.0.5") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFAP_bzip2_1_0_6(self):        
        assert osadl_matrix.get_compatibility("FSFAP", "bzip2-1.0.6") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFAP_curl(self):        
        assert osadl_matrix.get_compatibility("FSFAP", "curl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFAP_libtiff(self):        
        assert osadl_matrix.get_compatibility("FSFAP", "libtiff") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFAP_zlib_acknowledgement(self):        
        assert osadl_matrix.get_compatibility("FSFAP", "zlib-acknowledgement") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFULLR_0BSD(self):        
        assert osadl_matrix.get_compatibility("FSFULLR", "0BSD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFULLR_AFL_2_0(self):        
        assert osadl_matrix.get_compatibility("FSFULLR", "AFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFULLR_AFL_2_1(self):        
        assert osadl_matrix.get_compatibility("FSFULLR", "AFL-2.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFULLR_AFL_3_0(self):        
        assert osadl_matrix.get_compatibility("FSFULLR", "AFL-3.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFULLR_AGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("FSFULLR", "AGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_FSFULLR_AGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("FSFULLR", "AGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_FSFULLR_Apache_1_0(self):        
        assert osadl_matrix.get_compatibility("FSFULLR", "Apache-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFULLR_Apache_1_1(self):        
        assert osadl_matrix.get_compatibility("FSFULLR", "Apache-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFULLR_Apache_2_0(self):        
        assert osadl_matrix.get_compatibility("FSFULLR", "Apache-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFULLR_Artistic_1_0(self):        
        assert osadl_matrix.get_compatibility("FSFULLR", "Artistic-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFULLR_Artistic_1_0_Perl(self):        
        assert osadl_matrix.get_compatibility("FSFULLR", "Artistic-1.0-Perl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFULLR_Artistic_2_0(self):        
        assert osadl_matrix.get_compatibility("FSFULLR", "Artistic-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFULLR_BSD_1_Clause(self):        
        assert osadl_matrix.get_compatibility("FSFULLR", "BSD-1-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFULLR_BSD_2_Clause(self):        
        assert osadl_matrix.get_compatibility("FSFULLR", "BSD-2-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFULLR_BSD_2_Clause_Patent(self):        
        assert osadl_matrix.get_compatibility("FSFULLR", "BSD-2-Clause-Patent") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFULLR_BSD_3_Clause(self):        
        assert osadl_matrix.get_compatibility("FSFULLR", "BSD-3-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFULLR_BSD_4_Clause(self):        
        assert osadl_matrix.get_compatibility("FSFULLR", "BSD-4-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFULLR_BSD_4_Clause_UC(self):        
        assert osadl_matrix.get_compatibility("FSFULLR", "BSD-4-Clause-UC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFULLR_BSD_Source_Code(self):        
        assert osadl_matrix.get_compatibility("FSFULLR", "BSD-Source-Code") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFULLR_BSL_1_0(self):        
        assert osadl_matrix.get_compatibility("FSFULLR", "BSL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFULLR_CC0_1_0(self):        
        assert osadl_matrix.get_compatibility("FSFULLR", "CC0-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFULLR_CDDL_1_0(self):        
        assert osadl_matrix.get_compatibility("FSFULLR", "CDDL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_FSFULLR_CDDL_1_1(self):        
        assert osadl_matrix.get_compatibility("FSFULLR", "CDDL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_FSFULLR_CPL_1_0(self):        
        assert osadl_matrix.get_compatibility("FSFULLR", "CPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_FSFULLR_EFL_2_0(self):        
        assert osadl_matrix.get_compatibility("FSFULLR", "EFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFULLR_EPL_1_0(self):        
        assert osadl_matrix.get_compatibility("FSFULLR", "EPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_FSFULLR_EPL_2_0(self):        
        assert osadl_matrix.get_compatibility("FSFULLR", "EPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_FSFULLR_EUPL_1_1(self):        
        assert osadl_matrix.get_compatibility("FSFULLR", "EUPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_FSFULLR_EUPL_1_2(self):        
        assert osadl_matrix.get_compatibility("FSFULLR", "EUPL-1.2") == osadl_matrix.OSADLCompatibility.NO
    

    def test_FSFULLR_FSFAP(self):        
        assert osadl_matrix.get_compatibility("FSFULLR", "FSFAP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFULLR_FSFULLR(self):        
        assert osadl_matrix.get_compatibility("FSFULLR", "FSFULLR") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFULLR_FTL(self):        
        assert osadl_matrix.get_compatibility("FSFULLR", "FTL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFULLR_GPL_1_0_only(self):        
        assert osadl_matrix.get_compatibility("FSFULLR", "GPL-1.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_FSFULLR_GPL_1_0_or_later(self):        
        assert osadl_matrix.get_compatibility("FSFULLR", "GPL-1.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_FSFULLR_GPL_2_0_only(self):        
        assert osadl_matrix.get_compatibility("FSFULLR", "GPL-2.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_FSFULLR_GPL_2_0_only_WITH_Classpath_exception_2_0(self):        
        assert osadl_matrix.get_compatibility("FSFULLR", "GPL-2.0-only WITH Classpath-exception-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_FSFULLR_GPL_2_0_or_later(self):        
        assert osadl_matrix.get_compatibility("FSFULLR", "GPL-2.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_FSFULLR_GPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("FSFULLR", "GPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_FSFULLR_GPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("FSFULLR", "GPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_FSFULLR_HPND(self):        
        assert osadl_matrix.get_compatibility("FSFULLR", "HPND") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFULLR_IBM_pibs(self):        
        assert osadl_matrix.get_compatibility("FSFULLR", "IBM-pibs") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFULLR_ICU(self):        
        assert osadl_matrix.get_compatibility("FSFULLR", "ICU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFULLR_IJG(self):        
        assert osadl_matrix.get_compatibility("FSFULLR", "IJG") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFULLR_IPL_1_0(self):        
        assert osadl_matrix.get_compatibility("FSFULLR", "IPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_FSFULLR_ISC(self):        
        assert osadl_matrix.get_compatibility("FSFULLR", "ISC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFULLR_Info_ZIP(self):        
        assert osadl_matrix.get_compatibility("FSFULLR", "Info-ZIP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFULLR_LGPL_2_1_only(self):        
        assert osadl_matrix.get_compatibility("FSFULLR", "LGPL-2.1-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_FSFULLR_LGPL_2_1_or_later(self):        
        assert osadl_matrix.get_compatibility("FSFULLR", "LGPL-2.1-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_FSFULLR_LGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("FSFULLR", "LGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_FSFULLR_LGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("FSFULLR", "LGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_FSFULLR_Libpng(self):        
        assert osadl_matrix.get_compatibility("FSFULLR", "Libpng") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFULLR_MIT(self):        
        assert osadl_matrix.get_compatibility("FSFULLR", "MIT") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFULLR_MIT_CMU(self):        
        assert osadl_matrix.get_compatibility("FSFULLR", "MIT-CMU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFULLR_MPL_1_1(self):        
        assert osadl_matrix.get_compatibility("FSFULLR", "MPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_FSFULLR_MPL_2_0(self):        
        assert osadl_matrix.get_compatibility("FSFULLR", "MPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_FSFULLR_MPL_2_0_no_copyleft_exception(self):        
        assert osadl_matrix.get_compatibility("FSFULLR", "MPL-2.0-no-copyleft-exception") == osadl_matrix.OSADLCompatibility.NO
    

    def test_FSFULLR_MS_PL(self):        
        assert osadl_matrix.get_compatibility("FSFULLR", "MS-PL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_FSFULLR_MS_RL(self):        
        assert osadl_matrix.get_compatibility("FSFULLR", "MS-RL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_FSFULLR_MirOS(self):        
        assert osadl_matrix.get_compatibility("FSFULLR", "MirOS") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFULLR_NBPL_1_0(self):        
        assert osadl_matrix.get_compatibility("FSFULLR", "NBPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFULLR_NTP(self):        
        assert osadl_matrix.get_compatibility("FSFULLR", "NTP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFULLR_OSL_3_0(self):        
        assert osadl_matrix.get_compatibility("FSFULLR", "OSL-3.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_FSFULLR_OpenSSL(self):        
        assert osadl_matrix.get_compatibility("FSFULLR", "OpenSSL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_FSFULLR_PHP_3_01(self):        
        assert osadl_matrix.get_compatibility("FSFULLR", "PHP-3.01") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFULLR_PostgreSQL(self):        
        assert osadl_matrix.get_compatibility("FSFULLR", "PostgreSQL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFULLR_Python_2_0(self):        
        assert osadl_matrix.get_compatibility("FSFULLR", "Python-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFULLR_Qhull(self):        
        assert osadl_matrix.get_compatibility("FSFULLR", "Qhull") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFULLR_RSA_MD(self):        
        assert osadl_matrix.get_compatibility("FSFULLR", "RSA-MD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFULLR_Sleepycat(self):        
        assert osadl_matrix.get_compatibility("FSFULLR", "Sleepycat") == osadl_matrix.OSADLCompatibility.NO
    

    def test_FSFULLR_SunPro(self):        
        assert osadl_matrix.get_compatibility("FSFULLR", "SunPro") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFULLR_UPL_1_0(self):        
        assert osadl_matrix.get_compatibility("FSFULLR", "UPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFULLR_Unicode_DFS_2015(self):        
        assert osadl_matrix.get_compatibility("FSFULLR", "Unicode-DFS-2015") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFULLR_Unicode_DFS_2016(self):        
        assert osadl_matrix.get_compatibility("FSFULLR", "Unicode-DFS-2016") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFULLR_Unlicense(self):        
        assert osadl_matrix.get_compatibility("FSFULLR", "Unlicense") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFULLR_W3C(self):        
        assert osadl_matrix.get_compatibility("FSFULLR", "W3C") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFULLR_W3C_19980720(self):        
        assert osadl_matrix.get_compatibility("FSFULLR", "W3C-19980720") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFULLR_W3C_20150513(self):        
        assert osadl_matrix.get_compatibility("FSFULLR", "W3C-20150513") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFULLR_WTFPL(self):        
        assert osadl_matrix.get_compatibility("FSFULLR", "WTFPL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFULLR_X11(self):        
        assert osadl_matrix.get_compatibility("FSFULLR", "X11") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFULLR_XFree86_1_1(self):        
        assert osadl_matrix.get_compatibility("FSFULLR", "XFree86-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFULLR_ZPL_2_0(self):        
        assert osadl_matrix.get_compatibility("FSFULLR", "ZPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFULLR_Zlib(self):        
        assert osadl_matrix.get_compatibility("FSFULLR", "Zlib") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFULLR_bzip2_1_0_5(self):        
        assert osadl_matrix.get_compatibility("FSFULLR", "bzip2-1.0.5") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFULLR_bzip2_1_0_6(self):        
        assert osadl_matrix.get_compatibility("FSFULLR", "bzip2-1.0.6") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFULLR_curl(self):        
        assert osadl_matrix.get_compatibility("FSFULLR", "curl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFULLR_libtiff(self):        
        assert osadl_matrix.get_compatibility("FSFULLR", "libtiff") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FSFULLR_zlib_acknowledgement(self):        
        assert osadl_matrix.get_compatibility("FSFULLR", "zlib-acknowledgement") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FTL_0BSD(self):        
        assert osadl_matrix.get_compatibility("FTL", "0BSD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FTL_AFL_2_0(self):        
        assert osadl_matrix.get_compatibility("FTL", "AFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FTL_AFL_2_1(self):        
        assert osadl_matrix.get_compatibility("FTL", "AFL-2.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FTL_AFL_3_0(self):        
        assert osadl_matrix.get_compatibility("FTL", "AFL-3.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FTL_AGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("FTL", "AGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_FTL_AGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("FTL", "AGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_FTL_Apache_1_0(self):        
        assert osadl_matrix.get_compatibility("FTL", "Apache-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FTL_Apache_1_1(self):        
        assert osadl_matrix.get_compatibility("FTL", "Apache-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FTL_Apache_2_0(self):        
        assert osadl_matrix.get_compatibility("FTL", "Apache-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FTL_Artistic_1_0(self):        
        assert osadl_matrix.get_compatibility("FTL", "Artistic-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FTL_Artistic_1_0_Perl(self):        
        assert osadl_matrix.get_compatibility("FTL", "Artistic-1.0-Perl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FTL_Artistic_2_0(self):        
        assert osadl_matrix.get_compatibility("FTL", "Artistic-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FTL_BSD_1_Clause(self):        
        assert osadl_matrix.get_compatibility("FTL", "BSD-1-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FTL_BSD_2_Clause(self):        
        assert osadl_matrix.get_compatibility("FTL", "BSD-2-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FTL_BSD_2_Clause_Patent(self):        
        assert osadl_matrix.get_compatibility("FTL", "BSD-2-Clause-Patent") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FTL_BSD_3_Clause(self):        
        assert osadl_matrix.get_compatibility("FTL", "BSD-3-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FTL_BSD_4_Clause(self):        
        assert osadl_matrix.get_compatibility("FTL", "BSD-4-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FTL_BSD_4_Clause_UC(self):        
        assert osadl_matrix.get_compatibility("FTL", "BSD-4-Clause-UC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FTL_BSD_Source_Code(self):        
        assert osadl_matrix.get_compatibility("FTL", "BSD-Source-Code") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FTL_BSL_1_0(self):        
        assert osadl_matrix.get_compatibility("FTL", "BSL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FTL_CC0_1_0(self):        
        assert osadl_matrix.get_compatibility("FTL", "CC0-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FTL_CDDL_1_0(self):        
        assert osadl_matrix.get_compatibility("FTL", "CDDL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_FTL_CDDL_1_1(self):        
        assert osadl_matrix.get_compatibility("FTL", "CDDL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_FTL_CPL_1_0(self):        
        assert osadl_matrix.get_compatibility("FTL", "CPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_FTL_EFL_2_0(self):        
        assert osadl_matrix.get_compatibility("FTL", "EFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FTL_EPL_1_0(self):        
        assert osadl_matrix.get_compatibility("FTL", "EPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_FTL_EPL_2_0(self):        
        assert osadl_matrix.get_compatibility("FTL", "EPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_FTL_EUPL_1_1(self):        
        assert osadl_matrix.get_compatibility("FTL", "EUPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_FTL_EUPL_1_2(self):        
        assert osadl_matrix.get_compatibility("FTL", "EUPL-1.2") == osadl_matrix.OSADLCompatibility.NO
    

    def test_FTL_FSFAP(self):        
        assert osadl_matrix.get_compatibility("FTL", "FSFAP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FTL_FSFULLR(self):        
        assert osadl_matrix.get_compatibility("FTL", "FSFULLR") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FTL_FTL(self):        
        assert osadl_matrix.get_compatibility("FTL", "FTL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FTL_GPL_1_0_only(self):        
        assert osadl_matrix.get_compatibility("FTL", "GPL-1.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_FTL_GPL_1_0_or_later(self):        
        assert osadl_matrix.get_compatibility("FTL", "GPL-1.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_FTL_GPL_2_0_only(self):        
        assert osadl_matrix.get_compatibility("FTL", "GPL-2.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_FTL_GPL_2_0_only_WITH_Classpath_exception_2_0(self):        
        assert osadl_matrix.get_compatibility("FTL", "GPL-2.0-only WITH Classpath-exception-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_FTL_GPL_2_0_or_later(self):        
        assert osadl_matrix.get_compatibility("FTL", "GPL-2.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_FTL_GPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("FTL", "GPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_FTL_GPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("FTL", "GPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_FTL_HPND(self):        
        assert osadl_matrix.get_compatibility("FTL", "HPND") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FTL_IBM_pibs(self):        
        assert osadl_matrix.get_compatibility("FTL", "IBM-pibs") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FTL_ICU(self):        
        assert osadl_matrix.get_compatibility("FTL", "ICU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FTL_IJG(self):        
        assert osadl_matrix.get_compatibility("FTL", "IJG") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FTL_IPL_1_0(self):        
        assert osadl_matrix.get_compatibility("FTL", "IPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_FTL_ISC(self):        
        assert osadl_matrix.get_compatibility("FTL", "ISC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FTL_Info_ZIP(self):        
        assert osadl_matrix.get_compatibility("FTL", "Info-ZIP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FTL_LGPL_2_1_only(self):        
        assert osadl_matrix.get_compatibility("FTL", "LGPL-2.1-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_FTL_LGPL_2_1_or_later(self):        
        assert osadl_matrix.get_compatibility("FTL", "LGPL-2.1-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_FTL_LGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("FTL", "LGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_FTL_LGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("FTL", "LGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_FTL_Libpng(self):        
        assert osadl_matrix.get_compatibility("FTL", "Libpng") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FTL_MIT(self):        
        assert osadl_matrix.get_compatibility("FTL", "MIT") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FTL_MIT_CMU(self):        
        assert osadl_matrix.get_compatibility("FTL", "MIT-CMU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FTL_MPL_1_1(self):        
        assert osadl_matrix.get_compatibility("FTL", "MPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_FTL_MPL_2_0(self):        
        assert osadl_matrix.get_compatibility("FTL", "MPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_FTL_MPL_2_0_no_copyleft_exception(self):        
        assert osadl_matrix.get_compatibility("FTL", "MPL-2.0-no-copyleft-exception") == osadl_matrix.OSADLCompatibility.NO
    

    def test_FTL_MS_PL(self):        
        assert osadl_matrix.get_compatibility("FTL", "MS-PL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_FTL_MS_RL(self):        
        assert osadl_matrix.get_compatibility("FTL", "MS-RL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_FTL_MirOS(self):        
        assert osadl_matrix.get_compatibility("FTL", "MirOS") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FTL_NBPL_1_0(self):        
        assert osadl_matrix.get_compatibility("FTL", "NBPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FTL_NTP(self):        
        assert osadl_matrix.get_compatibility("FTL", "NTP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FTL_OSL_3_0(self):        
        assert osadl_matrix.get_compatibility("FTL", "OSL-3.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_FTL_OpenSSL(self):        
        assert osadl_matrix.get_compatibility("FTL", "OpenSSL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_FTL_PHP_3_01(self):        
        assert osadl_matrix.get_compatibility("FTL", "PHP-3.01") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FTL_PostgreSQL(self):        
        assert osadl_matrix.get_compatibility("FTL", "PostgreSQL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FTL_Python_2_0(self):        
        assert osadl_matrix.get_compatibility("FTL", "Python-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FTL_Qhull(self):        
        assert osadl_matrix.get_compatibility("FTL", "Qhull") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FTL_RSA_MD(self):        
        assert osadl_matrix.get_compatibility("FTL", "RSA-MD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FTL_Sleepycat(self):        
        assert osadl_matrix.get_compatibility("FTL", "Sleepycat") == osadl_matrix.OSADLCompatibility.NO
    

    def test_FTL_SunPro(self):        
        assert osadl_matrix.get_compatibility("FTL", "SunPro") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FTL_UPL_1_0(self):        
        assert osadl_matrix.get_compatibility("FTL", "UPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FTL_Unicode_DFS_2015(self):        
        assert osadl_matrix.get_compatibility("FTL", "Unicode-DFS-2015") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FTL_Unicode_DFS_2016(self):        
        assert osadl_matrix.get_compatibility("FTL", "Unicode-DFS-2016") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FTL_Unlicense(self):        
        assert osadl_matrix.get_compatibility("FTL", "Unlicense") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FTL_W3C(self):        
        assert osadl_matrix.get_compatibility("FTL", "W3C") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FTL_W3C_19980720(self):        
        assert osadl_matrix.get_compatibility("FTL", "W3C-19980720") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FTL_W3C_20150513(self):        
        assert osadl_matrix.get_compatibility("FTL", "W3C-20150513") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FTL_WTFPL(self):        
        assert osadl_matrix.get_compatibility("FTL", "WTFPL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FTL_X11(self):        
        assert osadl_matrix.get_compatibility("FTL", "X11") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FTL_XFree86_1_1(self):        
        assert osadl_matrix.get_compatibility("FTL", "XFree86-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FTL_ZPL_2_0(self):        
        assert osadl_matrix.get_compatibility("FTL", "ZPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FTL_Zlib(self):        
        assert osadl_matrix.get_compatibility("FTL", "Zlib") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FTL_bzip2_1_0_5(self):        
        assert osadl_matrix.get_compatibility("FTL", "bzip2-1.0.5") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FTL_bzip2_1_0_6(self):        
        assert osadl_matrix.get_compatibility("FTL", "bzip2-1.0.6") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FTL_curl(self):        
        assert osadl_matrix.get_compatibility("FTL", "curl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FTL_libtiff(self):        
        assert osadl_matrix.get_compatibility("FTL", "libtiff") == osadl_matrix.OSADLCompatibility.YES
    

    def test_FTL_zlib_acknowledgement(self):        
        assert osadl_matrix.get_compatibility("FTL", "zlib-acknowledgement") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_1_0_only_0BSD(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-only", "0BSD") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_1_0_only_AFL_2_0(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-only", "AFL-2.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_1_0_only_AFL_2_1(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-only", "AFL-2.1") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_1_0_only_AFL_3_0(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-only", "AFL-3.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_1_0_only_AGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-only", "AGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_1_0_only_AGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-only", "AGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_1_0_only_Apache_1_0(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-only", "Apache-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_1_0_only_Apache_1_1(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-only", "Apache-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_1_0_only_Apache_2_0(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-only", "Apache-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_1_0_only_Artistic_1_0(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-only", "Artistic-1.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_1_0_only_Artistic_1_0_Perl(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-only", "Artistic-1.0-Perl") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_1_0_only_Artistic_2_0(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-only", "Artistic-2.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_1_0_only_BSD_1_Clause(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-only", "BSD-1-Clause") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_1_0_only_BSD_2_Clause(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-only", "BSD-2-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_1_0_only_BSD_2_Clause_Patent(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-only", "BSD-2-Clause-Patent") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_1_0_only_BSD_3_Clause(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-only", "BSD-3-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_1_0_only_BSD_4_Clause(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-only", "BSD-4-Clause") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_1_0_only_BSD_4_Clause_UC(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-only", "BSD-4-Clause-UC") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_1_0_only_BSD_Source_Code(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-only", "BSD-Source-Code") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_1_0_only_BSL_1_0(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-only", "BSL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_1_0_only_CC0_1_0(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-only", "CC0-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_1_0_only_CDDL_1_0(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-only", "CDDL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_1_0_only_CDDL_1_1(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-only", "CDDL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_1_0_only_CPL_1_0(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-only", "CPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_1_0_only_EFL_2_0(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-only", "EFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_1_0_only_EPL_1_0(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-only", "EPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_1_0_only_EPL_2_0(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-only", "EPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_1_0_only_EUPL_1_1(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-only", "EUPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_1_0_only_EUPL_1_2(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-only", "EUPL-1.2") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_1_0_only_FSFAP(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-only", "FSFAP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_1_0_only_FSFULLR(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-only", "FSFULLR") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_1_0_only_FTL(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-only", "FTL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_1_0_only_GPL_1_0_only(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-only", "GPL-1.0-only") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_1_0_only_GPL_1_0_or_later(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-only", "GPL-1.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_1_0_only_GPL_2_0_only(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-only", "GPL-2.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_1_0_only_GPL_2_0_only_WITH_Classpath_exception_2_0(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-only", "GPL-2.0-only WITH Classpath-exception-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_1_0_only_GPL_2_0_or_later(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-only", "GPL-2.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_1_0_only_GPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-only", "GPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_1_0_only_GPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-only", "GPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_1_0_only_HPND(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-only", "HPND") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_1_0_only_IBM_pibs(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-only", "IBM-pibs") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_1_0_only_ICU(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-only", "ICU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_1_0_only_IJG(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-only", "IJG") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_1_0_only_IPL_1_0(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-only", "IPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_1_0_only_ISC(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-only", "ISC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_1_0_only_Info_ZIP(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-only", "Info-ZIP") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_1_0_only_LGPL_2_1_only(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-only", "LGPL-2.1-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_1_0_only_LGPL_2_1_or_later(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-only", "LGPL-2.1-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_1_0_only_LGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-only", "LGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_1_0_only_LGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-only", "LGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_1_0_only_Libpng(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-only", "Libpng") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_1_0_only_MIT(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-only", "MIT") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_1_0_only_MIT_CMU(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-only", "MIT-CMU") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_1_0_only_MPL_1_1(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-only", "MPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_1_0_only_MPL_2_0(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-only", "MPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_1_0_only_MPL_2_0_no_copyleft_exception(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-only", "MPL-2.0-no-copyleft-exception") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_1_0_only_MS_PL(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-only", "MS-PL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_1_0_only_MS_RL(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-only", "MS-RL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_1_0_only_MirOS(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-only", "MirOS") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_1_0_only_NBPL_1_0(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-only", "NBPL-1.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_1_0_only_NTP(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-only", "NTP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_1_0_only_OSL_3_0(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-only", "OSL-3.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_1_0_only_OpenSSL(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-only", "OpenSSL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_1_0_only_PHP_3_01(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-only", "PHP-3.01") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_1_0_only_PostgreSQL(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-only", "PostgreSQL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_1_0_only_Python_2_0(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-only", "Python-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_1_0_only_Qhull(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-only", "Qhull") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_1_0_only_RSA_MD(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-only", "RSA-MD") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_1_0_only_Sleepycat(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-only", "Sleepycat") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_1_0_only_SunPro(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-only", "SunPro") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_1_0_only_UPL_1_0(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-only", "UPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_1_0_only_Unicode_DFS_2015(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-only", "Unicode-DFS-2015") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_1_0_only_Unicode_DFS_2016(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-only", "Unicode-DFS-2016") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_1_0_only_Unlicense(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-only", "Unlicense") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_1_0_only_W3C(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-only", "W3C") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_1_0_only_W3C_19980720(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-only", "W3C-19980720") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_1_0_only_W3C_20150513(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-only", "W3C-20150513") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_1_0_only_WTFPL(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-only", "WTFPL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_1_0_only_X11(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-only", "X11") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_1_0_only_XFree86_1_1(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-only", "XFree86-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_1_0_only_ZPL_2_0(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-only", "ZPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_1_0_only_Zlib(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-only", "Zlib") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_1_0_only_bzip2_1_0_5(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-only", "bzip2-1.0.5") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_1_0_only_bzip2_1_0_6(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-only", "bzip2-1.0.6") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_1_0_only_curl(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-only", "curl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_1_0_only_libtiff(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-only", "libtiff") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_1_0_only_zlib_acknowledgement(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-only", "zlib-acknowledgement") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_1_0_or_later_0BSD(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-or-later", "0BSD") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_1_0_or_later_AFL_2_0(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-or-later", "AFL-2.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_1_0_or_later_AFL_2_1(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-or-later", "AFL-2.1") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_1_0_or_later_AFL_3_0(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-or-later", "AFL-3.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_1_0_or_later_AGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-or-later", "AGPL-3.0-only") == osadl_matrix.OSADLCompatibility.CHECKDEP
    

    def test_GPL_1_0_or_later_AGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-or-later", "AGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.CHECKDEP
    

    def test_GPL_1_0_or_later_Apache_1_0(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-or-later", "Apache-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_1_0_or_later_Apache_1_1(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-or-later", "Apache-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_1_0_or_later_Apache_2_0(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-or-later", "Apache-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_1_0_or_later_Artistic_1_0(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-or-later", "Artistic-1.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_1_0_or_later_Artistic_1_0_Perl(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-or-later", "Artistic-1.0-Perl") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_1_0_or_later_Artistic_2_0(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-or-later", "Artistic-2.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_1_0_or_later_BSD_1_Clause(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-or-later", "BSD-1-Clause") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_1_0_or_later_BSD_2_Clause(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-or-later", "BSD-2-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_1_0_or_later_BSD_2_Clause_Patent(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-or-later", "BSD-2-Clause-Patent") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_1_0_or_later_BSD_3_Clause(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-or-later", "BSD-3-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_1_0_or_later_BSD_4_Clause(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-or-later", "BSD-4-Clause") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_1_0_or_later_BSD_4_Clause_UC(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-or-later", "BSD-4-Clause-UC") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_1_0_or_later_BSD_Source_Code(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-or-later", "BSD-Source-Code") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_1_0_or_later_BSL_1_0(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-or-later", "BSL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_1_0_or_later_CC0_1_0(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-or-later", "CC0-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_1_0_or_later_CDDL_1_0(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-or-later", "CDDL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_1_0_or_later_CDDL_1_1(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-or-later", "CDDL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_1_0_or_later_CPL_1_0(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-or-later", "CPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_1_0_or_later_EFL_2_0(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-or-later", "EFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_1_0_or_later_EPL_1_0(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-or-later", "EPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_1_0_or_later_EPL_2_0(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-or-later", "EPL-2.0") == osadl_matrix.OSADLCompatibility.CHECKDEP
    

    def test_GPL_1_0_or_later_EUPL_1_1(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-or-later", "EUPL-1.1") == osadl_matrix.OSADLCompatibility.CHECKDEP
    

    def test_GPL_1_0_or_later_EUPL_1_2(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-or-later", "EUPL-1.2") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_1_0_or_later_FSFAP(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-or-later", "FSFAP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_1_0_or_later_FSFULLR(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-or-later", "FSFULLR") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_1_0_or_later_FTL(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-or-later", "FTL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_1_0_or_later_GPL_1_0_only(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-or-later", "GPL-1.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_1_0_or_later_GPL_1_0_or_later(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-or-later", "GPL-1.0-or-later") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_1_0_or_later_GPL_2_0_only(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-or-later", "GPL-2.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_1_0_or_later_GPL_2_0_only_WITH_Classpath_exception_2_0(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-or-later", "GPL-2.0-only WITH Classpath-exception-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_1_0_or_later_GPL_2_0_or_later(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-or-later", "GPL-2.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_1_0_or_later_GPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-or-later", "GPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_1_0_or_later_GPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-or-later", "GPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_1_0_or_later_HPND(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-or-later", "HPND") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_1_0_or_later_IBM_pibs(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-or-later", "IBM-pibs") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_1_0_or_later_ICU(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-or-later", "ICU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_1_0_or_later_IJG(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-or-later", "IJG") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_1_0_or_later_IPL_1_0(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-or-later", "IPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_1_0_or_later_ISC(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-or-later", "ISC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_1_0_or_later_Info_ZIP(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-or-later", "Info-ZIP") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_1_0_or_later_LGPL_2_1_only(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-or-later", "LGPL-2.1-only") == osadl_matrix.OSADLCompatibility.CHECKDEP
    

    def test_GPL_1_0_or_later_LGPL_2_1_or_later(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-or-later", "LGPL-2.1-or-later") == osadl_matrix.OSADLCompatibility.CHECKDEP
    

    def test_GPL_1_0_or_later_LGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-or-later", "LGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_1_0_or_later_LGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-or-later", "LGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_1_0_or_later_Libpng(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-or-later", "Libpng") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_1_0_or_later_MIT(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-or-later", "MIT") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_1_0_or_later_MIT_CMU(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-or-later", "MIT-CMU") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_1_0_or_later_MPL_1_1(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-or-later", "MPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_1_0_or_later_MPL_2_0(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-or-later", "MPL-2.0") == osadl_matrix.OSADLCompatibility.CHECKDEP
    

    def test_GPL_1_0_or_later_MPL_2_0_no_copyleft_exception(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-or-later", "MPL-2.0-no-copyleft-exception") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_1_0_or_later_MS_PL(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-or-later", "MS-PL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_1_0_or_later_MS_RL(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-or-later", "MS-RL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_1_0_or_later_MirOS(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-or-later", "MirOS") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_1_0_or_later_NBPL_1_0(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-or-later", "NBPL-1.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_1_0_or_later_NTP(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-or-later", "NTP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_1_0_or_later_OSL_3_0(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-or-later", "OSL-3.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_1_0_or_later_OpenSSL(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-or-later", "OpenSSL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_1_0_or_later_PHP_3_01(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-or-later", "PHP-3.01") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_1_0_or_later_PostgreSQL(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-or-later", "PostgreSQL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_1_0_or_later_Python_2_0(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-or-later", "Python-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_1_0_or_later_Qhull(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-or-later", "Qhull") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_1_0_or_later_RSA_MD(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-or-later", "RSA-MD") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_1_0_or_later_Sleepycat(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-or-later", "Sleepycat") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_1_0_or_later_SunPro(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-or-later", "SunPro") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_1_0_or_later_UPL_1_0(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-or-later", "UPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_1_0_or_later_Unicode_DFS_2015(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-or-later", "Unicode-DFS-2015") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_1_0_or_later_Unicode_DFS_2016(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-or-later", "Unicode-DFS-2016") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_1_0_or_later_Unlicense(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-or-later", "Unlicense") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_1_0_or_later_W3C(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-or-later", "W3C") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_1_0_or_later_W3C_19980720(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-or-later", "W3C-19980720") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_1_0_or_later_W3C_20150513(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-or-later", "W3C-20150513") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_1_0_or_later_WTFPL(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-or-later", "WTFPL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_1_0_or_later_X11(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-or-later", "X11") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_1_0_or_later_XFree86_1_1(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-or-later", "XFree86-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_1_0_or_later_ZPL_2_0(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-or-later", "ZPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_1_0_or_later_Zlib(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-or-later", "Zlib") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_1_0_or_later_bzip2_1_0_5(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-or-later", "bzip2-1.0.5") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_1_0_or_later_bzip2_1_0_6(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-or-later", "bzip2-1.0.6") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_1_0_or_later_curl(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-or-later", "curl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_1_0_or_later_libtiff(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-or-later", "libtiff") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_1_0_or_later_zlib_acknowledgement(self):        
        assert osadl_matrix.get_compatibility("GPL-1.0-or-later", "zlib-acknowledgement") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_only_0BSD(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only", "0BSD") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_2_0_only_AFL_2_0(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only", "AFL-2.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_2_0_only_AFL_2_1(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only", "AFL-2.1") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_2_0_only_AFL_3_0(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only", "AFL-3.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_2_0_only_AGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only", "AGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_only_AGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only", "AGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_only_Apache_1_0(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only", "Apache-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_only_Apache_1_1(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only", "Apache-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_only_Apache_2_0(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only", "Apache-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_only_Artistic_1_0(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only", "Artistic-1.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_2_0_only_Artistic_1_0_Perl(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only", "Artistic-1.0-Perl") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_2_0_only_Artistic_2_0(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only", "Artistic-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_only_BSD_1_Clause(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only", "BSD-1-Clause") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_2_0_only_BSD_2_Clause(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only", "BSD-2-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_only_BSD_2_Clause_Patent(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only", "BSD-2-Clause-Patent") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_only_BSD_3_Clause(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only", "BSD-3-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_only_BSD_4_Clause(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only", "BSD-4-Clause") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_only_BSD_4_Clause_UC(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only", "BSD-4-Clause-UC") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_only_BSD_Source_Code(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only", "BSD-Source-Code") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_2_0_only_BSL_1_0(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only", "BSL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_only_CC0_1_0(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only", "CC0-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_only_CDDL_1_0(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only", "CDDL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_only_CDDL_1_1(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only", "CDDL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_only_CPL_1_0(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only", "CPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_only_EFL_2_0(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only", "EFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_only_EPL_1_0(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only", "EPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_only_EPL_2_0(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only", "EPL-2.0") == osadl_matrix.OSADLCompatibility.CHECKDEP
    

    def test_GPL_2_0_only_EUPL_1_1(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only", "EUPL-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_only_EUPL_1_2(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only", "EUPL-1.2") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_only_FSFAP(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only", "FSFAP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_only_FSFULLR(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only", "FSFULLR") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_only_FTL(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only", "FTL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_only_GPL_1_0_only(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only", "GPL-1.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_only_GPL_1_0_or_later(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only", "GPL-1.0-or-later") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_only_GPL_2_0_only(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only", "GPL-2.0-only") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_only_GPL_2_0_only_WITH_Classpath_exception_2_0(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only", "GPL-2.0-only WITH Classpath-exception-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_only_GPL_2_0_or_later(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only", "GPL-2.0-or-later") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_only_GPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only", "GPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_only_GPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only", "GPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_only_HPND(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only", "HPND") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_2_0_only_IBM_pibs(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only", "IBM-pibs") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_only_ICU(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only", "ICU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_only_IJG(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only", "IJG") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_only_IPL_1_0(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only", "IPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_only_ISC(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only", "ISC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_only_Info_ZIP(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only", "Info-ZIP") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_2_0_only_LGPL_2_1_only(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only", "LGPL-2.1-only") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_only_LGPL_2_1_or_later(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only", "LGPL-2.1-or-later") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_only_LGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only", "LGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_only_LGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only", "LGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_only_Libpng(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only", "Libpng") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_only_MIT(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only", "MIT") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_only_MIT_CMU(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only", "MIT-CMU") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_2_0_only_MPL_1_1(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only", "MPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_only_MPL_2_0(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only", "MPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_only_MPL_2_0_no_copyleft_exception(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only", "MPL-2.0-no-copyleft-exception") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_only_MS_PL(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only", "MS-PL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_2_0_only_MS_RL(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only", "MS-RL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_only_MirOS(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only", "MirOS") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_2_0_only_NBPL_1_0(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only", "NBPL-1.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_2_0_only_NTP(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only", "NTP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_only_OSL_3_0(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only", "OSL-3.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_only_OpenSSL(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only", "OpenSSL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_only_PHP_3_01(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only", "PHP-3.01") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_2_0_only_PostgreSQL(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only", "PostgreSQL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_2_0_only_Python_2_0(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only", "Python-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_only_Qhull(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only", "Qhull") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_2_0_only_RSA_MD(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only", "RSA-MD") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_2_0_only_Sleepycat(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only", "Sleepycat") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_only_SunPro(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only", "SunPro") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_2_0_only_UPL_1_0(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only", "UPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_only_Unicode_DFS_2015(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only", "Unicode-DFS-2015") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_2_0_only_Unicode_DFS_2016(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only", "Unicode-DFS-2016") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_2_0_only_Unlicense(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only", "Unlicense") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_only_W3C(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only", "W3C") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_only_W3C_19980720(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only", "W3C-19980720") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_only_W3C_20150513(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only", "W3C-20150513") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_only_WTFPL(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only", "WTFPL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_only_X11(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only", "X11") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_only_XFree86_1_1(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only", "XFree86-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_only_ZPL_2_0(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only", "ZPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_only_Zlib(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only", "Zlib") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_only_bzip2_1_0_5(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only", "bzip2-1.0.5") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_only_bzip2_1_0_6(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only", "bzip2-1.0.6") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_only_curl(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only", "curl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_only_libtiff(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only", "libtiff") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_2_0_only_zlib_acknowledgement(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only", "zlib-acknowledgement") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_only_WITH_Classpath_exception_2_0_0BSD(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only WITH Classpath-exception-2.0", "0BSD") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_2_0_only_WITH_Classpath_exception_2_0_AFL_2_0(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only WITH Classpath-exception-2.0", "AFL-2.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_2_0_only_WITH_Classpath_exception_2_0_AFL_2_1(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only WITH Classpath-exception-2.0", "AFL-2.1") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_2_0_only_WITH_Classpath_exception_2_0_AFL_3_0(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only WITH Classpath-exception-2.0", "AFL-3.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_2_0_only_WITH_Classpath_exception_2_0_AGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only WITH Classpath-exception-2.0", "AGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_only_WITH_Classpath_exception_2_0_AGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only WITH Classpath-exception-2.0", "AGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_only_WITH_Classpath_exception_2_0_Apache_1_0(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only WITH Classpath-exception-2.0", "Apache-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_only_WITH_Classpath_exception_2_0_Apache_1_1(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only WITH Classpath-exception-2.0", "Apache-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_only_WITH_Classpath_exception_2_0_Apache_2_0(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only WITH Classpath-exception-2.0", "Apache-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_only_WITH_Classpath_exception_2_0_Artistic_1_0(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only WITH Classpath-exception-2.0", "Artistic-1.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_2_0_only_WITH_Classpath_exception_2_0_Artistic_1_0_Perl(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only WITH Classpath-exception-2.0", "Artistic-1.0-Perl") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_2_0_only_WITH_Classpath_exception_2_0_Artistic_2_0(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only WITH Classpath-exception-2.0", "Artistic-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_only_WITH_Classpath_exception_2_0_BSD_1_Clause(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only WITH Classpath-exception-2.0", "BSD-1-Clause") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_2_0_only_WITH_Classpath_exception_2_0_BSD_2_Clause(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only WITH Classpath-exception-2.0", "BSD-2-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_only_WITH_Classpath_exception_2_0_BSD_2_Clause_Patent(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only WITH Classpath-exception-2.0", "BSD-2-Clause-Patent") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_only_WITH_Classpath_exception_2_0_BSD_3_Clause(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only WITH Classpath-exception-2.0", "BSD-3-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_only_WITH_Classpath_exception_2_0_BSD_4_Clause(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only WITH Classpath-exception-2.0", "BSD-4-Clause") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_only_WITH_Classpath_exception_2_0_BSD_4_Clause_UC(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only WITH Classpath-exception-2.0", "BSD-4-Clause-UC") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_only_WITH_Classpath_exception_2_0_BSD_Source_Code(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only WITH Classpath-exception-2.0", "BSD-Source-Code") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_2_0_only_WITH_Classpath_exception_2_0_BSL_1_0(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only WITH Classpath-exception-2.0", "BSL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_only_WITH_Classpath_exception_2_0_CC0_1_0(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only WITH Classpath-exception-2.0", "CC0-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_only_WITH_Classpath_exception_2_0_CDDL_1_0(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only WITH Classpath-exception-2.0", "CDDL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_only_WITH_Classpath_exception_2_0_CDDL_1_1(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only WITH Classpath-exception-2.0", "CDDL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_only_WITH_Classpath_exception_2_0_CPL_1_0(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only WITH Classpath-exception-2.0", "CPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_only_WITH_Classpath_exception_2_0_EFL_2_0(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only WITH Classpath-exception-2.0", "EFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_only_WITH_Classpath_exception_2_0_EPL_1_0(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only WITH Classpath-exception-2.0", "EPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_only_WITH_Classpath_exception_2_0_EPL_2_0(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only WITH Classpath-exception-2.0", "EPL-2.0") == osadl_matrix.OSADLCompatibility.CHECKDEP
    

    def test_GPL_2_0_only_WITH_Classpath_exception_2_0_EUPL_1_1(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only WITH Classpath-exception-2.0", "EUPL-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_only_WITH_Classpath_exception_2_0_EUPL_1_2(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only WITH Classpath-exception-2.0", "EUPL-1.2") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_only_WITH_Classpath_exception_2_0_FSFAP(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only WITH Classpath-exception-2.0", "FSFAP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_only_WITH_Classpath_exception_2_0_FSFULLR(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only WITH Classpath-exception-2.0", "FSFULLR") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_only_WITH_Classpath_exception_2_0_FTL(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only WITH Classpath-exception-2.0", "FTL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_only_WITH_Classpath_exception_2_0_GPL_1_0_only(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only WITH Classpath-exception-2.0", "GPL-1.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_only_WITH_Classpath_exception_2_0_GPL_1_0_or_later(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only WITH Classpath-exception-2.0", "GPL-1.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_only_WITH_Classpath_exception_2_0_GPL_2_0_only(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only WITH Classpath-exception-2.0", "GPL-2.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_only_WITH_Classpath_exception_2_0_GPL_2_0_only_WITH_Classpath_exception_2_0(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only WITH Classpath-exception-2.0", "GPL-2.0-only WITH Classpath-exception-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_only_WITH_Classpath_exception_2_0_GPL_2_0_or_later(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only WITH Classpath-exception-2.0", "GPL-2.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_only_WITH_Classpath_exception_2_0_GPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only WITH Classpath-exception-2.0", "GPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_only_WITH_Classpath_exception_2_0_GPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only WITH Classpath-exception-2.0", "GPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_only_WITH_Classpath_exception_2_0_HPND(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only WITH Classpath-exception-2.0", "HPND") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_2_0_only_WITH_Classpath_exception_2_0_IBM_pibs(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only WITH Classpath-exception-2.0", "IBM-pibs") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_only_WITH_Classpath_exception_2_0_ICU(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only WITH Classpath-exception-2.0", "ICU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_only_WITH_Classpath_exception_2_0_IJG(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only WITH Classpath-exception-2.0", "IJG") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_only_WITH_Classpath_exception_2_0_IPL_1_0(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only WITH Classpath-exception-2.0", "IPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_only_WITH_Classpath_exception_2_0_ISC(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only WITH Classpath-exception-2.0", "ISC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_only_WITH_Classpath_exception_2_0_Info_ZIP(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only WITH Classpath-exception-2.0", "Info-ZIP") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_2_0_only_WITH_Classpath_exception_2_0_LGPL_2_1_only(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only WITH Classpath-exception-2.0", "LGPL-2.1-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_only_WITH_Classpath_exception_2_0_LGPL_2_1_or_later(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only WITH Classpath-exception-2.0", "LGPL-2.1-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_only_WITH_Classpath_exception_2_0_LGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only WITH Classpath-exception-2.0", "LGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_only_WITH_Classpath_exception_2_0_LGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only WITH Classpath-exception-2.0", "LGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_only_WITH_Classpath_exception_2_0_Libpng(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only WITH Classpath-exception-2.0", "Libpng") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_only_WITH_Classpath_exception_2_0_MIT(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only WITH Classpath-exception-2.0", "MIT") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_only_WITH_Classpath_exception_2_0_MIT_CMU(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only WITH Classpath-exception-2.0", "MIT-CMU") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_2_0_only_WITH_Classpath_exception_2_0_MPL_1_1(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only WITH Classpath-exception-2.0", "MPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_only_WITH_Classpath_exception_2_0_MPL_2_0(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only WITH Classpath-exception-2.0", "MPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_only_WITH_Classpath_exception_2_0_MPL_2_0_no_copyleft_exception(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only WITH Classpath-exception-2.0", "MPL-2.0-no-copyleft-exception") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_only_WITH_Classpath_exception_2_0_MS_PL(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only WITH Classpath-exception-2.0", "MS-PL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_2_0_only_WITH_Classpath_exception_2_0_MS_RL(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only WITH Classpath-exception-2.0", "MS-RL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_only_WITH_Classpath_exception_2_0_MirOS(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only WITH Classpath-exception-2.0", "MirOS") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_2_0_only_WITH_Classpath_exception_2_0_NBPL_1_0(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only WITH Classpath-exception-2.0", "NBPL-1.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_2_0_only_WITH_Classpath_exception_2_0_NTP(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only WITH Classpath-exception-2.0", "NTP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_only_WITH_Classpath_exception_2_0_OSL_3_0(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only WITH Classpath-exception-2.0", "OSL-3.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_only_WITH_Classpath_exception_2_0_OpenSSL(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only WITH Classpath-exception-2.0", "OpenSSL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_only_WITH_Classpath_exception_2_0_PHP_3_01(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only WITH Classpath-exception-2.0", "PHP-3.01") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_2_0_only_WITH_Classpath_exception_2_0_PostgreSQL(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only WITH Classpath-exception-2.0", "PostgreSQL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_2_0_only_WITH_Classpath_exception_2_0_Python_2_0(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only WITH Classpath-exception-2.0", "Python-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_only_WITH_Classpath_exception_2_0_Qhull(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only WITH Classpath-exception-2.0", "Qhull") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_2_0_only_WITH_Classpath_exception_2_0_RSA_MD(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only WITH Classpath-exception-2.0", "RSA-MD") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_2_0_only_WITH_Classpath_exception_2_0_Sleepycat(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only WITH Classpath-exception-2.0", "Sleepycat") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_only_WITH_Classpath_exception_2_0_SunPro(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only WITH Classpath-exception-2.0", "SunPro") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_2_0_only_WITH_Classpath_exception_2_0_UPL_1_0(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only WITH Classpath-exception-2.0", "UPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_only_WITH_Classpath_exception_2_0_Unicode_DFS_2015(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only WITH Classpath-exception-2.0", "Unicode-DFS-2015") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_2_0_only_WITH_Classpath_exception_2_0_Unicode_DFS_2016(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only WITH Classpath-exception-2.0", "Unicode-DFS-2016") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_2_0_only_WITH_Classpath_exception_2_0_Unlicense(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only WITH Classpath-exception-2.0", "Unlicense") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_only_WITH_Classpath_exception_2_0_W3C(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only WITH Classpath-exception-2.0", "W3C") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_only_WITH_Classpath_exception_2_0_W3C_19980720(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only WITH Classpath-exception-2.0", "W3C-19980720") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_only_WITH_Classpath_exception_2_0_W3C_20150513(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only WITH Classpath-exception-2.0", "W3C-20150513") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_only_WITH_Classpath_exception_2_0_WTFPL(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only WITH Classpath-exception-2.0", "WTFPL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_only_WITH_Classpath_exception_2_0_X11(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only WITH Classpath-exception-2.0", "X11") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_only_WITH_Classpath_exception_2_0_XFree86_1_1(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only WITH Classpath-exception-2.0", "XFree86-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_only_WITH_Classpath_exception_2_0_ZPL_2_0(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only WITH Classpath-exception-2.0", "ZPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_only_WITH_Classpath_exception_2_0_Zlib(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only WITH Classpath-exception-2.0", "Zlib") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_only_WITH_Classpath_exception_2_0_bzip2_1_0_5(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only WITH Classpath-exception-2.0", "bzip2-1.0.5") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_only_WITH_Classpath_exception_2_0_bzip2_1_0_6(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only WITH Classpath-exception-2.0", "bzip2-1.0.6") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_only_WITH_Classpath_exception_2_0_curl(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only WITH Classpath-exception-2.0", "curl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_only_WITH_Classpath_exception_2_0_libtiff(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only WITH Classpath-exception-2.0", "libtiff") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_2_0_only_WITH_Classpath_exception_2_0_zlib_acknowledgement(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-only WITH Classpath-exception-2.0", "zlib-acknowledgement") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_or_later_0BSD(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-or-later", "0BSD") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_2_0_or_later_AFL_2_0(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-or-later", "AFL-2.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_2_0_or_later_AFL_2_1(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-or-later", "AFL-2.1") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_2_0_or_later_AFL_3_0(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-or-later", "AFL-3.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_2_0_or_later_AGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-or-later", "AGPL-3.0-only") == osadl_matrix.OSADLCompatibility.CHECKDEP
    

    def test_GPL_2_0_or_later_AGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-or-later", "AGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.CHECKDEP
    

    def test_GPL_2_0_or_later_Apache_1_0(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-or-later", "Apache-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_or_later_Apache_1_1(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-or-later", "Apache-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_or_later_Apache_2_0(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-or-later", "Apache-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_or_later_Artistic_1_0(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-or-later", "Artistic-1.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_2_0_or_later_Artistic_1_0_Perl(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-or-later", "Artistic-1.0-Perl") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_2_0_or_later_Artistic_2_0(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-or-later", "Artistic-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_or_later_BSD_1_Clause(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-or-later", "BSD-1-Clause") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_2_0_or_later_BSD_2_Clause(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-or-later", "BSD-2-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_or_later_BSD_2_Clause_Patent(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-or-later", "BSD-2-Clause-Patent") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_or_later_BSD_3_Clause(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-or-later", "BSD-3-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_or_later_BSD_4_Clause(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-or-later", "BSD-4-Clause") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_or_later_BSD_4_Clause_UC(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-or-later", "BSD-4-Clause-UC") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_or_later_BSD_Source_Code(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-or-later", "BSD-Source-Code") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_2_0_or_later_BSL_1_0(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-or-later", "BSL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_or_later_CC0_1_0(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-or-later", "CC0-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_or_later_CDDL_1_0(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-or-later", "CDDL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_or_later_CDDL_1_1(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-or-later", "CDDL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_or_later_CPL_1_0(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-or-later", "CPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_or_later_EFL_2_0(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-or-later", "EFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_or_later_EPL_1_0(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-or-later", "EPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_or_later_EPL_2_0(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-or-later", "EPL-2.0") == osadl_matrix.OSADLCompatibility.CHECKDEP
    

    def test_GPL_2_0_or_later_EUPL_1_1(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-or-later", "EUPL-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_or_later_EUPL_1_2(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-or-later", "EUPL-1.2") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_or_later_FSFAP(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-or-later", "FSFAP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_or_later_FSFULLR(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-or-later", "FSFULLR") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_or_later_FTL(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-or-later", "FTL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_or_later_GPL_1_0_only(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-or-later", "GPL-1.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_or_later_GPL_1_0_or_later(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-or-later", "GPL-1.0-or-later") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_or_later_GPL_2_0_only(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-or-later", "GPL-2.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_or_later_GPL_2_0_only_WITH_Classpath_exception_2_0(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-or-later", "GPL-2.0-only WITH Classpath-exception-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_or_later_GPL_2_0_or_later(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-or-later", "GPL-2.0-or-later") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_or_later_GPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-or-later", "GPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_or_later_GPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-or-later", "GPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_or_later_HPND(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-or-later", "HPND") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_2_0_or_later_IBM_pibs(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-or-later", "IBM-pibs") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_or_later_ICU(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-or-later", "ICU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_or_later_IJG(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-or-later", "IJG") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_or_later_IPL_1_0(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-or-later", "IPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_or_later_ISC(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-or-later", "ISC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_or_later_Info_ZIP(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-or-later", "Info-ZIP") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_2_0_or_later_LGPL_2_1_only(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-or-later", "LGPL-2.1-only") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_or_later_LGPL_2_1_or_later(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-or-later", "LGPL-2.1-or-later") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_or_later_LGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-or-later", "LGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_or_later_LGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-or-later", "LGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_or_later_Libpng(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-or-later", "Libpng") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_or_later_MIT(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-or-later", "MIT") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_or_later_MIT_CMU(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-or-later", "MIT-CMU") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_2_0_or_later_MPL_1_1(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-or-later", "MPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_or_later_MPL_2_0(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-or-later", "MPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_or_later_MPL_2_0_no_copyleft_exception(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-or-later", "MPL-2.0-no-copyleft-exception") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_or_later_MS_PL(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-or-later", "MS-PL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_2_0_or_later_MS_RL(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-or-later", "MS-RL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_or_later_MirOS(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-or-later", "MirOS") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_2_0_or_later_NBPL_1_0(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-or-later", "NBPL-1.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_2_0_or_later_NTP(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-or-later", "NTP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_or_later_OSL_3_0(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-or-later", "OSL-3.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_or_later_OpenSSL(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-or-later", "OpenSSL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_or_later_PHP_3_01(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-or-later", "PHP-3.01") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_2_0_or_later_PostgreSQL(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-or-later", "PostgreSQL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_2_0_or_later_Python_2_0(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-or-later", "Python-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_or_later_Qhull(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-or-later", "Qhull") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_2_0_or_later_RSA_MD(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-or-later", "RSA-MD") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_2_0_or_later_Sleepycat(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-or-later", "Sleepycat") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_or_later_SunPro(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-or-later", "SunPro") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_2_0_or_later_UPL_1_0(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-or-later", "UPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_or_later_Unicode_DFS_2015(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-or-later", "Unicode-DFS-2015") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_2_0_or_later_Unicode_DFS_2016(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-or-later", "Unicode-DFS-2016") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_2_0_or_later_Unlicense(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-or-later", "Unlicense") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_or_later_W3C(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-or-later", "W3C") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_or_later_W3C_19980720(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-or-later", "W3C-19980720") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_or_later_W3C_20150513(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-or-later", "W3C-20150513") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_or_later_WTFPL(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-or-later", "WTFPL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_or_later_X11(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-or-later", "X11") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_or_later_XFree86_1_1(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-or-later", "XFree86-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_2_0_or_later_ZPL_2_0(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-or-later", "ZPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_or_later_Zlib(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-or-later", "Zlib") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_or_later_bzip2_1_0_5(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-or-later", "bzip2-1.0.5") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_or_later_bzip2_1_0_6(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-or-later", "bzip2-1.0.6") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_or_later_curl(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-or-later", "curl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_2_0_or_later_libtiff(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-or-later", "libtiff") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_2_0_or_later_zlib_acknowledgement(self):        
        assert osadl_matrix.get_compatibility("GPL-2.0-or-later", "zlib-acknowledgement") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_3_0_only_0BSD(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-only", "0BSD") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_3_0_only_AFL_2_0(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-only", "AFL-2.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_3_0_only_AFL_2_1(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-only", "AFL-2.1") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_3_0_only_AFL_3_0(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-only", "AFL-3.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_3_0_only_AGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-only", "AGPL-3.0-only") == osadl_matrix.OSADLCompatibility.CHECKDEP
    

    def test_GPL_3_0_only_AGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-only", "AGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.CHECKDEP
    

    def test_GPL_3_0_only_Apache_1_0(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-only", "Apache-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_3_0_only_Apache_1_1(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-only", "Apache-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_3_0_only_Apache_2_0(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-only", "Apache-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_3_0_only_Artistic_1_0(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-only", "Artistic-1.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_3_0_only_Artistic_1_0_Perl(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-only", "Artistic-1.0-Perl") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_3_0_only_Artistic_2_0(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-only", "Artistic-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_3_0_only_BSD_1_Clause(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-only", "BSD-1-Clause") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_3_0_only_BSD_2_Clause(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-only", "BSD-2-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_3_0_only_BSD_2_Clause_Patent(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-only", "BSD-2-Clause-Patent") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_3_0_only_BSD_3_Clause(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-only", "BSD-3-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_3_0_only_BSD_4_Clause(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-only", "BSD-4-Clause") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_3_0_only_BSD_4_Clause_UC(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-only", "BSD-4-Clause-UC") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_3_0_only_BSD_Source_Code(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-only", "BSD-Source-Code") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_3_0_only_BSL_1_0(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-only", "BSL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_3_0_only_CC0_1_0(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-only", "CC0-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_3_0_only_CDDL_1_0(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-only", "CDDL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_3_0_only_CDDL_1_1(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-only", "CDDL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_3_0_only_CPL_1_0(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-only", "CPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_3_0_only_EFL_2_0(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-only", "EFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_3_0_only_EPL_1_0(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-only", "EPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_3_0_only_EPL_2_0(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-only", "EPL-2.0") == osadl_matrix.OSADLCompatibility.CHECKDEP
    

    def test_GPL_3_0_only_EUPL_1_1(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-only", "EUPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_3_0_only_EUPL_1_2(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-only", "EUPL-1.2") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_3_0_only_FSFAP(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-only", "FSFAP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_3_0_only_FSFULLR(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-only", "FSFULLR") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_3_0_only_FTL(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-only", "FTL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_3_0_only_GPL_1_0_only(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-only", "GPL-1.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_3_0_only_GPL_1_0_or_later(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-only", "GPL-1.0-or-later") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_3_0_only_GPL_2_0_only(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-only", "GPL-2.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_3_0_only_GPL_2_0_only_WITH_Classpath_exception_2_0(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-only", "GPL-2.0-only WITH Classpath-exception-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_3_0_only_GPL_2_0_or_later(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-only", "GPL-2.0-or-later") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_3_0_only_GPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-only", "GPL-3.0-only") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_3_0_only_GPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-only", "GPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_3_0_only_HPND(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-only", "HPND") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_3_0_only_IBM_pibs(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-only", "IBM-pibs") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_3_0_only_ICU(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-only", "ICU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_3_0_only_IJG(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-only", "IJG") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_3_0_only_IPL_1_0(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-only", "IPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_3_0_only_ISC(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-only", "ISC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_3_0_only_Info_ZIP(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-only", "Info-ZIP") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_3_0_only_LGPL_2_1_only(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-only", "LGPL-2.1-only") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_3_0_only_LGPL_2_1_or_later(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-only", "LGPL-2.1-or-later") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_3_0_only_LGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-only", "LGPL-3.0-only") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_3_0_only_LGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-only", "LGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_3_0_only_Libpng(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-only", "Libpng") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_3_0_only_MIT(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-only", "MIT") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_3_0_only_MIT_CMU(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-only", "MIT-CMU") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_3_0_only_MPL_1_1(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-only", "MPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_3_0_only_MPL_2_0(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-only", "MPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_3_0_only_MPL_2_0_no_copyleft_exception(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-only", "MPL-2.0-no-copyleft-exception") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_3_0_only_MS_PL(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-only", "MS-PL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_3_0_only_MS_RL(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-only", "MS-RL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_3_0_only_MirOS(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-only", "MirOS") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_3_0_only_NBPL_1_0(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-only", "NBPL-1.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_3_0_only_NTP(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-only", "NTP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_3_0_only_OSL_3_0(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-only", "OSL-3.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_3_0_only_OpenSSL(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-only", "OpenSSL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_3_0_only_PHP_3_01(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-only", "PHP-3.01") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_3_0_only_PostgreSQL(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-only", "PostgreSQL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_3_0_only_Python_2_0(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-only", "Python-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_3_0_only_Qhull(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-only", "Qhull") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_3_0_only_RSA_MD(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-only", "RSA-MD") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_3_0_only_Sleepycat(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-only", "Sleepycat") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_3_0_only_SunPro(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-only", "SunPro") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_3_0_only_UPL_1_0(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-only", "UPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_3_0_only_Unicode_DFS_2015(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-only", "Unicode-DFS-2015") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_3_0_only_Unicode_DFS_2016(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-only", "Unicode-DFS-2016") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_3_0_only_Unlicense(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-only", "Unlicense") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_3_0_only_W3C(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-only", "W3C") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_3_0_only_W3C_19980720(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-only", "W3C-19980720") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_3_0_only_W3C_20150513(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-only", "W3C-20150513") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_3_0_only_WTFPL(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-only", "WTFPL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_3_0_only_X11(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-only", "X11") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_3_0_only_XFree86_1_1(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-only", "XFree86-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_3_0_only_ZPL_2_0(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-only", "ZPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_3_0_only_Zlib(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-only", "Zlib") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_3_0_only_bzip2_1_0_5(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-only", "bzip2-1.0.5") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_3_0_only_bzip2_1_0_6(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-only", "bzip2-1.0.6") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_3_0_only_curl(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-only", "curl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_3_0_only_libtiff(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-only", "libtiff") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_3_0_only_zlib_acknowledgement(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-only", "zlib-acknowledgement") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_3_0_or_later_0BSD(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-or-later", "0BSD") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_3_0_or_later_AFL_2_0(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-or-later", "AFL-2.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_3_0_or_later_AFL_2_1(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-or-later", "AFL-2.1") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_3_0_or_later_AFL_3_0(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-or-later", "AFL-3.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_3_0_or_later_AGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-or-later", "AGPL-3.0-only") == osadl_matrix.OSADLCompatibility.CHECKDEP
    

    def test_GPL_3_0_or_later_AGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-or-later", "AGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.CHECKDEP
    

    def test_GPL_3_0_or_later_Apache_1_0(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-or-later", "Apache-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_3_0_or_later_Apache_1_1(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-or-later", "Apache-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_3_0_or_later_Apache_2_0(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-or-later", "Apache-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_3_0_or_later_Artistic_1_0(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-or-later", "Artistic-1.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_3_0_or_later_Artistic_1_0_Perl(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-or-later", "Artistic-1.0-Perl") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_3_0_or_later_Artistic_2_0(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-or-later", "Artistic-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_3_0_or_later_BSD_1_Clause(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-or-later", "BSD-1-Clause") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_3_0_or_later_BSD_2_Clause(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-or-later", "BSD-2-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_3_0_or_later_BSD_2_Clause_Patent(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-or-later", "BSD-2-Clause-Patent") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_3_0_or_later_BSD_3_Clause(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-or-later", "BSD-3-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_3_0_or_later_BSD_4_Clause(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-or-later", "BSD-4-Clause") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_3_0_or_later_BSD_4_Clause_UC(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-or-later", "BSD-4-Clause-UC") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_3_0_or_later_BSD_Source_Code(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-or-later", "BSD-Source-Code") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_3_0_or_later_BSL_1_0(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-or-later", "BSL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_3_0_or_later_CC0_1_0(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-or-later", "CC0-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_3_0_or_later_CDDL_1_0(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-or-later", "CDDL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_3_0_or_later_CDDL_1_1(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-or-later", "CDDL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_3_0_or_later_CPL_1_0(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-or-later", "CPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_3_0_or_later_EFL_2_0(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-or-later", "EFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_3_0_or_later_EPL_1_0(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-or-later", "EPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_3_0_or_later_EPL_2_0(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-or-later", "EPL-2.0") == osadl_matrix.OSADLCompatibility.CHECKDEP
    

    def test_GPL_3_0_or_later_EUPL_1_1(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-or-later", "EUPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_3_0_or_later_EUPL_1_2(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-or-later", "EUPL-1.2") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_3_0_or_later_FSFAP(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-or-later", "FSFAP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_3_0_or_later_FSFULLR(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-or-later", "FSFULLR") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_3_0_or_later_FTL(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-or-later", "FTL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_3_0_or_later_GPL_1_0_only(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-or-later", "GPL-1.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_3_0_or_later_GPL_1_0_or_later(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-or-later", "GPL-1.0-or-later") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_3_0_or_later_GPL_2_0_only(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-or-later", "GPL-2.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_3_0_or_later_GPL_2_0_only_WITH_Classpath_exception_2_0(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-or-later", "GPL-2.0-only WITH Classpath-exception-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_3_0_or_later_GPL_2_0_or_later(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-or-later", "GPL-2.0-or-later") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_3_0_or_later_GPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-or-later", "GPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_3_0_or_later_GPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-or-later", "GPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_3_0_or_later_HPND(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-or-later", "HPND") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_3_0_or_later_IBM_pibs(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-or-later", "IBM-pibs") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_3_0_or_later_ICU(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-or-later", "ICU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_3_0_or_later_IJG(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-or-later", "IJG") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_3_0_or_later_IPL_1_0(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-or-later", "IPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_3_0_or_later_ISC(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-or-later", "ISC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_3_0_or_later_Info_ZIP(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-or-later", "Info-ZIP") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_3_0_or_later_LGPL_2_1_only(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-or-later", "LGPL-2.1-only") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_3_0_or_later_LGPL_2_1_or_later(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-or-later", "LGPL-2.1-or-later") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_3_0_or_later_LGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-or-later", "LGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_3_0_or_later_LGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-or-later", "LGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_3_0_or_later_Libpng(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-or-later", "Libpng") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_3_0_or_later_MIT(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-or-later", "MIT") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_3_0_or_later_MIT_CMU(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-or-later", "MIT-CMU") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_3_0_or_later_MPL_1_1(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-or-later", "MPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_3_0_or_later_MPL_2_0(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-or-later", "MPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_3_0_or_later_MPL_2_0_no_copyleft_exception(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-or-later", "MPL-2.0-no-copyleft-exception") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_3_0_or_later_MS_PL(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-or-later", "MS-PL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_3_0_or_later_MS_RL(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-or-later", "MS-RL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_3_0_or_later_MirOS(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-or-later", "MirOS") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_3_0_or_later_NBPL_1_0(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-or-later", "NBPL-1.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_3_0_or_later_NTP(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-or-later", "NTP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_3_0_or_later_OSL_3_0(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-or-later", "OSL-3.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_3_0_or_later_OpenSSL(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-or-later", "OpenSSL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_3_0_or_later_PHP_3_01(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-or-later", "PHP-3.01") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_3_0_or_later_PostgreSQL(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-or-later", "PostgreSQL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_3_0_or_later_Python_2_0(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-or-later", "Python-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_3_0_or_later_Qhull(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-or-later", "Qhull") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_3_0_or_later_RSA_MD(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-or-later", "RSA-MD") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_3_0_or_later_Sleepycat(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-or-later", "Sleepycat") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_3_0_or_later_SunPro(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-or-later", "SunPro") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_3_0_or_later_UPL_1_0(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-or-later", "UPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_3_0_or_later_Unicode_DFS_2015(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-or-later", "Unicode-DFS-2015") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_3_0_or_later_Unicode_DFS_2016(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-or-later", "Unicode-DFS-2016") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_3_0_or_later_Unlicense(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-or-later", "Unlicense") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_3_0_or_later_W3C(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-or-later", "W3C") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_3_0_or_later_W3C_19980720(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-or-later", "W3C-19980720") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_3_0_or_later_W3C_20150513(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-or-later", "W3C-20150513") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_3_0_or_later_WTFPL(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-or-later", "WTFPL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_3_0_or_later_X11(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-or-later", "X11") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_3_0_or_later_XFree86_1_1(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-or-later", "XFree86-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_GPL_3_0_or_later_ZPL_2_0(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-or-later", "ZPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_3_0_or_later_Zlib(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-or-later", "Zlib") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_3_0_or_later_bzip2_1_0_5(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-or-later", "bzip2-1.0.5") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_3_0_or_later_bzip2_1_0_6(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-or-later", "bzip2-1.0.6") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_3_0_or_later_curl(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-or-later", "curl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_GPL_3_0_or_later_libtiff(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-or-later", "libtiff") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_GPL_3_0_or_later_zlib_acknowledgement(self):        
        assert osadl_matrix.get_compatibility("GPL-3.0-or-later", "zlib-acknowledgement") == osadl_matrix.OSADLCompatibility.NO
    

    def test_HPND_0BSD(self):        
        assert osadl_matrix.get_compatibility("HPND", "0BSD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_HPND_AFL_2_0(self):        
        assert osadl_matrix.get_compatibility("HPND", "AFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_HPND_AFL_2_1(self):        
        assert osadl_matrix.get_compatibility("HPND", "AFL-2.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_HPND_AFL_3_0(self):        
        assert osadl_matrix.get_compatibility("HPND", "AFL-3.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_HPND_AGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("HPND", "AGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_HPND_AGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("HPND", "AGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_HPND_Apache_1_0(self):        
        assert osadl_matrix.get_compatibility("HPND", "Apache-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_HPND_Apache_1_1(self):        
        assert osadl_matrix.get_compatibility("HPND", "Apache-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_HPND_Apache_2_0(self):        
        assert osadl_matrix.get_compatibility("HPND", "Apache-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_HPND_Artistic_1_0(self):        
        assert osadl_matrix.get_compatibility("HPND", "Artistic-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_HPND_Artistic_1_0_Perl(self):        
        assert osadl_matrix.get_compatibility("HPND", "Artistic-1.0-Perl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_HPND_Artistic_2_0(self):        
        assert osadl_matrix.get_compatibility("HPND", "Artistic-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_HPND_BSD_1_Clause(self):        
        assert osadl_matrix.get_compatibility("HPND", "BSD-1-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_HPND_BSD_2_Clause(self):        
        assert osadl_matrix.get_compatibility("HPND", "BSD-2-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_HPND_BSD_2_Clause_Patent(self):        
        assert osadl_matrix.get_compatibility("HPND", "BSD-2-Clause-Patent") == osadl_matrix.OSADLCompatibility.YES
    

    def test_HPND_BSD_3_Clause(self):        
        assert osadl_matrix.get_compatibility("HPND", "BSD-3-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_HPND_BSD_4_Clause(self):        
        assert osadl_matrix.get_compatibility("HPND", "BSD-4-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_HPND_BSD_4_Clause_UC(self):        
        assert osadl_matrix.get_compatibility("HPND", "BSD-4-Clause-UC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_HPND_BSD_Source_Code(self):        
        assert osadl_matrix.get_compatibility("HPND", "BSD-Source-Code") == osadl_matrix.OSADLCompatibility.YES
    

    def test_HPND_BSL_1_0(self):        
        assert osadl_matrix.get_compatibility("HPND", "BSL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_HPND_CC0_1_0(self):        
        assert osadl_matrix.get_compatibility("HPND", "CC0-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_HPND_CDDL_1_0(self):        
        assert osadl_matrix.get_compatibility("HPND", "CDDL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_HPND_CDDL_1_1(self):        
        assert osadl_matrix.get_compatibility("HPND", "CDDL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_HPND_CPL_1_0(self):        
        assert osadl_matrix.get_compatibility("HPND", "CPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_HPND_EFL_2_0(self):        
        assert osadl_matrix.get_compatibility("HPND", "EFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_HPND_EPL_1_0(self):        
        assert osadl_matrix.get_compatibility("HPND", "EPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_HPND_EPL_2_0(self):        
        assert osadl_matrix.get_compatibility("HPND", "EPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_HPND_EUPL_1_1(self):        
        assert osadl_matrix.get_compatibility("HPND", "EUPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_HPND_EUPL_1_2(self):        
        assert osadl_matrix.get_compatibility("HPND", "EUPL-1.2") == osadl_matrix.OSADLCompatibility.NO
    

    def test_HPND_FSFAP(self):        
        assert osadl_matrix.get_compatibility("HPND", "FSFAP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_HPND_FSFULLR(self):        
        assert osadl_matrix.get_compatibility("HPND", "FSFULLR") == osadl_matrix.OSADLCompatibility.YES
    

    def test_HPND_FTL(self):        
        assert osadl_matrix.get_compatibility("HPND", "FTL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_HPND_GPL_1_0_only(self):        
        assert osadl_matrix.get_compatibility("HPND", "GPL-1.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_HPND_GPL_1_0_or_later(self):        
        assert osadl_matrix.get_compatibility("HPND", "GPL-1.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_HPND_GPL_2_0_only(self):        
        assert osadl_matrix.get_compatibility("HPND", "GPL-2.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_HPND_GPL_2_0_only_WITH_Classpath_exception_2_0(self):        
        assert osadl_matrix.get_compatibility("HPND", "GPL-2.0-only WITH Classpath-exception-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_HPND_GPL_2_0_or_later(self):        
        assert osadl_matrix.get_compatibility("HPND", "GPL-2.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_HPND_GPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("HPND", "GPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_HPND_GPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("HPND", "GPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_HPND_HPND(self):        
        assert osadl_matrix.get_compatibility("HPND", "HPND") == osadl_matrix.OSADLCompatibility.YES
    

    def test_HPND_IBM_pibs(self):        
        assert osadl_matrix.get_compatibility("HPND", "IBM-pibs") == osadl_matrix.OSADLCompatibility.YES
    

    def test_HPND_ICU(self):        
        assert osadl_matrix.get_compatibility("HPND", "ICU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_HPND_IJG(self):        
        assert osadl_matrix.get_compatibility("HPND", "IJG") == osadl_matrix.OSADLCompatibility.YES
    

    def test_HPND_IPL_1_0(self):        
        assert osadl_matrix.get_compatibility("HPND", "IPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_HPND_ISC(self):        
        assert osadl_matrix.get_compatibility("HPND", "ISC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_HPND_Info_ZIP(self):        
        assert osadl_matrix.get_compatibility("HPND", "Info-ZIP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_HPND_LGPL_2_1_only(self):        
        assert osadl_matrix.get_compatibility("HPND", "LGPL-2.1-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_HPND_LGPL_2_1_or_later(self):        
        assert osadl_matrix.get_compatibility("HPND", "LGPL-2.1-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_HPND_LGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("HPND", "LGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_HPND_LGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("HPND", "LGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_HPND_Libpng(self):        
        assert osadl_matrix.get_compatibility("HPND", "Libpng") == osadl_matrix.OSADLCompatibility.YES
    

    def test_HPND_MIT(self):        
        assert osadl_matrix.get_compatibility("HPND", "MIT") == osadl_matrix.OSADLCompatibility.YES
    

    def test_HPND_MIT_CMU(self):        
        assert osadl_matrix.get_compatibility("HPND", "MIT-CMU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_HPND_MPL_1_1(self):        
        assert osadl_matrix.get_compatibility("HPND", "MPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_HPND_MPL_2_0(self):        
        assert osadl_matrix.get_compatibility("HPND", "MPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_HPND_MPL_2_0_no_copyleft_exception(self):        
        assert osadl_matrix.get_compatibility("HPND", "MPL-2.0-no-copyleft-exception") == osadl_matrix.OSADLCompatibility.NO
    

    def test_HPND_MS_PL(self):        
        assert osadl_matrix.get_compatibility("HPND", "MS-PL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_HPND_MS_RL(self):        
        assert osadl_matrix.get_compatibility("HPND", "MS-RL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_HPND_MirOS(self):        
        assert osadl_matrix.get_compatibility("HPND", "MirOS") == osadl_matrix.OSADLCompatibility.YES
    

    def test_HPND_NBPL_1_0(self):        
        assert osadl_matrix.get_compatibility("HPND", "NBPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_HPND_NTP(self):        
        assert osadl_matrix.get_compatibility("HPND", "NTP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_HPND_OSL_3_0(self):        
        assert osadl_matrix.get_compatibility("HPND", "OSL-3.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_HPND_OpenSSL(self):        
        assert osadl_matrix.get_compatibility("HPND", "OpenSSL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_HPND_PHP_3_01(self):        
        assert osadl_matrix.get_compatibility("HPND", "PHP-3.01") == osadl_matrix.OSADLCompatibility.YES
    

    def test_HPND_PostgreSQL(self):        
        assert osadl_matrix.get_compatibility("HPND", "PostgreSQL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_HPND_Python_2_0(self):        
        assert osadl_matrix.get_compatibility("HPND", "Python-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_HPND_Qhull(self):        
        assert osadl_matrix.get_compatibility("HPND", "Qhull") == osadl_matrix.OSADLCompatibility.YES
    

    def test_HPND_RSA_MD(self):        
        assert osadl_matrix.get_compatibility("HPND", "RSA-MD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_HPND_Sleepycat(self):        
        assert osadl_matrix.get_compatibility("HPND", "Sleepycat") == osadl_matrix.OSADLCompatibility.NO
    

    def test_HPND_SunPro(self):        
        assert osadl_matrix.get_compatibility("HPND", "SunPro") == osadl_matrix.OSADLCompatibility.YES
    

    def test_HPND_UPL_1_0(self):        
        assert osadl_matrix.get_compatibility("HPND", "UPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_HPND_Unicode_DFS_2015(self):        
        assert osadl_matrix.get_compatibility("HPND", "Unicode-DFS-2015") == osadl_matrix.OSADLCompatibility.YES
    

    def test_HPND_Unicode_DFS_2016(self):        
        assert osadl_matrix.get_compatibility("HPND", "Unicode-DFS-2016") == osadl_matrix.OSADLCompatibility.YES
    

    def test_HPND_Unlicense(self):        
        assert osadl_matrix.get_compatibility("HPND", "Unlicense") == osadl_matrix.OSADLCompatibility.YES
    

    def test_HPND_W3C(self):        
        assert osadl_matrix.get_compatibility("HPND", "W3C") == osadl_matrix.OSADLCompatibility.YES
    

    def test_HPND_W3C_19980720(self):        
        assert osadl_matrix.get_compatibility("HPND", "W3C-19980720") == osadl_matrix.OSADLCompatibility.YES
    

    def test_HPND_W3C_20150513(self):        
        assert osadl_matrix.get_compatibility("HPND", "W3C-20150513") == osadl_matrix.OSADLCompatibility.YES
    

    def test_HPND_WTFPL(self):        
        assert osadl_matrix.get_compatibility("HPND", "WTFPL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_HPND_X11(self):        
        assert osadl_matrix.get_compatibility("HPND", "X11") == osadl_matrix.OSADLCompatibility.YES
    

    def test_HPND_XFree86_1_1(self):        
        assert osadl_matrix.get_compatibility("HPND", "XFree86-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_HPND_ZPL_2_0(self):        
        assert osadl_matrix.get_compatibility("HPND", "ZPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_HPND_Zlib(self):        
        assert osadl_matrix.get_compatibility("HPND", "Zlib") == osadl_matrix.OSADLCompatibility.YES
    

    def test_HPND_bzip2_1_0_5(self):        
        assert osadl_matrix.get_compatibility("HPND", "bzip2-1.0.5") == osadl_matrix.OSADLCompatibility.YES
    

    def test_HPND_bzip2_1_0_6(self):        
        assert osadl_matrix.get_compatibility("HPND", "bzip2-1.0.6") == osadl_matrix.OSADLCompatibility.YES
    

    def test_HPND_curl(self):        
        assert osadl_matrix.get_compatibility("HPND", "curl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_HPND_libtiff(self):        
        assert osadl_matrix.get_compatibility("HPND", "libtiff") == osadl_matrix.OSADLCompatibility.YES
    

    def test_HPND_zlib_acknowledgement(self):        
        assert osadl_matrix.get_compatibility("HPND", "zlib-acknowledgement") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IBM_pibs_0BSD(self):        
        assert osadl_matrix.get_compatibility("IBM-pibs", "0BSD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IBM_pibs_AFL_2_0(self):        
        assert osadl_matrix.get_compatibility("IBM-pibs", "AFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IBM_pibs_AFL_2_1(self):        
        assert osadl_matrix.get_compatibility("IBM-pibs", "AFL-2.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IBM_pibs_AFL_3_0(self):        
        assert osadl_matrix.get_compatibility("IBM-pibs", "AFL-3.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IBM_pibs_AGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("IBM-pibs", "AGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_IBM_pibs_AGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("IBM-pibs", "AGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_IBM_pibs_Apache_1_0(self):        
        assert osadl_matrix.get_compatibility("IBM-pibs", "Apache-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IBM_pibs_Apache_1_1(self):        
        assert osadl_matrix.get_compatibility("IBM-pibs", "Apache-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IBM_pibs_Apache_2_0(self):        
        assert osadl_matrix.get_compatibility("IBM-pibs", "Apache-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IBM_pibs_Artistic_1_0(self):        
        assert osadl_matrix.get_compatibility("IBM-pibs", "Artistic-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IBM_pibs_Artistic_1_0_Perl(self):        
        assert osadl_matrix.get_compatibility("IBM-pibs", "Artistic-1.0-Perl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IBM_pibs_Artistic_2_0(self):        
        assert osadl_matrix.get_compatibility("IBM-pibs", "Artistic-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IBM_pibs_BSD_1_Clause(self):        
        assert osadl_matrix.get_compatibility("IBM-pibs", "BSD-1-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IBM_pibs_BSD_2_Clause(self):        
        assert osadl_matrix.get_compatibility("IBM-pibs", "BSD-2-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IBM_pibs_BSD_2_Clause_Patent(self):        
        assert osadl_matrix.get_compatibility("IBM-pibs", "BSD-2-Clause-Patent") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IBM_pibs_BSD_3_Clause(self):        
        assert osadl_matrix.get_compatibility("IBM-pibs", "BSD-3-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IBM_pibs_BSD_4_Clause(self):        
        assert osadl_matrix.get_compatibility("IBM-pibs", "BSD-4-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IBM_pibs_BSD_4_Clause_UC(self):        
        assert osadl_matrix.get_compatibility("IBM-pibs", "BSD-4-Clause-UC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IBM_pibs_BSD_Source_Code(self):        
        assert osadl_matrix.get_compatibility("IBM-pibs", "BSD-Source-Code") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IBM_pibs_BSL_1_0(self):        
        assert osadl_matrix.get_compatibility("IBM-pibs", "BSL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IBM_pibs_CC0_1_0(self):        
        assert osadl_matrix.get_compatibility("IBM-pibs", "CC0-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IBM_pibs_CDDL_1_0(self):        
        assert osadl_matrix.get_compatibility("IBM-pibs", "CDDL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_IBM_pibs_CDDL_1_1(self):        
        assert osadl_matrix.get_compatibility("IBM-pibs", "CDDL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_IBM_pibs_CPL_1_0(self):        
        assert osadl_matrix.get_compatibility("IBM-pibs", "CPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_IBM_pibs_EFL_2_0(self):        
        assert osadl_matrix.get_compatibility("IBM-pibs", "EFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IBM_pibs_EPL_1_0(self):        
        assert osadl_matrix.get_compatibility("IBM-pibs", "EPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_IBM_pibs_EPL_2_0(self):        
        assert osadl_matrix.get_compatibility("IBM-pibs", "EPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_IBM_pibs_EUPL_1_1(self):        
        assert osadl_matrix.get_compatibility("IBM-pibs", "EUPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_IBM_pibs_EUPL_1_2(self):        
        assert osadl_matrix.get_compatibility("IBM-pibs", "EUPL-1.2") == osadl_matrix.OSADLCompatibility.NO
    

    def test_IBM_pibs_FSFAP(self):        
        assert osadl_matrix.get_compatibility("IBM-pibs", "FSFAP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IBM_pibs_FSFULLR(self):        
        assert osadl_matrix.get_compatibility("IBM-pibs", "FSFULLR") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IBM_pibs_FTL(self):        
        assert osadl_matrix.get_compatibility("IBM-pibs", "FTL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IBM_pibs_GPL_1_0_only(self):        
        assert osadl_matrix.get_compatibility("IBM-pibs", "GPL-1.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_IBM_pibs_GPL_1_0_or_later(self):        
        assert osadl_matrix.get_compatibility("IBM-pibs", "GPL-1.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_IBM_pibs_GPL_2_0_only(self):        
        assert osadl_matrix.get_compatibility("IBM-pibs", "GPL-2.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_IBM_pibs_GPL_2_0_only_WITH_Classpath_exception_2_0(self):        
        assert osadl_matrix.get_compatibility("IBM-pibs", "GPL-2.0-only WITH Classpath-exception-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_IBM_pibs_GPL_2_0_or_later(self):        
        assert osadl_matrix.get_compatibility("IBM-pibs", "GPL-2.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_IBM_pibs_GPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("IBM-pibs", "GPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_IBM_pibs_GPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("IBM-pibs", "GPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_IBM_pibs_HPND(self):        
        assert osadl_matrix.get_compatibility("IBM-pibs", "HPND") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IBM_pibs_IBM_pibs(self):        
        assert osadl_matrix.get_compatibility("IBM-pibs", "IBM-pibs") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IBM_pibs_ICU(self):        
        assert osadl_matrix.get_compatibility("IBM-pibs", "ICU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IBM_pibs_IJG(self):        
        assert osadl_matrix.get_compatibility("IBM-pibs", "IJG") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IBM_pibs_IPL_1_0(self):        
        assert osadl_matrix.get_compatibility("IBM-pibs", "IPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_IBM_pibs_ISC(self):        
        assert osadl_matrix.get_compatibility("IBM-pibs", "ISC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IBM_pibs_Info_ZIP(self):        
        assert osadl_matrix.get_compatibility("IBM-pibs", "Info-ZIP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IBM_pibs_LGPL_2_1_only(self):        
        assert osadl_matrix.get_compatibility("IBM-pibs", "LGPL-2.1-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_IBM_pibs_LGPL_2_1_or_later(self):        
        assert osadl_matrix.get_compatibility("IBM-pibs", "LGPL-2.1-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_IBM_pibs_LGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("IBM-pibs", "LGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_IBM_pibs_LGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("IBM-pibs", "LGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_IBM_pibs_Libpng(self):        
        assert osadl_matrix.get_compatibility("IBM-pibs", "Libpng") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IBM_pibs_MIT(self):        
        assert osadl_matrix.get_compatibility("IBM-pibs", "MIT") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IBM_pibs_MIT_CMU(self):        
        assert osadl_matrix.get_compatibility("IBM-pibs", "MIT-CMU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IBM_pibs_MPL_1_1(self):        
        assert osadl_matrix.get_compatibility("IBM-pibs", "MPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_IBM_pibs_MPL_2_0(self):        
        assert osadl_matrix.get_compatibility("IBM-pibs", "MPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_IBM_pibs_MPL_2_0_no_copyleft_exception(self):        
        assert osadl_matrix.get_compatibility("IBM-pibs", "MPL-2.0-no-copyleft-exception") == osadl_matrix.OSADLCompatibility.NO
    

    def test_IBM_pibs_MS_PL(self):        
        assert osadl_matrix.get_compatibility("IBM-pibs", "MS-PL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_IBM_pibs_MS_RL(self):        
        assert osadl_matrix.get_compatibility("IBM-pibs", "MS-RL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_IBM_pibs_MirOS(self):        
        assert osadl_matrix.get_compatibility("IBM-pibs", "MirOS") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IBM_pibs_NBPL_1_0(self):        
        assert osadl_matrix.get_compatibility("IBM-pibs", "NBPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IBM_pibs_NTP(self):        
        assert osadl_matrix.get_compatibility("IBM-pibs", "NTP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IBM_pibs_OSL_3_0(self):        
        assert osadl_matrix.get_compatibility("IBM-pibs", "OSL-3.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_IBM_pibs_OpenSSL(self):        
        assert osadl_matrix.get_compatibility("IBM-pibs", "OpenSSL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_IBM_pibs_PHP_3_01(self):        
        assert osadl_matrix.get_compatibility("IBM-pibs", "PHP-3.01") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IBM_pibs_PostgreSQL(self):        
        assert osadl_matrix.get_compatibility("IBM-pibs", "PostgreSQL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IBM_pibs_Python_2_0(self):        
        assert osadl_matrix.get_compatibility("IBM-pibs", "Python-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IBM_pibs_Qhull(self):        
        assert osadl_matrix.get_compatibility("IBM-pibs", "Qhull") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IBM_pibs_RSA_MD(self):        
        assert osadl_matrix.get_compatibility("IBM-pibs", "RSA-MD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IBM_pibs_Sleepycat(self):        
        assert osadl_matrix.get_compatibility("IBM-pibs", "Sleepycat") == osadl_matrix.OSADLCompatibility.NO
    

    def test_IBM_pibs_SunPro(self):        
        assert osadl_matrix.get_compatibility("IBM-pibs", "SunPro") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IBM_pibs_UPL_1_0(self):        
        assert osadl_matrix.get_compatibility("IBM-pibs", "UPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IBM_pibs_Unicode_DFS_2015(self):        
        assert osadl_matrix.get_compatibility("IBM-pibs", "Unicode-DFS-2015") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IBM_pibs_Unicode_DFS_2016(self):        
        assert osadl_matrix.get_compatibility("IBM-pibs", "Unicode-DFS-2016") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IBM_pibs_Unlicense(self):        
        assert osadl_matrix.get_compatibility("IBM-pibs", "Unlicense") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IBM_pibs_W3C(self):        
        assert osadl_matrix.get_compatibility("IBM-pibs", "W3C") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IBM_pibs_W3C_19980720(self):        
        assert osadl_matrix.get_compatibility("IBM-pibs", "W3C-19980720") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IBM_pibs_W3C_20150513(self):        
        assert osadl_matrix.get_compatibility("IBM-pibs", "W3C-20150513") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IBM_pibs_WTFPL(self):        
        assert osadl_matrix.get_compatibility("IBM-pibs", "WTFPL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IBM_pibs_X11(self):        
        assert osadl_matrix.get_compatibility("IBM-pibs", "X11") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IBM_pibs_XFree86_1_1(self):        
        assert osadl_matrix.get_compatibility("IBM-pibs", "XFree86-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IBM_pibs_ZPL_2_0(self):        
        assert osadl_matrix.get_compatibility("IBM-pibs", "ZPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IBM_pibs_Zlib(self):        
        assert osadl_matrix.get_compatibility("IBM-pibs", "Zlib") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IBM_pibs_bzip2_1_0_5(self):        
        assert osadl_matrix.get_compatibility("IBM-pibs", "bzip2-1.0.5") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IBM_pibs_bzip2_1_0_6(self):        
        assert osadl_matrix.get_compatibility("IBM-pibs", "bzip2-1.0.6") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IBM_pibs_curl(self):        
        assert osadl_matrix.get_compatibility("IBM-pibs", "curl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IBM_pibs_libtiff(self):        
        assert osadl_matrix.get_compatibility("IBM-pibs", "libtiff") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IBM_pibs_zlib_acknowledgement(self):        
        assert osadl_matrix.get_compatibility("IBM-pibs", "zlib-acknowledgement") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ICU_0BSD(self):        
        assert osadl_matrix.get_compatibility("ICU", "0BSD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ICU_AFL_2_0(self):        
        assert osadl_matrix.get_compatibility("ICU", "AFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ICU_AFL_2_1(self):        
        assert osadl_matrix.get_compatibility("ICU", "AFL-2.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ICU_AFL_3_0(self):        
        assert osadl_matrix.get_compatibility("ICU", "AFL-3.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ICU_AGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("ICU", "AGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_ICU_AGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("ICU", "AGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_ICU_Apache_1_0(self):        
        assert osadl_matrix.get_compatibility("ICU", "Apache-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ICU_Apache_1_1(self):        
        assert osadl_matrix.get_compatibility("ICU", "Apache-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ICU_Apache_2_0(self):        
        assert osadl_matrix.get_compatibility("ICU", "Apache-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ICU_Artistic_1_0(self):        
        assert osadl_matrix.get_compatibility("ICU", "Artistic-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ICU_Artistic_1_0_Perl(self):        
        assert osadl_matrix.get_compatibility("ICU", "Artistic-1.0-Perl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ICU_Artistic_2_0(self):        
        assert osadl_matrix.get_compatibility("ICU", "Artistic-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ICU_BSD_1_Clause(self):        
        assert osadl_matrix.get_compatibility("ICU", "BSD-1-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ICU_BSD_2_Clause(self):        
        assert osadl_matrix.get_compatibility("ICU", "BSD-2-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ICU_BSD_2_Clause_Patent(self):        
        assert osadl_matrix.get_compatibility("ICU", "BSD-2-Clause-Patent") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ICU_BSD_3_Clause(self):        
        assert osadl_matrix.get_compatibility("ICU", "BSD-3-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ICU_BSD_4_Clause(self):        
        assert osadl_matrix.get_compatibility("ICU", "BSD-4-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ICU_BSD_4_Clause_UC(self):        
        assert osadl_matrix.get_compatibility("ICU", "BSD-4-Clause-UC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ICU_BSD_Source_Code(self):        
        assert osadl_matrix.get_compatibility("ICU", "BSD-Source-Code") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ICU_BSL_1_0(self):        
        assert osadl_matrix.get_compatibility("ICU", "BSL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ICU_CC0_1_0(self):        
        assert osadl_matrix.get_compatibility("ICU", "CC0-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ICU_CDDL_1_0(self):        
        assert osadl_matrix.get_compatibility("ICU", "CDDL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_ICU_CDDL_1_1(self):        
        assert osadl_matrix.get_compatibility("ICU", "CDDL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_ICU_CPL_1_0(self):        
        assert osadl_matrix.get_compatibility("ICU", "CPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_ICU_EFL_2_0(self):        
        assert osadl_matrix.get_compatibility("ICU", "EFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ICU_EPL_1_0(self):        
        assert osadl_matrix.get_compatibility("ICU", "EPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_ICU_EPL_2_0(self):        
        assert osadl_matrix.get_compatibility("ICU", "EPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_ICU_EUPL_1_1(self):        
        assert osadl_matrix.get_compatibility("ICU", "EUPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_ICU_EUPL_1_2(self):        
        assert osadl_matrix.get_compatibility("ICU", "EUPL-1.2") == osadl_matrix.OSADLCompatibility.NO
    

    def test_ICU_FSFAP(self):        
        assert osadl_matrix.get_compatibility("ICU", "FSFAP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ICU_FSFULLR(self):        
        assert osadl_matrix.get_compatibility("ICU", "FSFULLR") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ICU_FTL(self):        
        assert osadl_matrix.get_compatibility("ICU", "FTL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ICU_GPL_1_0_only(self):        
        assert osadl_matrix.get_compatibility("ICU", "GPL-1.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_ICU_GPL_1_0_or_later(self):        
        assert osadl_matrix.get_compatibility("ICU", "GPL-1.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_ICU_GPL_2_0_only(self):        
        assert osadl_matrix.get_compatibility("ICU", "GPL-2.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_ICU_GPL_2_0_only_WITH_Classpath_exception_2_0(self):        
        assert osadl_matrix.get_compatibility("ICU", "GPL-2.0-only WITH Classpath-exception-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_ICU_GPL_2_0_or_later(self):        
        assert osadl_matrix.get_compatibility("ICU", "GPL-2.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_ICU_GPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("ICU", "GPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_ICU_GPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("ICU", "GPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_ICU_HPND(self):        
        assert osadl_matrix.get_compatibility("ICU", "HPND") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ICU_IBM_pibs(self):        
        assert osadl_matrix.get_compatibility("ICU", "IBM-pibs") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ICU_ICU(self):        
        assert osadl_matrix.get_compatibility("ICU", "ICU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ICU_IJG(self):        
        assert osadl_matrix.get_compatibility("ICU", "IJG") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ICU_IPL_1_0(self):        
        assert osadl_matrix.get_compatibility("ICU", "IPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_ICU_ISC(self):        
        assert osadl_matrix.get_compatibility("ICU", "ISC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ICU_Info_ZIP(self):        
        assert osadl_matrix.get_compatibility("ICU", "Info-ZIP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ICU_LGPL_2_1_only(self):        
        assert osadl_matrix.get_compatibility("ICU", "LGPL-2.1-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_ICU_LGPL_2_1_or_later(self):        
        assert osadl_matrix.get_compatibility("ICU", "LGPL-2.1-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_ICU_LGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("ICU", "LGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_ICU_LGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("ICU", "LGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_ICU_Libpng(self):        
        assert osadl_matrix.get_compatibility("ICU", "Libpng") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ICU_MIT(self):        
        assert osadl_matrix.get_compatibility("ICU", "MIT") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ICU_MIT_CMU(self):        
        assert osadl_matrix.get_compatibility("ICU", "MIT-CMU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ICU_MPL_1_1(self):        
        assert osadl_matrix.get_compatibility("ICU", "MPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_ICU_MPL_2_0(self):        
        assert osadl_matrix.get_compatibility("ICU", "MPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_ICU_MPL_2_0_no_copyleft_exception(self):        
        assert osadl_matrix.get_compatibility("ICU", "MPL-2.0-no-copyleft-exception") == osadl_matrix.OSADLCompatibility.NO
    

    def test_ICU_MS_PL(self):        
        assert osadl_matrix.get_compatibility("ICU", "MS-PL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_ICU_MS_RL(self):        
        assert osadl_matrix.get_compatibility("ICU", "MS-RL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_ICU_MirOS(self):        
        assert osadl_matrix.get_compatibility("ICU", "MirOS") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ICU_NBPL_1_0(self):        
        assert osadl_matrix.get_compatibility("ICU", "NBPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ICU_NTP(self):        
        assert osadl_matrix.get_compatibility("ICU", "NTP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ICU_OSL_3_0(self):        
        assert osadl_matrix.get_compatibility("ICU", "OSL-3.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_ICU_OpenSSL(self):        
        assert osadl_matrix.get_compatibility("ICU", "OpenSSL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_ICU_PHP_3_01(self):        
        assert osadl_matrix.get_compatibility("ICU", "PHP-3.01") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ICU_PostgreSQL(self):        
        assert osadl_matrix.get_compatibility("ICU", "PostgreSQL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ICU_Python_2_0(self):        
        assert osadl_matrix.get_compatibility("ICU", "Python-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ICU_Qhull(self):        
        assert osadl_matrix.get_compatibility("ICU", "Qhull") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ICU_RSA_MD(self):        
        assert osadl_matrix.get_compatibility("ICU", "RSA-MD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ICU_Sleepycat(self):        
        assert osadl_matrix.get_compatibility("ICU", "Sleepycat") == osadl_matrix.OSADLCompatibility.NO
    

    def test_ICU_SunPro(self):        
        assert osadl_matrix.get_compatibility("ICU", "SunPro") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ICU_UPL_1_0(self):        
        assert osadl_matrix.get_compatibility("ICU", "UPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ICU_Unicode_DFS_2015(self):        
        assert osadl_matrix.get_compatibility("ICU", "Unicode-DFS-2015") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ICU_Unicode_DFS_2016(self):        
        assert osadl_matrix.get_compatibility("ICU", "Unicode-DFS-2016") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ICU_Unlicense(self):        
        assert osadl_matrix.get_compatibility("ICU", "Unlicense") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ICU_W3C(self):        
        assert osadl_matrix.get_compatibility("ICU", "W3C") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ICU_W3C_19980720(self):        
        assert osadl_matrix.get_compatibility("ICU", "W3C-19980720") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ICU_W3C_20150513(self):        
        assert osadl_matrix.get_compatibility("ICU", "W3C-20150513") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ICU_WTFPL(self):        
        assert osadl_matrix.get_compatibility("ICU", "WTFPL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ICU_X11(self):        
        assert osadl_matrix.get_compatibility("ICU", "X11") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ICU_XFree86_1_1(self):        
        assert osadl_matrix.get_compatibility("ICU", "XFree86-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ICU_ZPL_2_0(self):        
        assert osadl_matrix.get_compatibility("ICU", "ZPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ICU_Zlib(self):        
        assert osadl_matrix.get_compatibility("ICU", "Zlib") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ICU_bzip2_1_0_5(self):        
        assert osadl_matrix.get_compatibility("ICU", "bzip2-1.0.5") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ICU_bzip2_1_0_6(self):        
        assert osadl_matrix.get_compatibility("ICU", "bzip2-1.0.6") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ICU_curl(self):        
        assert osadl_matrix.get_compatibility("ICU", "curl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ICU_libtiff(self):        
        assert osadl_matrix.get_compatibility("ICU", "libtiff") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ICU_zlib_acknowledgement(self):        
        assert osadl_matrix.get_compatibility("ICU", "zlib-acknowledgement") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IJG_0BSD(self):        
        assert osadl_matrix.get_compatibility("IJG", "0BSD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IJG_AFL_2_0(self):        
        assert osadl_matrix.get_compatibility("IJG", "AFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IJG_AFL_2_1(self):        
        assert osadl_matrix.get_compatibility("IJG", "AFL-2.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IJG_AFL_3_0(self):        
        assert osadl_matrix.get_compatibility("IJG", "AFL-3.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IJG_AGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("IJG", "AGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_IJG_AGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("IJG", "AGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_IJG_Apache_1_0(self):        
        assert osadl_matrix.get_compatibility("IJG", "Apache-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IJG_Apache_1_1(self):        
        assert osadl_matrix.get_compatibility("IJG", "Apache-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IJG_Apache_2_0(self):        
        assert osadl_matrix.get_compatibility("IJG", "Apache-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IJG_Artistic_1_0(self):        
        assert osadl_matrix.get_compatibility("IJG", "Artistic-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IJG_Artistic_1_0_Perl(self):        
        assert osadl_matrix.get_compatibility("IJG", "Artistic-1.0-Perl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IJG_Artistic_2_0(self):        
        assert osadl_matrix.get_compatibility("IJG", "Artistic-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IJG_BSD_1_Clause(self):        
        assert osadl_matrix.get_compatibility("IJG", "BSD-1-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IJG_BSD_2_Clause(self):        
        assert osadl_matrix.get_compatibility("IJG", "BSD-2-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IJG_BSD_2_Clause_Patent(self):        
        assert osadl_matrix.get_compatibility("IJG", "BSD-2-Clause-Patent") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IJG_BSD_3_Clause(self):        
        assert osadl_matrix.get_compatibility("IJG", "BSD-3-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IJG_BSD_4_Clause(self):        
        assert osadl_matrix.get_compatibility("IJG", "BSD-4-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IJG_BSD_4_Clause_UC(self):        
        assert osadl_matrix.get_compatibility("IJG", "BSD-4-Clause-UC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IJG_BSD_Source_Code(self):        
        assert osadl_matrix.get_compatibility("IJG", "BSD-Source-Code") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IJG_BSL_1_0(self):        
        assert osadl_matrix.get_compatibility("IJG", "BSL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IJG_CC0_1_0(self):        
        assert osadl_matrix.get_compatibility("IJG", "CC0-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IJG_CDDL_1_0(self):        
        assert osadl_matrix.get_compatibility("IJG", "CDDL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_IJG_CDDL_1_1(self):        
        assert osadl_matrix.get_compatibility("IJG", "CDDL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_IJG_CPL_1_0(self):        
        assert osadl_matrix.get_compatibility("IJG", "CPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_IJG_EFL_2_0(self):        
        assert osadl_matrix.get_compatibility("IJG", "EFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IJG_EPL_1_0(self):        
        assert osadl_matrix.get_compatibility("IJG", "EPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_IJG_EPL_2_0(self):        
        assert osadl_matrix.get_compatibility("IJG", "EPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_IJG_EUPL_1_1(self):        
        assert osadl_matrix.get_compatibility("IJG", "EUPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_IJG_EUPL_1_2(self):        
        assert osadl_matrix.get_compatibility("IJG", "EUPL-1.2") == osadl_matrix.OSADLCompatibility.NO
    

    def test_IJG_FSFAP(self):        
        assert osadl_matrix.get_compatibility("IJG", "FSFAP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IJG_FSFULLR(self):        
        assert osadl_matrix.get_compatibility("IJG", "FSFULLR") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IJG_FTL(self):        
        assert osadl_matrix.get_compatibility("IJG", "FTL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IJG_GPL_1_0_only(self):        
        assert osadl_matrix.get_compatibility("IJG", "GPL-1.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_IJG_GPL_1_0_or_later(self):        
        assert osadl_matrix.get_compatibility("IJG", "GPL-1.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_IJG_GPL_2_0_only(self):        
        assert osadl_matrix.get_compatibility("IJG", "GPL-2.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_IJG_GPL_2_0_only_WITH_Classpath_exception_2_0(self):        
        assert osadl_matrix.get_compatibility("IJG", "GPL-2.0-only WITH Classpath-exception-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_IJG_GPL_2_0_or_later(self):        
        assert osadl_matrix.get_compatibility("IJG", "GPL-2.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_IJG_GPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("IJG", "GPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_IJG_GPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("IJG", "GPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_IJG_HPND(self):        
        assert osadl_matrix.get_compatibility("IJG", "HPND") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IJG_IBM_pibs(self):        
        assert osadl_matrix.get_compatibility("IJG", "IBM-pibs") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IJG_ICU(self):        
        assert osadl_matrix.get_compatibility("IJG", "ICU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IJG_IJG(self):        
        assert osadl_matrix.get_compatibility("IJG", "IJG") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IJG_IPL_1_0(self):        
        assert osadl_matrix.get_compatibility("IJG", "IPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_IJG_ISC(self):        
        assert osadl_matrix.get_compatibility("IJG", "ISC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IJG_Info_ZIP(self):        
        assert osadl_matrix.get_compatibility("IJG", "Info-ZIP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IJG_LGPL_2_1_only(self):        
        assert osadl_matrix.get_compatibility("IJG", "LGPL-2.1-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_IJG_LGPL_2_1_or_later(self):        
        assert osadl_matrix.get_compatibility("IJG", "LGPL-2.1-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_IJG_LGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("IJG", "LGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_IJG_LGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("IJG", "LGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_IJG_Libpng(self):        
        assert osadl_matrix.get_compatibility("IJG", "Libpng") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IJG_MIT(self):        
        assert osadl_matrix.get_compatibility("IJG", "MIT") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IJG_MIT_CMU(self):        
        assert osadl_matrix.get_compatibility("IJG", "MIT-CMU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IJG_MPL_1_1(self):        
        assert osadl_matrix.get_compatibility("IJG", "MPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_IJG_MPL_2_0(self):        
        assert osadl_matrix.get_compatibility("IJG", "MPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_IJG_MPL_2_0_no_copyleft_exception(self):        
        assert osadl_matrix.get_compatibility("IJG", "MPL-2.0-no-copyleft-exception") == osadl_matrix.OSADLCompatibility.NO
    

    def test_IJG_MS_PL(self):        
        assert osadl_matrix.get_compatibility("IJG", "MS-PL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_IJG_MS_RL(self):        
        assert osadl_matrix.get_compatibility("IJG", "MS-RL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_IJG_MirOS(self):        
        assert osadl_matrix.get_compatibility("IJG", "MirOS") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IJG_NBPL_1_0(self):        
        assert osadl_matrix.get_compatibility("IJG", "NBPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IJG_NTP(self):        
        assert osadl_matrix.get_compatibility("IJG", "NTP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IJG_OSL_3_0(self):        
        assert osadl_matrix.get_compatibility("IJG", "OSL-3.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_IJG_OpenSSL(self):        
        assert osadl_matrix.get_compatibility("IJG", "OpenSSL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_IJG_PHP_3_01(self):        
        assert osadl_matrix.get_compatibility("IJG", "PHP-3.01") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IJG_PostgreSQL(self):        
        assert osadl_matrix.get_compatibility("IJG", "PostgreSQL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IJG_Python_2_0(self):        
        assert osadl_matrix.get_compatibility("IJG", "Python-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IJG_Qhull(self):        
        assert osadl_matrix.get_compatibility("IJG", "Qhull") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IJG_RSA_MD(self):        
        assert osadl_matrix.get_compatibility("IJG", "RSA-MD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IJG_Sleepycat(self):        
        assert osadl_matrix.get_compatibility("IJG", "Sleepycat") == osadl_matrix.OSADLCompatibility.NO
    

    def test_IJG_SunPro(self):        
        assert osadl_matrix.get_compatibility("IJG", "SunPro") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IJG_UPL_1_0(self):        
        assert osadl_matrix.get_compatibility("IJG", "UPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IJG_Unicode_DFS_2015(self):        
        assert osadl_matrix.get_compatibility("IJG", "Unicode-DFS-2015") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IJG_Unicode_DFS_2016(self):        
        assert osadl_matrix.get_compatibility("IJG", "Unicode-DFS-2016") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IJG_Unlicense(self):        
        assert osadl_matrix.get_compatibility("IJG", "Unlicense") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IJG_W3C(self):        
        assert osadl_matrix.get_compatibility("IJG", "W3C") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IJG_W3C_19980720(self):        
        assert osadl_matrix.get_compatibility("IJG", "W3C-19980720") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IJG_W3C_20150513(self):        
        assert osadl_matrix.get_compatibility("IJG", "W3C-20150513") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IJG_WTFPL(self):        
        assert osadl_matrix.get_compatibility("IJG", "WTFPL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IJG_X11(self):        
        assert osadl_matrix.get_compatibility("IJG", "X11") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IJG_XFree86_1_1(self):        
        assert osadl_matrix.get_compatibility("IJG", "XFree86-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IJG_ZPL_2_0(self):        
        assert osadl_matrix.get_compatibility("IJG", "ZPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IJG_Zlib(self):        
        assert osadl_matrix.get_compatibility("IJG", "Zlib") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IJG_bzip2_1_0_5(self):        
        assert osadl_matrix.get_compatibility("IJG", "bzip2-1.0.5") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IJG_bzip2_1_0_6(self):        
        assert osadl_matrix.get_compatibility("IJG", "bzip2-1.0.6") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IJG_curl(self):        
        assert osadl_matrix.get_compatibility("IJG", "curl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IJG_libtiff(self):        
        assert osadl_matrix.get_compatibility("IJG", "libtiff") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IJG_zlib_acknowledgement(self):        
        assert osadl_matrix.get_compatibility("IJG", "zlib-acknowledgement") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IPL_1_0_0BSD(self):        
        assert osadl_matrix.get_compatibility("IPL-1.0", "0BSD") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_IPL_1_0_AFL_2_0(self):        
        assert osadl_matrix.get_compatibility("IPL-1.0", "AFL-2.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_IPL_1_0_AFL_2_1(self):        
        assert osadl_matrix.get_compatibility("IPL-1.0", "AFL-2.1") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_IPL_1_0_AFL_3_0(self):        
        assert osadl_matrix.get_compatibility("IPL-1.0", "AFL-3.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_IPL_1_0_AGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("IPL-1.0", "AGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_IPL_1_0_AGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("IPL-1.0", "AGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_IPL_1_0_Apache_1_0(self):        
        assert osadl_matrix.get_compatibility("IPL-1.0", "Apache-1.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_IPL_1_0_Apache_1_1(self):        
        assert osadl_matrix.get_compatibility("IPL-1.0", "Apache-1.1") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_IPL_1_0_Apache_2_0(self):        
        assert osadl_matrix.get_compatibility("IPL-1.0", "Apache-2.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_IPL_1_0_Artistic_1_0(self):        
        assert osadl_matrix.get_compatibility("IPL-1.0", "Artistic-1.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_IPL_1_0_Artistic_1_0_Perl(self):        
        assert osadl_matrix.get_compatibility("IPL-1.0", "Artistic-1.0-Perl") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_IPL_1_0_Artistic_2_0(self):        
        assert osadl_matrix.get_compatibility("IPL-1.0", "Artistic-2.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_IPL_1_0_BSD_1_Clause(self):        
        assert osadl_matrix.get_compatibility("IPL-1.0", "BSD-1-Clause") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_IPL_1_0_BSD_2_Clause(self):        
        assert osadl_matrix.get_compatibility("IPL-1.0", "BSD-2-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IPL_1_0_BSD_2_Clause_Patent(self):        
        assert osadl_matrix.get_compatibility("IPL-1.0", "BSD-2-Clause-Patent") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IPL_1_0_BSD_3_Clause(self):        
        assert osadl_matrix.get_compatibility("IPL-1.0", "BSD-3-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IPL_1_0_BSD_4_Clause(self):        
        assert osadl_matrix.get_compatibility("IPL-1.0", "BSD-4-Clause") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_IPL_1_0_BSD_4_Clause_UC(self):        
        assert osadl_matrix.get_compatibility("IPL-1.0", "BSD-4-Clause-UC") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_IPL_1_0_BSD_Source_Code(self):        
        assert osadl_matrix.get_compatibility("IPL-1.0", "BSD-Source-Code") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_IPL_1_0_BSL_1_0(self):        
        assert osadl_matrix.get_compatibility("IPL-1.0", "BSL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IPL_1_0_CC0_1_0(self):        
        assert osadl_matrix.get_compatibility("IPL-1.0", "CC0-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IPL_1_0_CDDL_1_0(self):        
        assert osadl_matrix.get_compatibility("IPL-1.0", "CDDL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_IPL_1_0_CDDL_1_1(self):        
        assert osadl_matrix.get_compatibility("IPL-1.0", "CDDL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_IPL_1_0_CPL_1_0(self):        
        assert osadl_matrix.get_compatibility("IPL-1.0", "CPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IPL_1_0_EFL_2_0(self):        
        assert osadl_matrix.get_compatibility("IPL-1.0", "EFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IPL_1_0_EPL_1_0(self):        
        assert osadl_matrix.get_compatibility("IPL-1.0", "EPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IPL_1_0_EPL_2_0(self):        
        assert osadl_matrix.get_compatibility("IPL-1.0", "EPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_IPL_1_0_EUPL_1_1(self):        
        assert osadl_matrix.get_compatibility("IPL-1.0", "EUPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_IPL_1_0_EUPL_1_2(self):        
        assert osadl_matrix.get_compatibility("IPL-1.0", "EUPL-1.2") == osadl_matrix.OSADLCompatibility.NO
    

    def test_IPL_1_0_FSFAP(self):        
        assert osadl_matrix.get_compatibility("IPL-1.0", "FSFAP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IPL_1_0_FSFULLR(self):        
        assert osadl_matrix.get_compatibility("IPL-1.0", "FSFULLR") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IPL_1_0_FTL(self):        
        assert osadl_matrix.get_compatibility("IPL-1.0", "FTL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_IPL_1_0_GPL_1_0_only(self):        
        assert osadl_matrix.get_compatibility("IPL-1.0", "GPL-1.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_IPL_1_0_GPL_1_0_or_later(self):        
        assert osadl_matrix.get_compatibility("IPL-1.0", "GPL-1.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_IPL_1_0_GPL_2_0_only(self):        
        assert osadl_matrix.get_compatibility("IPL-1.0", "GPL-2.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_IPL_1_0_GPL_2_0_only_WITH_Classpath_exception_2_0(self):        
        assert osadl_matrix.get_compatibility("IPL-1.0", "GPL-2.0-only WITH Classpath-exception-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_IPL_1_0_GPL_2_0_or_later(self):        
        assert osadl_matrix.get_compatibility("IPL-1.0", "GPL-2.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_IPL_1_0_GPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("IPL-1.0", "GPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_IPL_1_0_GPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("IPL-1.0", "GPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_IPL_1_0_HPND(self):        
        assert osadl_matrix.get_compatibility("IPL-1.0", "HPND") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_IPL_1_0_IBM_pibs(self):        
        assert osadl_matrix.get_compatibility("IPL-1.0", "IBM-pibs") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IPL_1_0_ICU(self):        
        assert osadl_matrix.get_compatibility("IPL-1.0", "ICU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IPL_1_0_IJG(self):        
        assert osadl_matrix.get_compatibility("IPL-1.0", "IJG") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_IPL_1_0_IPL_1_0(self):        
        assert osadl_matrix.get_compatibility("IPL-1.0", "IPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IPL_1_0_ISC(self):        
        assert osadl_matrix.get_compatibility("IPL-1.0", "ISC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IPL_1_0_Info_ZIP(self):        
        assert osadl_matrix.get_compatibility("IPL-1.0", "Info-ZIP") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_IPL_1_0_LGPL_2_1_only(self):        
        assert osadl_matrix.get_compatibility("IPL-1.0", "LGPL-2.1-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_IPL_1_0_LGPL_2_1_or_later(self):        
        assert osadl_matrix.get_compatibility("IPL-1.0", "LGPL-2.1-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_IPL_1_0_LGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("IPL-1.0", "LGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_IPL_1_0_LGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("IPL-1.0", "LGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_IPL_1_0_Libpng(self):        
        assert osadl_matrix.get_compatibility("IPL-1.0", "Libpng") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IPL_1_0_MIT(self):        
        assert osadl_matrix.get_compatibility("IPL-1.0", "MIT") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IPL_1_0_MIT_CMU(self):        
        assert osadl_matrix.get_compatibility("IPL-1.0", "MIT-CMU") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_IPL_1_0_MPL_1_1(self):        
        assert osadl_matrix.get_compatibility("IPL-1.0", "MPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_IPL_1_0_MPL_2_0(self):        
        assert osadl_matrix.get_compatibility("IPL-1.0", "MPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_IPL_1_0_MPL_2_0_no_copyleft_exception(self):        
        assert osadl_matrix.get_compatibility("IPL-1.0", "MPL-2.0-no-copyleft-exception") == osadl_matrix.OSADLCompatibility.NO
    

    def test_IPL_1_0_MS_PL(self):        
        assert osadl_matrix.get_compatibility("IPL-1.0", "MS-PL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_IPL_1_0_MS_RL(self):        
        assert osadl_matrix.get_compatibility("IPL-1.0", "MS-RL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_IPL_1_0_MirOS(self):        
        assert osadl_matrix.get_compatibility("IPL-1.0", "MirOS") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_IPL_1_0_NBPL_1_0(self):        
        assert osadl_matrix.get_compatibility("IPL-1.0", "NBPL-1.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_IPL_1_0_NTP(self):        
        assert osadl_matrix.get_compatibility("IPL-1.0", "NTP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IPL_1_0_OSL_3_0(self):        
        assert osadl_matrix.get_compatibility("IPL-1.0", "OSL-3.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_IPL_1_0_OpenSSL(self):        
        assert osadl_matrix.get_compatibility("IPL-1.0", "OpenSSL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_IPL_1_0_PHP_3_01(self):        
        assert osadl_matrix.get_compatibility("IPL-1.0", "PHP-3.01") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_IPL_1_0_PostgreSQL(self):        
        assert osadl_matrix.get_compatibility("IPL-1.0", "PostgreSQL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_IPL_1_0_Python_2_0(self):        
        assert osadl_matrix.get_compatibility("IPL-1.0", "Python-2.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_IPL_1_0_Qhull(self):        
        assert osadl_matrix.get_compatibility("IPL-1.0", "Qhull") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_IPL_1_0_RSA_MD(self):        
        assert osadl_matrix.get_compatibility("IPL-1.0", "RSA-MD") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_IPL_1_0_Sleepycat(self):        
        assert osadl_matrix.get_compatibility("IPL-1.0", "Sleepycat") == osadl_matrix.OSADLCompatibility.NO
    

    def test_IPL_1_0_SunPro(self):        
        assert osadl_matrix.get_compatibility("IPL-1.0", "SunPro") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_IPL_1_0_UPL_1_0(self):        
        assert osadl_matrix.get_compatibility("IPL-1.0", "UPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IPL_1_0_Unicode_DFS_2015(self):        
        assert osadl_matrix.get_compatibility("IPL-1.0", "Unicode-DFS-2015") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_IPL_1_0_Unicode_DFS_2016(self):        
        assert osadl_matrix.get_compatibility("IPL-1.0", "Unicode-DFS-2016") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_IPL_1_0_Unlicense(self):        
        assert osadl_matrix.get_compatibility("IPL-1.0", "Unlicense") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IPL_1_0_W3C(self):        
        assert osadl_matrix.get_compatibility("IPL-1.0", "W3C") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_IPL_1_0_W3C_19980720(self):        
        assert osadl_matrix.get_compatibility("IPL-1.0", "W3C-19980720") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_IPL_1_0_W3C_20150513(self):        
        assert osadl_matrix.get_compatibility("IPL-1.0", "W3C-20150513") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_IPL_1_0_WTFPL(self):        
        assert osadl_matrix.get_compatibility("IPL-1.0", "WTFPL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IPL_1_0_X11(self):        
        assert osadl_matrix.get_compatibility("IPL-1.0", "X11") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IPL_1_0_XFree86_1_1(self):        
        assert osadl_matrix.get_compatibility("IPL-1.0", "XFree86-1.1") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_IPL_1_0_ZPL_2_0(self):        
        assert osadl_matrix.get_compatibility("IPL-1.0", "ZPL-2.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_IPL_1_0_Zlib(self):        
        assert osadl_matrix.get_compatibility("IPL-1.0", "Zlib") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IPL_1_0_bzip2_1_0_5(self):        
        assert osadl_matrix.get_compatibility("IPL-1.0", "bzip2-1.0.5") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IPL_1_0_bzip2_1_0_6(self):        
        assert osadl_matrix.get_compatibility("IPL-1.0", "bzip2-1.0.6") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IPL_1_0_curl(self):        
        assert osadl_matrix.get_compatibility("IPL-1.0", "curl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_IPL_1_0_libtiff(self):        
        assert osadl_matrix.get_compatibility("IPL-1.0", "libtiff") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_IPL_1_0_zlib_acknowledgement(self):        
        assert osadl_matrix.get_compatibility("IPL-1.0", "zlib-acknowledgement") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_ISC_0BSD(self):        
        assert osadl_matrix.get_compatibility("ISC", "0BSD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ISC_AFL_2_0(self):        
        assert osadl_matrix.get_compatibility("ISC", "AFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ISC_AFL_2_1(self):        
        assert osadl_matrix.get_compatibility("ISC", "AFL-2.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ISC_AFL_3_0(self):        
        assert osadl_matrix.get_compatibility("ISC", "AFL-3.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ISC_AGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("ISC", "AGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_ISC_AGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("ISC", "AGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_ISC_Apache_1_0(self):        
        assert osadl_matrix.get_compatibility("ISC", "Apache-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ISC_Apache_1_1(self):        
        assert osadl_matrix.get_compatibility("ISC", "Apache-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ISC_Apache_2_0(self):        
        assert osadl_matrix.get_compatibility("ISC", "Apache-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ISC_Artistic_1_0(self):        
        assert osadl_matrix.get_compatibility("ISC", "Artistic-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ISC_Artistic_1_0_Perl(self):        
        assert osadl_matrix.get_compatibility("ISC", "Artistic-1.0-Perl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ISC_Artistic_2_0(self):        
        assert osadl_matrix.get_compatibility("ISC", "Artistic-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ISC_BSD_1_Clause(self):        
        assert osadl_matrix.get_compatibility("ISC", "BSD-1-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ISC_BSD_2_Clause(self):        
        assert osadl_matrix.get_compatibility("ISC", "BSD-2-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ISC_BSD_2_Clause_Patent(self):        
        assert osadl_matrix.get_compatibility("ISC", "BSD-2-Clause-Patent") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ISC_BSD_3_Clause(self):        
        assert osadl_matrix.get_compatibility("ISC", "BSD-3-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ISC_BSD_4_Clause(self):        
        assert osadl_matrix.get_compatibility("ISC", "BSD-4-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ISC_BSD_4_Clause_UC(self):        
        assert osadl_matrix.get_compatibility("ISC", "BSD-4-Clause-UC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ISC_BSD_Source_Code(self):        
        assert osadl_matrix.get_compatibility("ISC", "BSD-Source-Code") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ISC_BSL_1_0(self):        
        assert osadl_matrix.get_compatibility("ISC", "BSL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ISC_CC0_1_0(self):        
        assert osadl_matrix.get_compatibility("ISC", "CC0-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ISC_CDDL_1_0(self):        
        assert osadl_matrix.get_compatibility("ISC", "CDDL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_ISC_CDDL_1_1(self):        
        assert osadl_matrix.get_compatibility("ISC", "CDDL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_ISC_CPL_1_0(self):        
        assert osadl_matrix.get_compatibility("ISC", "CPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_ISC_EFL_2_0(self):        
        assert osadl_matrix.get_compatibility("ISC", "EFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ISC_EPL_1_0(self):        
        assert osadl_matrix.get_compatibility("ISC", "EPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_ISC_EPL_2_0(self):        
        assert osadl_matrix.get_compatibility("ISC", "EPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_ISC_EUPL_1_1(self):        
        assert osadl_matrix.get_compatibility("ISC", "EUPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_ISC_EUPL_1_2(self):        
        assert osadl_matrix.get_compatibility("ISC", "EUPL-1.2") == osadl_matrix.OSADLCompatibility.NO
    

    def test_ISC_FSFAP(self):        
        assert osadl_matrix.get_compatibility("ISC", "FSFAP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ISC_FSFULLR(self):        
        assert osadl_matrix.get_compatibility("ISC", "FSFULLR") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ISC_FTL(self):        
        assert osadl_matrix.get_compatibility("ISC", "FTL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ISC_GPL_1_0_only(self):        
        assert osadl_matrix.get_compatibility("ISC", "GPL-1.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_ISC_GPL_1_0_or_later(self):        
        assert osadl_matrix.get_compatibility("ISC", "GPL-1.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_ISC_GPL_2_0_only(self):        
        assert osadl_matrix.get_compatibility("ISC", "GPL-2.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_ISC_GPL_2_0_only_WITH_Classpath_exception_2_0(self):        
        assert osadl_matrix.get_compatibility("ISC", "GPL-2.0-only WITH Classpath-exception-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_ISC_GPL_2_0_or_later(self):        
        assert osadl_matrix.get_compatibility("ISC", "GPL-2.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_ISC_GPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("ISC", "GPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_ISC_GPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("ISC", "GPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_ISC_HPND(self):        
        assert osadl_matrix.get_compatibility("ISC", "HPND") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ISC_IBM_pibs(self):        
        assert osadl_matrix.get_compatibility("ISC", "IBM-pibs") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ISC_ICU(self):        
        assert osadl_matrix.get_compatibility("ISC", "ICU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ISC_IJG(self):        
        assert osadl_matrix.get_compatibility("ISC", "IJG") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ISC_IPL_1_0(self):        
        assert osadl_matrix.get_compatibility("ISC", "IPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_ISC_ISC(self):        
        assert osadl_matrix.get_compatibility("ISC", "ISC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ISC_Info_ZIP(self):        
        assert osadl_matrix.get_compatibility("ISC", "Info-ZIP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ISC_LGPL_2_1_only(self):        
        assert osadl_matrix.get_compatibility("ISC", "LGPL-2.1-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_ISC_LGPL_2_1_or_later(self):        
        assert osadl_matrix.get_compatibility("ISC", "LGPL-2.1-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_ISC_LGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("ISC", "LGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_ISC_LGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("ISC", "LGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_ISC_Libpng(self):        
        assert osadl_matrix.get_compatibility("ISC", "Libpng") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ISC_MIT(self):        
        assert osadl_matrix.get_compatibility("ISC", "MIT") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ISC_MIT_CMU(self):        
        assert osadl_matrix.get_compatibility("ISC", "MIT-CMU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ISC_MPL_1_1(self):        
        assert osadl_matrix.get_compatibility("ISC", "MPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_ISC_MPL_2_0(self):        
        assert osadl_matrix.get_compatibility("ISC", "MPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_ISC_MPL_2_0_no_copyleft_exception(self):        
        assert osadl_matrix.get_compatibility("ISC", "MPL-2.0-no-copyleft-exception") == osadl_matrix.OSADLCompatibility.NO
    

    def test_ISC_MS_PL(self):        
        assert osadl_matrix.get_compatibility("ISC", "MS-PL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_ISC_MS_RL(self):        
        assert osadl_matrix.get_compatibility("ISC", "MS-RL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_ISC_MirOS(self):        
        assert osadl_matrix.get_compatibility("ISC", "MirOS") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ISC_NBPL_1_0(self):        
        assert osadl_matrix.get_compatibility("ISC", "NBPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ISC_NTP(self):        
        assert osadl_matrix.get_compatibility("ISC", "NTP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ISC_OSL_3_0(self):        
        assert osadl_matrix.get_compatibility("ISC", "OSL-3.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_ISC_OpenSSL(self):        
        assert osadl_matrix.get_compatibility("ISC", "OpenSSL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_ISC_PHP_3_01(self):        
        assert osadl_matrix.get_compatibility("ISC", "PHP-3.01") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ISC_PostgreSQL(self):        
        assert osadl_matrix.get_compatibility("ISC", "PostgreSQL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ISC_Python_2_0(self):        
        assert osadl_matrix.get_compatibility("ISC", "Python-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ISC_Qhull(self):        
        assert osadl_matrix.get_compatibility("ISC", "Qhull") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ISC_RSA_MD(self):        
        assert osadl_matrix.get_compatibility("ISC", "RSA-MD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ISC_Sleepycat(self):        
        assert osadl_matrix.get_compatibility("ISC", "Sleepycat") == osadl_matrix.OSADLCompatibility.NO
    

    def test_ISC_SunPro(self):        
        assert osadl_matrix.get_compatibility("ISC", "SunPro") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ISC_UPL_1_0(self):        
        assert osadl_matrix.get_compatibility("ISC", "UPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ISC_Unicode_DFS_2015(self):        
        assert osadl_matrix.get_compatibility("ISC", "Unicode-DFS-2015") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ISC_Unicode_DFS_2016(self):        
        assert osadl_matrix.get_compatibility("ISC", "Unicode-DFS-2016") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ISC_Unlicense(self):        
        assert osadl_matrix.get_compatibility("ISC", "Unlicense") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ISC_W3C(self):        
        assert osadl_matrix.get_compatibility("ISC", "W3C") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ISC_W3C_19980720(self):        
        assert osadl_matrix.get_compatibility("ISC", "W3C-19980720") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ISC_W3C_20150513(self):        
        assert osadl_matrix.get_compatibility("ISC", "W3C-20150513") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ISC_WTFPL(self):        
        assert osadl_matrix.get_compatibility("ISC", "WTFPL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ISC_X11(self):        
        assert osadl_matrix.get_compatibility("ISC", "X11") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ISC_XFree86_1_1(self):        
        assert osadl_matrix.get_compatibility("ISC", "XFree86-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ISC_ZPL_2_0(self):        
        assert osadl_matrix.get_compatibility("ISC", "ZPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ISC_Zlib(self):        
        assert osadl_matrix.get_compatibility("ISC", "Zlib") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ISC_bzip2_1_0_5(self):        
        assert osadl_matrix.get_compatibility("ISC", "bzip2-1.0.5") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ISC_bzip2_1_0_6(self):        
        assert osadl_matrix.get_compatibility("ISC", "bzip2-1.0.6") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ISC_curl(self):        
        assert osadl_matrix.get_compatibility("ISC", "curl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ISC_libtiff(self):        
        assert osadl_matrix.get_compatibility("ISC", "libtiff") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ISC_zlib_acknowledgement(self):        
        assert osadl_matrix.get_compatibility("ISC", "zlib-acknowledgement") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Info_ZIP_0BSD(self):        
        assert osadl_matrix.get_compatibility("Info-ZIP", "0BSD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Info_ZIP_AFL_2_0(self):        
        assert osadl_matrix.get_compatibility("Info-ZIP", "AFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Info_ZIP_AFL_2_1(self):        
        assert osadl_matrix.get_compatibility("Info-ZIP", "AFL-2.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Info_ZIP_AFL_3_0(self):        
        assert osadl_matrix.get_compatibility("Info-ZIP", "AFL-3.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Info_ZIP_AGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("Info-ZIP", "AGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Info_ZIP_AGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("Info-ZIP", "AGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Info_ZIP_Apache_1_0(self):        
        assert osadl_matrix.get_compatibility("Info-ZIP", "Apache-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Info_ZIP_Apache_1_1(self):        
        assert osadl_matrix.get_compatibility("Info-ZIP", "Apache-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Info_ZIP_Apache_2_0(self):        
        assert osadl_matrix.get_compatibility("Info-ZIP", "Apache-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Info_ZIP_Artistic_1_0(self):        
        assert osadl_matrix.get_compatibility("Info-ZIP", "Artistic-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Info_ZIP_Artistic_1_0_Perl(self):        
        assert osadl_matrix.get_compatibility("Info-ZIP", "Artistic-1.0-Perl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Info_ZIP_Artistic_2_0(self):        
        assert osadl_matrix.get_compatibility("Info-ZIP", "Artistic-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Info_ZIP_BSD_1_Clause(self):        
        assert osadl_matrix.get_compatibility("Info-ZIP", "BSD-1-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Info_ZIP_BSD_2_Clause(self):        
        assert osadl_matrix.get_compatibility("Info-ZIP", "BSD-2-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Info_ZIP_BSD_2_Clause_Patent(self):        
        assert osadl_matrix.get_compatibility("Info-ZIP", "BSD-2-Clause-Patent") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Info_ZIP_BSD_3_Clause(self):        
        assert osadl_matrix.get_compatibility("Info-ZIP", "BSD-3-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Info_ZIP_BSD_4_Clause(self):        
        assert osadl_matrix.get_compatibility("Info-ZIP", "BSD-4-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Info_ZIP_BSD_4_Clause_UC(self):        
        assert osadl_matrix.get_compatibility("Info-ZIP", "BSD-4-Clause-UC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Info_ZIP_BSD_Source_Code(self):        
        assert osadl_matrix.get_compatibility("Info-ZIP", "BSD-Source-Code") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Info_ZIP_BSL_1_0(self):        
        assert osadl_matrix.get_compatibility("Info-ZIP", "BSL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Info_ZIP_CC0_1_0(self):        
        assert osadl_matrix.get_compatibility("Info-ZIP", "CC0-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Info_ZIP_CDDL_1_0(self):        
        assert osadl_matrix.get_compatibility("Info-ZIP", "CDDL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Info_ZIP_CDDL_1_1(self):        
        assert osadl_matrix.get_compatibility("Info-ZIP", "CDDL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Info_ZIP_CPL_1_0(self):        
        assert osadl_matrix.get_compatibility("Info-ZIP", "CPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Info_ZIP_EFL_2_0(self):        
        assert osadl_matrix.get_compatibility("Info-ZIP", "EFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Info_ZIP_EPL_1_0(self):        
        assert osadl_matrix.get_compatibility("Info-ZIP", "EPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Info_ZIP_EPL_2_0(self):        
        assert osadl_matrix.get_compatibility("Info-ZIP", "EPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Info_ZIP_EUPL_1_1(self):        
        assert osadl_matrix.get_compatibility("Info-ZIP", "EUPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Info_ZIP_EUPL_1_2(self):        
        assert osadl_matrix.get_compatibility("Info-ZIP", "EUPL-1.2") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Info_ZIP_FSFAP(self):        
        assert osadl_matrix.get_compatibility("Info-ZIP", "FSFAP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Info_ZIP_FSFULLR(self):        
        assert osadl_matrix.get_compatibility("Info-ZIP", "FSFULLR") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Info_ZIP_FTL(self):        
        assert osadl_matrix.get_compatibility("Info-ZIP", "FTL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Info_ZIP_GPL_1_0_only(self):        
        assert osadl_matrix.get_compatibility("Info-ZIP", "GPL-1.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Info_ZIP_GPL_1_0_or_later(self):        
        assert osadl_matrix.get_compatibility("Info-ZIP", "GPL-1.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Info_ZIP_GPL_2_0_only(self):        
        assert osadl_matrix.get_compatibility("Info-ZIP", "GPL-2.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Info_ZIP_GPL_2_0_only_WITH_Classpath_exception_2_0(self):        
        assert osadl_matrix.get_compatibility("Info-ZIP", "GPL-2.0-only WITH Classpath-exception-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Info_ZIP_GPL_2_0_or_later(self):        
        assert osadl_matrix.get_compatibility("Info-ZIP", "GPL-2.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Info_ZIP_GPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("Info-ZIP", "GPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Info_ZIP_GPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("Info-ZIP", "GPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Info_ZIP_HPND(self):        
        assert osadl_matrix.get_compatibility("Info-ZIP", "HPND") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Info_ZIP_IBM_pibs(self):        
        assert osadl_matrix.get_compatibility("Info-ZIP", "IBM-pibs") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Info_ZIP_ICU(self):        
        assert osadl_matrix.get_compatibility("Info-ZIP", "ICU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Info_ZIP_IJG(self):        
        assert osadl_matrix.get_compatibility("Info-ZIP", "IJG") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Info_ZIP_IPL_1_0(self):        
        assert osadl_matrix.get_compatibility("Info-ZIP", "IPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Info_ZIP_ISC(self):        
        assert osadl_matrix.get_compatibility("Info-ZIP", "ISC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Info_ZIP_Info_ZIP(self):        
        assert osadl_matrix.get_compatibility("Info-ZIP", "Info-ZIP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Info_ZIP_LGPL_2_1_only(self):        
        assert osadl_matrix.get_compatibility("Info-ZIP", "LGPL-2.1-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Info_ZIP_LGPL_2_1_or_later(self):        
        assert osadl_matrix.get_compatibility("Info-ZIP", "LGPL-2.1-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Info_ZIP_LGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("Info-ZIP", "LGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Info_ZIP_LGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("Info-ZIP", "LGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Info_ZIP_Libpng(self):        
        assert osadl_matrix.get_compatibility("Info-ZIP", "Libpng") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Info_ZIP_MIT(self):        
        assert osadl_matrix.get_compatibility("Info-ZIP", "MIT") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Info_ZIP_MIT_CMU(self):        
        assert osadl_matrix.get_compatibility("Info-ZIP", "MIT-CMU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Info_ZIP_MPL_1_1(self):        
        assert osadl_matrix.get_compatibility("Info-ZIP", "MPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Info_ZIP_MPL_2_0(self):        
        assert osadl_matrix.get_compatibility("Info-ZIP", "MPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Info_ZIP_MPL_2_0_no_copyleft_exception(self):        
        assert osadl_matrix.get_compatibility("Info-ZIP", "MPL-2.0-no-copyleft-exception") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Info_ZIP_MS_PL(self):        
        assert osadl_matrix.get_compatibility("Info-ZIP", "MS-PL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_Info_ZIP_MS_RL(self):        
        assert osadl_matrix.get_compatibility("Info-ZIP", "MS-RL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Info_ZIP_MirOS(self):        
        assert osadl_matrix.get_compatibility("Info-ZIP", "MirOS") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Info_ZIP_NBPL_1_0(self):        
        assert osadl_matrix.get_compatibility("Info-ZIP", "NBPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Info_ZIP_NTP(self):        
        assert osadl_matrix.get_compatibility("Info-ZIP", "NTP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Info_ZIP_OSL_3_0(self):        
        assert osadl_matrix.get_compatibility("Info-ZIP", "OSL-3.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Info_ZIP_OpenSSL(self):        
        assert osadl_matrix.get_compatibility("Info-ZIP", "OpenSSL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_Info_ZIP_PHP_3_01(self):        
        assert osadl_matrix.get_compatibility("Info-ZIP", "PHP-3.01") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Info_ZIP_PostgreSQL(self):        
        assert osadl_matrix.get_compatibility("Info-ZIP", "PostgreSQL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Info_ZIP_Python_2_0(self):        
        assert osadl_matrix.get_compatibility("Info-ZIP", "Python-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Info_ZIP_Qhull(self):        
        assert osadl_matrix.get_compatibility("Info-ZIP", "Qhull") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Info_ZIP_RSA_MD(self):        
        assert osadl_matrix.get_compatibility("Info-ZIP", "RSA-MD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Info_ZIP_Sleepycat(self):        
        assert osadl_matrix.get_compatibility("Info-ZIP", "Sleepycat") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Info_ZIP_SunPro(self):        
        assert osadl_matrix.get_compatibility("Info-ZIP", "SunPro") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Info_ZIP_UPL_1_0(self):        
        assert osadl_matrix.get_compatibility("Info-ZIP", "UPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Info_ZIP_Unicode_DFS_2015(self):        
        assert osadl_matrix.get_compatibility("Info-ZIP", "Unicode-DFS-2015") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Info_ZIP_Unicode_DFS_2016(self):        
        assert osadl_matrix.get_compatibility("Info-ZIP", "Unicode-DFS-2016") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Info_ZIP_Unlicense(self):        
        assert osadl_matrix.get_compatibility("Info-ZIP", "Unlicense") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Info_ZIP_W3C(self):        
        assert osadl_matrix.get_compatibility("Info-ZIP", "W3C") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Info_ZIP_W3C_19980720(self):        
        assert osadl_matrix.get_compatibility("Info-ZIP", "W3C-19980720") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Info_ZIP_W3C_20150513(self):        
        assert osadl_matrix.get_compatibility("Info-ZIP", "W3C-20150513") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Info_ZIP_WTFPL(self):        
        assert osadl_matrix.get_compatibility("Info-ZIP", "WTFPL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Info_ZIP_X11(self):        
        assert osadl_matrix.get_compatibility("Info-ZIP", "X11") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Info_ZIP_XFree86_1_1(self):        
        assert osadl_matrix.get_compatibility("Info-ZIP", "XFree86-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Info_ZIP_ZPL_2_0(self):        
        assert osadl_matrix.get_compatibility("Info-ZIP", "ZPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Info_ZIP_Zlib(self):        
        assert osadl_matrix.get_compatibility("Info-ZIP", "Zlib") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Info_ZIP_bzip2_1_0_5(self):        
        assert osadl_matrix.get_compatibility("Info-ZIP", "bzip2-1.0.5") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Info_ZIP_bzip2_1_0_6(self):        
        assert osadl_matrix.get_compatibility("Info-ZIP", "bzip2-1.0.6") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Info_ZIP_curl(self):        
        assert osadl_matrix.get_compatibility("Info-ZIP", "curl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Info_ZIP_libtiff(self):        
        assert osadl_matrix.get_compatibility("Info-ZIP", "libtiff") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Info_ZIP_zlib_acknowledgement(self):        
        assert osadl_matrix.get_compatibility("Info-ZIP", "zlib-acknowledgement") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_2_1_only_0BSD(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-only", "0BSD") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_2_1_only_AFL_2_0(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-only", "AFL-2.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_2_1_only_AFL_2_1(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-only", "AFL-2.1") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_2_1_only_AFL_3_0(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-only", "AFL-3.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_2_1_only_AGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-only", "AGPL-3.0-only") == osadl_matrix.OSADLCompatibility.CHECKDEP
    

    def test_LGPL_2_1_only_AGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-only", "AGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.CHECKDEP
    

    def test_LGPL_2_1_only_Apache_1_0(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-only", "Apache-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_2_1_only_Apache_1_1(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-only", "Apache-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_2_1_only_Apache_2_0(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-only", "Apache-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_2_1_only_Artistic_1_0(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-only", "Artistic-1.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_2_1_only_Artistic_1_0_Perl(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-only", "Artistic-1.0-Perl") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_2_1_only_Artistic_2_0(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-only", "Artistic-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_2_1_only_BSD_1_Clause(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-only", "BSD-1-Clause") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_2_1_only_BSD_2_Clause(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-only", "BSD-2-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_2_1_only_BSD_2_Clause_Patent(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-only", "BSD-2-Clause-Patent") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_2_1_only_BSD_3_Clause(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-only", "BSD-3-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_2_1_only_BSD_4_Clause(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-only", "BSD-4-Clause") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_2_1_only_BSD_4_Clause_UC(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-only", "BSD-4-Clause-UC") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_2_1_only_BSD_Source_Code(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-only", "BSD-Source-Code") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_2_1_only_BSL_1_0(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-only", "BSL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_2_1_only_CC0_1_0(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-only", "CC0-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_2_1_only_CDDL_1_0(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-only", "CDDL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_2_1_only_CDDL_1_1(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-only", "CDDL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_2_1_only_CPL_1_0(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-only", "CPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_2_1_only_EFL_2_0(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-only", "EFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_2_1_only_EPL_1_0(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-only", "EPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_2_1_only_EPL_2_0(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-only", "EPL-2.0") == osadl_matrix.OSADLCompatibility.CHECKDEP
    

    def test_LGPL_2_1_only_EUPL_1_1(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-only", "EUPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_2_1_only_EUPL_1_2(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-only", "EUPL-1.2") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_2_1_only_FSFAP(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-only", "FSFAP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_2_1_only_FSFULLR(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-only", "FSFULLR") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_2_1_only_FTL(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-only", "FTL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_2_1_only_GPL_1_0_only(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-only", "GPL-1.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_2_1_only_GPL_1_0_or_later(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-only", "GPL-1.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_2_1_only_GPL_2_0_only(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-only", "GPL-2.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_2_1_only_GPL_2_0_only_WITH_Classpath_exception_2_0(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-only", "GPL-2.0-only WITH Classpath-exception-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_2_1_only_GPL_2_0_or_later(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-only", "GPL-2.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_2_1_only_GPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-only", "GPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_2_1_only_GPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-only", "GPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_2_1_only_HPND(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-only", "HPND") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_2_1_only_IBM_pibs(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-only", "IBM-pibs") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_2_1_only_ICU(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-only", "ICU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_2_1_only_IJG(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-only", "IJG") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_2_1_only_IPL_1_0(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-only", "IPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_2_1_only_ISC(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-only", "ISC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_2_1_only_Info_ZIP(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-only", "Info-ZIP") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_2_1_only_LGPL_2_1_only(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-only", "LGPL-2.1-only") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_2_1_only_LGPL_2_1_or_later(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-only", "LGPL-2.1-or-later") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_2_1_only_LGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-only", "LGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_2_1_only_LGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-only", "LGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_2_1_only_Libpng(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-only", "Libpng") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_2_1_only_MIT(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-only", "MIT") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_2_1_only_MIT_CMU(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-only", "MIT-CMU") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_2_1_only_MPL_1_1(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-only", "MPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_2_1_only_MPL_2_0(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-only", "MPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_2_1_only_MPL_2_0_no_copyleft_exception(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-only", "MPL-2.0-no-copyleft-exception") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_2_1_only_MS_PL(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-only", "MS-PL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_2_1_only_MS_RL(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-only", "MS-RL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_2_1_only_MirOS(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-only", "MirOS") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_2_1_only_NBPL_1_0(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-only", "NBPL-1.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_2_1_only_NTP(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-only", "NTP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_2_1_only_OSL_3_0(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-only", "OSL-3.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_2_1_only_OpenSSL(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-only", "OpenSSL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_2_1_only_PHP_3_01(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-only", "PHP-3.01") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_2_1_only_PostgreSQL(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-only", "PostgreSQL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_2_1_only_Python_2_0(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-only", "Python-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_2_1_only_Qhull(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-only", "Qhull") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_2_1_only_RSA_MD(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-only", "RSA-MD") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_2_1_only_Sleepycat(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-only", "Sleepycat") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_2_1_only_SunPro(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-only", "SunPro") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_2_1_only_UPL_1_0(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-only", "UPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_2_1_only_Unicode_DFS_2015(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-only", "Unicode-DFS-2015") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_2_1_only_Unicode_DFS_2016(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-only", "Unicode-DFS-2016") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_2_1_only_Unlicense(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-only", "Unlicense") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_2_1_only_W3C(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-only", "W3C") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_2_1_only_W3C_19980720(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-only", "W3C-19980720") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_2_1_only_W3C_20150513(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-only", "W3C-20150513") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_2_1_only_WTFPL(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-only", "WTFPL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_2_1_only_X11(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-only", "X11") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_2_1_only_XFree86_1_1(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-only", "XFree86-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_2_1_only_ZPL_2_0(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-only", "ZPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_2_1_only_Zlib(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-only", "Zlib") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_2_1_only_bzip2_1_0_5(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-only", "bzip2-1.0.5") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_2_1_only_bzip2_1_0_6(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-only", "bzip2-1.0.6") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_2_1_only_curl(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-only", "curl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_2_1_only_libtiff(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-only", "libtiff") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_2_1_only_zlib_acknowledgement(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-only", "zlib-acknowledgement") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_2_1_or_later_0BSD(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-or-later", "0BSD") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_2_1_or_later_AFL_2_0(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-or-later", "AFL-2.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_2_1_or_later_AFL_2_1(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-or-later", "AFL-2.1") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_2_1_or_later_AFL_3_0(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-or-later", "AFL-3.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_2_1_or_later_AGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-or-later", "AGPL-3.0-only") == osadl_matrix.OSADLCompatibility.CHECKDEP
    

    def test_LGPL_2_1_or_later_AGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-or-later", "AGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.CHECKDEP
    

    def test_LGPL_2_1_or_later_Apache_1_0(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-or-later", "Apache-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_2_1_or_later_Apache_1_1(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-or-later", "Apache-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_2_1_or_later_Apache_2_0(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-or-later", "Apache-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_2_1_or_later_Artistic_1_0(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-or-later", "Artistic-1.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_2_1_or_later_Artistic_1_0_Perl(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-or-later", "Artistic-1.0-Perl") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_2_1_or_later_Artistic_2_0(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-or-later", "Artistic-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_2_1_or_later_BSD_1_Clause(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-or-later", "BSD-1-Clause") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_2_1_or_later_BSD_2_Clause(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-or-later", "BSD-2-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_2_1_or_later_BSD_2_Clause_Patent(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-or-later", "BSD-2-Clause-Patent") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_2_1_or_later_BSD_3_Clause(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-or-later", "BSD-3-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_2_1_or_later_BSD_4_Clause(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-or-later", "BSD-4-Clause") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_2_1_or_later_BSD_4_Clause_UC(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-or-later", "BSD-4-Clause-UC") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_2_1_or_later_BSD_Source_Code(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-or-later", "BSD-Source-Code") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_2_1_or_later_BSL_1_0(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-or-later", "BSL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_2_1_or_later_CC0_1_0(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-or-later", "CC0-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_2_1_or_later_CDDL_1_0(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-or-later", "CDDL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_2_1_or_later_CDDL_1_1(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-or-later", "CDDL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_2_1_or_later_CPL_1_0(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-or-later", "CPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_2_1_or_later_EFL_2_0(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-or-later", "EFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_2_1_or_later_EPL_1_0(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-or-later", "EPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_2_1_or_later_EPL_2_0(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-or-later", "EPL-2.0") == osadl_matrix.OSADLCompatibility.CHECKDEP
    

    def test_LGPL_2_1_or_later_EUPL_1_1(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-or-later", "EUPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_2_1_or_later_EUPL_1_2(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-or-later", "EUPL-1.2") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_2_1_or_later_FSFAP(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-or-later", "FSFAP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_2_1_or_later_FSFULLR(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-or-later", "FSFULLR") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_2_1_or_later_FTL(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-or-later", "FTL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_2_1_or_later_GPL_1_0_only(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-or-later", "GPL-1.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_2_1_or_later_GPL_1_0_or_later(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-or-later", "GPL-1.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_2_1_or_later_GPL_2_0_only(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-or-later", "GPL-2.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_2_1_or_later_GPL_2_0_only_WITH_Classpath_exception_2_0(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-or-later", "GPL-2.0-only WITH Classpath-exception-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_2_1_or_later_GPL_2_0_or_later(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-or-later", "GPL-2.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_2_1_or_later_GPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-or-later", "GPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_2_1_or_later_GPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-or-later", "GPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_2_1_or_later_HPND(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-or-later", "HPND") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_2_1_or_later_IBM_pibs(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-or-later", "IBM-pibs") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_2_1_or_later_ICU(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-or-later", "ICU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_2_1_or_later_IJG(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-or-later", "IJG") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_2_1_or_later_IPL_1_0(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-or-later", "IPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_2_1_or_later_ISC(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-or-later", "ISC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_2_1_or_later_Info_ZIP(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-or-later", "Info-ZIP") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_2_1_or_later_LGPL_2_1_only(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-or-later", "LGPL-2.1-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_2_1_or_later_LGPL_2_1_or_later(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-or-later", "LGPL-2.1-or-later") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_2_1_or_later_LGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-or-later", "LGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_2_1_or_later_LGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-or-later", "LGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_2_1_or_later_Libpng(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-or-later", "Libpng") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_2_1_or_later_MIT(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-or-later", "MIT") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_2_1_or_later_MIT_CMU(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-or-later", "MIT-CMU") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_2_1_or_later_MPL_1_1(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-or-later", "MPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_2_1_or_later_MPL_2_0(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-or-later", "MPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_2_1_or_later_MPL_2_0_no_copyleft_exception(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-or-later", "MPL-2.0-no-copyleft-exception") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_2_1_or_later_MS_PL(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-or-later", "MS-PL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_2_1_or_later_MS_RL(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-or-later", "MS-RL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_2_1_or_later_MirOS(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-or-later", "MirOS") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_2_1_or_later_NBPL_1_0(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-or-later", "NBPL-1.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_2_1_or_later_NTP(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-or-later", "NTP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_2_1_or_later_OSL_3_0(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-or-later", "OSL-3.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_2_1_or_later_OpenSSL(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-or-later", "OpenSSL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_2_1_or_later_PHP_3_01(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-or-later", "PHP-3.01") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_2_1_or_later_PostgreSQL(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-or-later", "PostgreSQL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_2_1_or_later_Python_2_0(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-or-later", "Python-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_2_1_or_later_Qhull(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-or-later", "Qhull") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_2_1_or_later_RSA_MD(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-or-later", "RSA-MD") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_2_1_or_later_Sleepycat(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-or-later", "Sleepycat") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_2_1_or_later_SunPro(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-or-later", "SunPro") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_2_1_or_later_UPL_1_0(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-or-later", "UPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_2_1_or_later_Unicode_DFS_2015(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-or-later", "Unicode-DFS-2015") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_2_1_or_later_Unicode_DFS_2016(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-or-later", "Unicode-DFS-2016") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_2_1_or_later_Unlicense(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-or-later", "Unlicense") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_2_1_or_later_W3C(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-or-later", "W3C") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_2_1_or_later_W3C_19980720(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-or-later", "W3C-19980720") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_2_1_or_later_W3C_20150513(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-or-later", "W3C-20150513") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_2_1_or_later_WTFPL(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-or-later", "WTFPL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_2_1_or_later_X11(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-or-later", "X11") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_2_1_or_later_XFree86_1_1(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-or-later", "XFree86-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_2_1_or_later_ZPL_2_0(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-or-later", "ZPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_2_1_or_later_Zlib(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-or-later", "Zlib") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_2_1_or_later_bzip2_1_0_5(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-or-later", "bzip2-1.0.5") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_2_1_or_later_bzip2_1_0_6(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-or-later", "bzip2-1.0.6") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_2_1_or_later_curl(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-or-later", "curl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_2_1_or_later_libtiff(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-or-later", "libtiff") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_2_1_or_later_zlib_acknowledgement(self):        
        assert osadl_matrix.get_compatibility("LGPL-2.1-or-later", "zlib-acknowledgement") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_3_0_only_0BSD(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-only", "0BSD") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_3_0_only_AFL_2_0(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-only", "AFL-2.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_3_0_only_AFL_2_1(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-only", "AFL-2.1") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_3_0_only_AFL_3_0(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-only", "AFL-3.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_3_0_only_AGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-only", "AGPL-3.0-only") == osadl_matrix.OSADLCompatibility.CHECKDEP
    

    def test_LGPL_3_0_only_AGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-only", "AGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.CHECKDEP
    

    def test_LGPL_3_0_only_Apache_1_0(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-only", "Apache-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_3_0_only_Apache_1_1(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-only", "Apache-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_3_0_only_Apache_2_0(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-only", "Apache-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_3_0_only_Artistic_1_0(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-only", "Artistic-1.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_3_0_only_Artistic_1_0_Perl(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-only", "Artistic-1.0-Perl") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_3_0_only_Artistic_2_0(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-only", "Artistic-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_3_0_only_BSD_1_Clause(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-only", "BSD-1-Clause") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_3_0_only_BSD_2_Clause(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-only", "BSD-2-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_3_0_only_BSD_2_Clause_Patent(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-only", "BSD-2-Clause-Patent") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_3_0_only_BSD_3_Clause(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-only", "BSD-3-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_3_0_only_BSD_4_Clause(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-only", "BSD-4-Clause") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_3_0_only_BSD_4_Clause_UC(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-only", "BSD-4-Clause-UC") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_3_0_only_BSD_Source_Code(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-only", "BSD-Source-Code") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_3_0_only_BSL_1_0(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-only", "BSL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_3_0_only_CC0_1_0(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-only", "CC0-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_3_0_only_CDDL_1_0(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-only", "CDDL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_3_0_only_CDDL_1_1(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-only", "CDDL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_3_0_only_CPL_1_0(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-only", "CPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_3_0_only_EFL_2_0(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-only", "EFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_3_0_only_EPL_1_0(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-only", "EPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_3_0_only_EPL_2_0(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-only", "EPL-2.0") == osadl_matrix.OSADLCompatibility.CHECKDEP
    

    def test_LGPL_3_0_only_EUPL_1_1(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-only", "EUPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_3_0_only_EUPL_1_2(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-only", "EUPL-1.2") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_3_0_only_FSFAP(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-only", "FSFAP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_3_0_only_FSFULLR(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-only", "FSFULLR") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_3_0_only_FTL(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-only", "FTL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_3_0_only_GPL_1_0_only(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-only", "GPL-1.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_3_0_only_GPL_1_0_or_later(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-only", "GPL-1.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_3_0_only_GPL_2_0_only(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-only", "GPL-2.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_3_0_only_GPL_2_0_only_WITH_Classpath_exception_2_0(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-only", "GPL-2.0-only WITH Classpath-exception-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_3_0_only_GPL_2_0_or_later(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-only", "GPL-2.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_3_0_only_GPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-only", "GPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_3_0_only_GPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-only", "GPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_3_0_only_HPND(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-only", "HPND") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_3_0_only_IBM_pibs(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-only", "IBM-pibs") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_3_0_only_ICU(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-only", "ICU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_3_0_only_IJG(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-only", "IJG") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_3_0_only_IPL_1_0(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-only", "IPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_3_0_only_ISC(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-only", "ISC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_3_0_only_Info_ZIP(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-only", "Info-ZIP") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_3_0_only_LGPL_2_1_only(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-only", "LGPL-2.1-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_3_0_only_LGPL_2_1_or_later(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-only", "LGPL-2.1-or-later") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_3_0_only_LGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-only", "LGPL-3.0-only") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_3_0_only_LGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-only", "LGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_3_0_only_Libpng(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-only", "Libpng") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_3_0_only_MIT(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-only", "MIT") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_3_0_only_MIT_CMU(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-only", "MIT-CMU") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_3_0_only_MPL_1_1(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-only", "MPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_3_0_only_MPL_2_0(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-only", "MPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_3_0_only_MPL_2_0_no_copyleft_exception(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-only", "MPL-2.0-no-copyleft-exception") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_3_0_only_MS_PL(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-only", "MS-PL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_3_0_only_MS_RL(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-only", "MS-RL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_3_0_only_MirOS(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-only", "MirOS") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_3_0_only_NBPL_1_0(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-only", "NBPL-1.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_3_0_only_NTP(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-only", "NTP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_3_0_only_OSL_3_0(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-only", "OSL-3.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_3_0_only_OpenSSL(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-only", "OpenSSL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_3_0_only_PHP_3_01(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-only", "PHP-3.01") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_3_0_only_PostgreSQL(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-only", "PostgreSQL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_3_0_only_Python_2_0(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-only", "Python-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_3_0_only_Qhull(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-only", "Qhull") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_3_0_only_RSA_MD(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-only", "RSA-MD") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_3_0_only_Sleepycat(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-only", "Sleepycat") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_3_0_only_SunPro(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-only", "SunPro") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_3_0_only_UPL_1_0(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-only", "UPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_3_0_only_Unicode_DFS_2015(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-only", "Unicode-DFS-2015") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_3_0_only_Unicode_DFS_2016(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-only", "Unicode-DFS-2016") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_3_0_only_Unlicense(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-only", "Unlicense") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_3_0_only_W3C(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-only", "W3C") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_3_0_only_W3C_19980720(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-only", "W3C-19980720") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_3_0_only_W3C_20150513(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-only", "W3C-20150513") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_3_0_only_WTFPL(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-only", "WTFPL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_3_0_only_X11(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-only", "X11") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_3_0_only_XFree86_1_1(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-only", "XFree86-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_3_0_only_ZPL_2_0(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-only", "ZPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_3_0_only_Zlib(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-only", "Zlib") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_3_0_only_bzip2_1_0_5(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-only", "bzip2-1.0.5") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_3_0_only_bzip2_1_0_6(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-only", "bzip2-1.0.6") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_3_0_only_curl(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-only", "curl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_3_0_only_libtiff(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-only", "libtiff") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_3_0_only_zlib_acknowledgement(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-only", "zlib-acknowledgement") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_3_0_or_later_0BSD(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-or-later", "0BSD") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_3_0_or_later_AFL_2_0(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-or-later", "AFL-2.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_3_0_or_later_AFL_2_1(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-or-later", "AFL-2.1") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_3_0_or_later_AFL_3_0(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-or-later", "AFL-3.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_3_0_or_later_AGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-or-later", "AGPL-3.0-only") == osadl_matrix.OSADLCompatibility.CHECKDEP
    

    def test_LGPL_3_0_or_later_AGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-or-later", "AGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.CHECKDEP
    

    def test_LGPL_3_0_or_later_Apache_1_0(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-or-later", "Apache-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_3_0_or_later_Apache_1_1(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-or-later", "Apache-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_3_0_or_later_Apache_2_0(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-or-later", "Apache-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_3_0_or_later_Artistic_1_0(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-or-later", "Artistic-1.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_3_0_or_later_Artistic_1_0_Perl(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-or-later", "Artistic-1.0-Perl") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_3_0_or_later_Artistic_2_0(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-or-later", "Artistic-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_3_0_or_later_BSD_1_Clause(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-or-later", "BSD-1-Clause") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_3_0_or_later_BSD_2_Clause(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-or-later", "BSD-2-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_3_0_or_later_BSD_2_Clause_Patent(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-or-later", "BSD-2-Clause-Patent") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_3_0_or_later_BSD_3_Clause(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-or-later", "BSD-3-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_3_0_or_later_BSD_4_Clause(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-or-later", "BSD-4-Clause") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_3_0_or_later_BSD_4_Clause_UC(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-or-later", "BSD-4-Clause-UC") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_3_0_or_later_BSD_Source_Code(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-or-later", "BSD-Source-Code") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_3_0_or_later_BSL_1_0(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-or-later", "BSL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_3_0_or_later_CC0_1_0(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-or-later", "CC0-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_3_0_or_later_CDDL_1_0(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-or-later", "CDDL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_3_0_or_later_CDDL_1_1(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-or-later", "CDDL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_3_0_or_later_CPL_1_0(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-or-later", "CPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_3_0_or_later_EFL_2_0(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-or-later", "EFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_3_0_or_later_EPL_1_0(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-or-later", "EPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_3_0_or_later_EPL_2_0(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-or-later", "EPL-2.0") == osadl_matrix.OSADLCompatibility.CHECKDEP
    

    def test_LGPL_3_0_or_later_EUPL_1_1(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-or-later", "EUPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_3_0_or_later_EUPL_1_2(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-or-later", "EUPL-1.2") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_3_0_or_later_FSFAP(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-or-later", "FSFAP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_3_0_or_later_FSFULLR(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-or-later", "FSFULLR") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_3_0_or_later_FTL(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-or-later", "FTL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_3_0_or_later_GPL_1_0_only(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-or-later", "GPL-1.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_3_0_or_later_GPL_1_0_or_later(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-or-later", "GPL-1.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_3_0_or_later_GPL_2_0_only(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-or-later", "GPL-2.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_3_0_or_later_GPL_2_0_only_WITH_Classpath_exception_2_0(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-or-later", "GPL-2.0-only WITH Classpath-exception-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_3_0_or_later_GPL_2_0_or_later(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-or-later", "GPL-2.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_3_0_or_later_GPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-or-later", "GPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_3_0_or_later_GPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-or-later", "GPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_3_0_or_later_HPND(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-or-later", "HPND") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_3_0_or_later_IBM_pibs(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-or-later", "IBM-pibs") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_3_0_or_later_ICU(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-or-later", "ICU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_3_0_or_later_IJG(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-or-later", "IJG") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_3_0_or_later_IPL_1_0(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-or-later", "IPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_3_0_or_later_ISC(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-or-later", "ISC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_3_0_or_later_Info_ZIP(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-or-later", "Info-ZIP") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_3_0_or_later_LGPL_2_1_only(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-or-later", "LGPL-2.1-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_3_0_or_later_LGPL_2_1_or_later(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-or-later", "LGPL-2.1-or-later") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_3_0_or_later_LGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-or-later", "LGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_3_0_or_later_LGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-or-later", "LGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_3_0_or_later_Libpng(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-or-later", "Libpng") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_3_0_or_later_MIT(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-or-later", "MIT") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_3_0_or_later_MIT_CMU(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-or-later", "MIT-CMU") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_3_0_or_later_MPL_1_1(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-or-later", "MPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_3_0_or_later_MPL_2_0(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-or-later", "MPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_3_0_or_later_MPL_2_0_no_copyleft_exception(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-or-later", "MPL-2.0-no-copyleft-exception") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_3_0_or_later_MS_PL(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-or-later", "MS-PL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_3_0_or_later_MS_RL(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-or-later", "MS-RL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_3_0_or_later_MirOS(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-or-later", "MirOS") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_3_0_or_later_NBPL_1_0(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-or-later", "NBPL-1.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_3_0_or_later_NTP(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-or-later", "NTP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_3_0_or_later_OSL_3_0(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-or-later", "OSL-3.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_3_0_or_later_OpenSSL(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-or-later", "OpenSSL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_3_0_or_later_PHP_3_01(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-or-later", "PHP-3.01") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_3_0_or_later_PostgreSQL(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-or-later", "PostgreSQL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_3_0_or_later_Python_2_0(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-or-later", "Python-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_3_0_or_later_Qhull(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-or-later", "Qhull") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_3_0_or_later_RSA_MD(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-or-later", "RSA-MD") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_3_0_or_later_Sleepycat(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-or-later", "Sleepycat") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_3_0_or_later_SunPro(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-or-later", "SunPro") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_3_0_or_later_UPL_1_0(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-or-later", "UPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_3_0_or_later_Unicode_DFS_2015(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-or-later", "Unicode-DFS-2015") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_3_0_or_later_Unicode_DFS_2016(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-or-later", "Unicode-DFS-2016") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_3_0_or_later_Unlicense(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-or-later", "Unlicense") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_3_0_or_later_W3C(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-or-later", "W3C") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_3_0_or_later_W3C_19980720(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-or-later", "W3C-19980720") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_3_0_or_later_W3C_20150513(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-or-later", "W3C-20150513") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_3_0_or_later_WTFPL(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-or-later", "WTFPL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_3_0_or_later_X11(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-or-later", "X11") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_3_0_or_later_XFree86_1_1(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-or-later", "XFree86-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_LGPL_3_0_or_later_ZPL_2_0(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-or-later", "ZPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_3_0_or_later_Zlib(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-or-later", "Zlib") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_3_0_or_later_bzip2_1_0_5(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-or-later", "bzip2-1.0.5") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_3_0_or_later_bzip2_1_0_6(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-or-later", "bzip2-1.0.6") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_3_0_or_later_curl(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-or-later", "curl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_LGPL_3_0_or_later_libtiff(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-or-later", "libtiff") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_LGPL_3_0_or_later_zlib_acknowledgement(self):        
        assert osadl_matrix.get_compatibility("LGPL-3.0-or-later", "zlib-acknowledgement") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Libpng_0BSD(self):        
        assert osadl_matrix.get_compatibility("Libpng", "0BSD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Libpng_AFL_2_0(self):        
        assert osadl_matrix.get_compatibility("Libpng", "AFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Libpng_AFL_2_1(self):        
        assert osadl_matrix.get_compatibility("Libpng", "AFL-2.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Libpng_AFL_3_0(self):        
        assert osadl_matrix.get_compatibility("Libpng", "AFL-3.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Libpng_AGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("Libpng", "AGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Libpng_AGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("Libpng", "AGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Libpng_Apache_1_0(self):        
        assert osadl_matrix.get_compatibility("Libpng", "Apache-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Libpng_Apache_1_1(self):        
        assert osadl_matrix.get_compatibility("Libpng", "Apache-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Libpng_Apache_2_0(self):        
        assert osadl_matrix.get_compatibility("Libpng", "Apache-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Libpng_Artistic_1_0(self):        
        assert osadl_matrix.get_compatibility("Libpng", "Artistic-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Libpng_Artistic_1_0_Perl(self):        
        assert osadl_matrix.get_compatibility("Libpng", "Artistic-1.0-Perl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Libpng_Artistic_2_0(self):        
        assert osadl_matrix.get_compatibility("Libpng", "Artistic-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Libpng_BSD_1_Clause(self):        
        assert osadl_matrix.get_compatibility("Libpng", "BSD-1-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Libpng_BSD_2_Clause(self):        
        assert osadl_matrix.get_compatibility("Libpng", "BSD-2-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Libpng_BSD_2_Clause_Patent(self):        
        assert osadl_matrix.get_compatibility("Libpng", "BSD-2-Clause-Patent") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Libpng_BSD_3_Clause(self):        
        assert osadl_matrix.get_compatibility("Libpng", "BSD-3-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Libpng_BSD_4_Clause(self):        
        assert osadl_matrix.get_compatibility("Libpng", "BSD-4-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Libpng_BSD_4_Clause_UC(self):        
        assert osadl_matrix.get_compatibility("Libpng", "BSD-4-Clause-UC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Libpng_BSD_Source_Code(self):        
        assert osadl_matrix.get_compatibility("Libpng", "BSD-Source-Code") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Libpng_BSL_1_0(self):        
        assert osadl_matrix.get_compatibility("Libpng", "BSL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Libpng_CC0_1_0(self):        
        assert osadl_matrix.get_compatibility("Libpng", "CC0-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Libpng_CDDL_1_0(self):        
        assert osadl_matrix.get_compatibility("Libpng", "CDDL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Libpng_CDDL_1_1(self):        
        assert osadl_matrix.get_compatibility("Libpng", "CDDL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Libpng_CPL_1_0(self):        
        assert osadl_matrix.get_compatibility("Libpng", "CPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Libpng_EFL_2_0(self):        
        assert osadl_matrix.get_compatibility("Libpng", "EFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Libpng_EPL_1_0(self):        
        assert osadl_matrix.get_compatibility("Libpng", "EPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Libpng_EPL_2_0(self):        
        assert osadl_matrix.get_compatibility("Libpng", "EPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Libpng_EUPL_1_1(self):        
        assert osadl_matrix.get_compatibility("Libpng", "EUPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Libpng_EUPL_1_2(self):        
        assert osadl_matrix.get_compatibility("Libpng", "EUPL-1.2") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Libpng_FSFAP(self):        
        assert osadl_matrix.get_compatibility("Libpng", "FSFAP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Libpng_FSFULLR(self):        
        assert osadl_matrix.get_compatibility("Libpng", "FSFULLR") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Libpng_FTL(self):        
        assert osadl_matrix.get_compatibility("Libpng", "FTL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Libpng_GPL_1_0_only(self):        
        assert osadl_matrix.get_compatibility("Libpng", "GPL-1.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Libpng_GPL_1_0_or_later(self):        
        assert osadl_matrix.get_compatibility("Libpng", "GPL-1.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Libpng_GPL_2_0_only(self):        
        assert osadl_matrix.get_compatibility("Libpng", "GPL-2.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Libpng_GPL_2_0_only_WITH_Classpath_exception_2_0(self):        
        assert osadl_matrix.get_compatibility("Libpng", "GPL-2.0-only WITH Classpath-exception-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Libpng_GPL_2_0_or_later(self):        
        assert osadl_matrix.get_compatibility("Libpng", "GPL-2.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Libpng_GPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("Libpng", "GPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Libpng_GPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("Libpng", "GPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Libpng_HPND(self):        
        assert osadl_matrix.get_compatibility("Libpng", "HPND") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Libpng_IBM_pibs(self):        
        assert osadl_matrix.get_compatibility("Libpng", "IBM-pibs") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Libpng_ICU(self):        
        assert osadl_matrix.get_compatibility("Libpng", "ICU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Libpng_IJG(self):        
        assert osadl_matrix.get_compatibility("Libpng", "IJG") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Libpng_IPL_1_0(self):        
        assert osadl_matrix.get_compatibility("Libpng", "IPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Libpng_ISC(self):        
        assert osadl_matrix.get_compatibility("Libpng", "ISC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Libpng_Info_ZIP(self):        
        assert osadl_matrix.get_compatibility("Libpng", "Info-ZIP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Libpng_LGPL_2_1_only(self):        
        assert osadl_matrix.get_compatibility("Libpng", "LGPL-2.1-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Libpng_LGPL_2_1_or_later(self):        
        assert osadl_matrix.get_compatibility("Libpng", "LGPL-2.1-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Libpng_LGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("Libpng", "LGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Libpng_LGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("Libpng", "LGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Libpng_Libpng(self):        
        assert osadl_matrix.get_compatibility("Libpng", "Libpng") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Libpng_MIT(self):        
        assert osadl_matrix.get_compatibility("Libpng", "MIT") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Libpng_MIT_CMU(self):        
        assert osadl_matrix.get_compatibility("Libpng", "MIT-CMU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Libpng_MPL_1_1(self):        
        assert osadl_matrix.get_compatibility("Libpng", "MPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Libpng_MPL_2_0(self):        
        assert osadl_matrix.get_compatibility("Libpng", "MPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Libpng_MPL_2_0_no_copyleft_exception(self):        
        assert osadl_matrix.get_compatibility("Libpng", "MPL-2.0-no-copyleft-exception") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Libpng_MS_PL(self):        
        assert osadl_matrix.get_compatibility("Libpng", "MS-PL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_Libpng_MS_RL(self):        
        assert osadl_matrix.get_compatibility("Libpng", "MS-RL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Libpng_MirOS(self):        
        assert osadl_matrix.get_compatibility("Libpng", "MirOS") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Libpng_NBPL_1_0(self):        
        assert osadl_matrix.get_compatibility("Libpng", "NBPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Libpng_NTP(self):        
        assert osadl_matrix.get_compatibility("Libpng", "NTP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Libpng_OSL_3_0(self):        
        assert osadl_matrix.get_compatibility("Libpng", "OSL-3.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Libpng_OpenSSL(self):        
        assert osadl_matrix.get_compatibility("Libpng", "OpenSSL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_Libpng_PHP_3_01(self):        
        assert osadl_matrix.get_compatibility("Libpng", "PHP-3.01") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Libpng_PostgreSQL(self):        
        assert osadl_matrix.get_compatibility("Libpng", "PostgreSQL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Libpng_Python_2_0(self):        
        assert osadl_matrix.get_compatibility("Libpng", "Python-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Libpng_Qhull(self):        
        assert osadl_matrix.get_compatibility("Libpng", "Qhull") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Libpng_RSA_MD(self):        
        assert osadl_matrix.get_compatibility("Libpng", "RSA-MD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Libpng_Sleepycat(self):        
        assert osadl_matrix.get_compatibility("Libpng", "Sleepycat") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Libpng_SunPro(self):        
        assert osadl_matrix.get_compatibility("Libpng", "SunPro") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Libpng_UPL_1_0(self):        
        assert osadl_matrix.get_compatibility("Libpng", "UPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Libpng_Unicode_DFS_2015(self):        
        assert osadl_matrix.get_compatibility("Libpng", "Unicode-DFS-2015") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Libpng_Unicode_DFS_2016(self):        
        assert osadl_matrix.get_compatibility("Libpng", "Unicode-DFS-2016") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Libpng_Unlicense(self):        
        assert osadl_matrix.get_compatibility("Libpng", "Unlicense") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Libpng_W3C(self):        
        assert osadl_matrix.get_compatibility("Libpng", "W3C") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Libpng_W3C_19980720(self):        
        assert osadl_matrix.get_compatibility("Libpng", "W3C-19980720") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Libpng_W3C_20150513(self):        
        assert osadl_matrix.get_compatibility("Libpng", "W3C-20150513") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Libpng_WTFPL(self):        
        assert osadl_matrix.get_compatibility("Libpng", "WTFPL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Libpng_X11(self):        
        assert osadl_matrix.get_compatibility("Libpng", "X11") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Libpng_XFree86_1_1(self):        
        assert osadl_matrix.get_compatibility("Libpng", "XFree86-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Libpng_ZPL_2_0(self):        
        assert osadl_matrix.get_compatibility("Libpng", "ZPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Libpng_Zlib(self):        
        assert osadl_matrix.get_compatibility("Libpng", "Zlib") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Libpng_bzip2_1_0_5(self):        
        assert osadl_matrix.get_compatibility("Libpng", "bzip2-1.0.5") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Libpng_bzip2_1_0_6(self):        
        assert osadl_matrix.get_compatibility("Libpng", "bzip2-1.0.6") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Libpng_curl(self):        
        assert osadl_matrix.get_compatibility("Libpng", "curl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Libpng_libtiff(self):        
        assert osadl_matrix.get_compatibility("Libpng", "libtiff") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Libpng_zlib_acknowledgement(self):        
        assert osadl_matrix.get_compatibility("Libpng", "zlib-acknowledgement") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_0BSD(self):        
        assert osadl_matrix.get_compatibility("MIT", "0BSD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_AFL_2_0(self):        
        assert osadl_matrix.get_compatibility("MIT", "AFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_AFL_2_1(self):        
        assert osadl_matrix.get_compatibility("MIT", "AFL-2.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_AFL_3_0(self):        
        assert osadl_matrix.get_compatibility("MIT", "AFL-3.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_AGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("MIT", "AGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MIT_AGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("MIT", "AGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MIT_Apache_1_0(self):        
        assert osadl_matrix.get_compatibility("MIT", "Apache-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_Apache_1_1(self):        
        assert osadl_matrix.get_compatibility("MIT", "Apache-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_Apache_2_0(self):        
        assert osadl_matrix.get_compatibility("MIT", "Apache-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_Artistic_1_0(self):        
        assert osadl_matrix.get_compatibility("MIT", "Artistic-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_Artistic_1_0_Perl(self):        
        assert osadl_matrix.get_compatibility("MIT", "Artistic-1.0-Perl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_Artistic_2_0(self):        
        assert osadl_matrix.get_compatibility("MIT", "Artistic-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_BSD_1_Clause(self):        
        assert osadl_matrix.get_compatibility("MIT", "BSD-1-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_BSD_2_Clause(self):        
        assert osadl_matrix.get_compatibility("MIT", "BSD-2-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_BSD_2_Clause_Patent(self):        
        assert osadl_matrix.get_compatibility("MIT", "BSD-2-Clause-Patent") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_BSD_3_Clause(self):        
        assert osadl_matrix.get_compatibility("MIT", "BSD-3-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_BSD_4_Clause(self):        
        assert osadl_matrix.get_compatibility("MIT", "BSD-4-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_BSD_4_Clause_UC(self):        
        assert osadl_matrix.get_compatibility("MIT", "BSD-4-Clause-UC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_BSD_Source_Code(self):        
        assert osadl_matrix.get_compatibility("MIT", "BSD-Source-Code") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_BSL_1_0(self):        
        assert osadl_matrix.get_compatibility("MIT", "BSL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_CC0_1_0(self):        
        assert osadl_matrix.get_compatibility("MIT", "CC0-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_CDDL_1_0(self):        
        assert osadl_matrix.get_compatibility("MIT", "CDDL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MIT_CDDL_1_1(self):        
        assert osadl_matrix.get_compatibility("MIT", "CDDL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MIT_CPL_1_0(self):        
        assert osadl_matrix.get_compatibility("MIT", "CPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MIT_EFL_2_0(self):        
        assert osadl_matrix.get_compatibility("MIT", "EFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_EPL_1_0(self):        
        assert osadl_matrix.get_compatibility("MIT", "EPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MIT_EPL_2_0(self):        
        assert osadl_matrix.get_compatibility("MIT", "EPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MIT_EUPL_1_1(self):        
        assert osadl_matrix.get_compatibility("MIT", "EUPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MIT_EUPL_1_2(self):        
        assert osadl_matrix.get_compatibility("MIT", "EUPL-1.2") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MIT_FSFAP(self):        
        assert osadl_matrix.get_compatibility("MIT", "FSFAP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_FSFULLR(self):        
        assert osadl_matrix.get_compatibility("MIT", "FSFULLR") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_FTL(self):        
        assert osadl_matrix.get_compatibility("MIT", "FTL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_GPL_1_0_only(self):        
        assert osadl_matrix.get_compatibility("MIT", "GPL-1.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MIT_GPL_1_0_or_later(self):        
        assert osadl_matrix.get_compatibility("MIT", "GPL-1.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MIT_GPL_2_0_only(self):        
        assert osadl_matrix.get_compatibility("MIT", "GPL-2.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MIT_GPL_2_0_only_WITH_Classpath_exception_2_0(self):        
        assert osadl_matrix.get_compatibility("MIT", "GPL-2.0-only WITH Classpath-exception-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MIT_GPL_2_0_or_later(self):        
        assert osadl_matrix.get_compatibility("MIT", "GPL-2.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MIT_GPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("MIT", "GPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MIT_GPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("MIT", "GPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MIT_HPND(self):        
        assert osadl_matrix.get_compatibility("MIT", "HPND") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_IBM_pibs(self):        
        assert osadl_matrix.get_compatibility("MIT", "IBM-pibs") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_ICU(self):        
        assert osadl_matrix.get_compatibility("MIT", "ICU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_IJG(self):        
        assert osadl_matrix.get_compatibility("MIT", "IJG") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_IPL_1_0(self):        
        assert osadl_matrix.get_compatibility("MIT", "IPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MIT_ISC(self):        
        assert osadl_matrix.get_compatibility("MIT", "ISC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_Info_ZIP(self):        
        assert osadl_matrix.get_compatibility("MIT", "Info-ZIP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_LGPL_2_1_only(self):        
        assert osadl_matrix.get_compatibility("MIT", "LGPL-2.1-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MIT_LGPL_2_1_or_later(self):        
        assert osadl_matrix.get_compatibility("MIT", "LGPL-2.1-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MIT_LGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("MIT", "LGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MIT_LGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("MIT", "LGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MIT_Libpng(self):        
        assert osadl_matrix.get_compatibility("MIT", "Libpng") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_MIT(self):        
        assert osadl_matrix.get_compatibility("MIT", "MIT") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_MIT_CMU(self):        
        assert osadl_matrix.get_compatibility("MIT", "MIT-CMU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_MPL_1_1(self):        
        assert osadl_matrix.get_compatibility("MIT", "MPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MIT_MPL_2_0(self):        
        assert osadl_matrix.get_compatibility("MIT", "MPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MIT_MPL_2_0_no_copyleft_exception(self):        
        assert osadl_matrix.get_compatibility("MIT", "MPL-2.0-no-copyleft-exception") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MIT_MS_PL(self):        
        assert osadl_matrix.get_compatibility("MIT", "MS-PL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MIT_MS_RL(self):        
        assert osadl_matrix.get_compatibility("MIT", "MS-RL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MIT_MirOS(self):        
        assert osadl_matrix.get_compatibility("MIT", "MirOS") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_NBPL_1_0(self):        
        assert osadl_matrix.get_compatibility("MIT", "NBPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_NTP(self):        
        assert osadl_matrix.get_compatibility("MIT", "NTP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_OSL_3_0(self):        
        assert osadl_matrix.get_compatibility("MIT", "OSL-3.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MIT_OpenSSL(self):        
        assert osadl_matrix.get_compatibility("MIT", "OpenSSL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MIT_PHP_3_01(self):        
        assert osadl_matrix.get_compatibility("MIT", "PHP-3.01") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_PostgreSQL(self):        
        assert osadl_matrix.get_compatibility("MIT", "PostgreSQL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_Python_2_0(self):        
        assert osadl_matrix.get_compatibility("MIT", "Python-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_Qhull(self):        
        assert osadl_matrix.get_compatibility("MIT", "Qhull") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_RSA_MD(self):        
        assert osadl_matrix.get_compatibility("MIT", "RSA-MD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_Sleepycat(self):        
        assert osadl_matrix.get_compatibility("MIT", "Sleepycat") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MIT_SunPro(self):        
        assert osadl_matrix.get_compatibility("MIT", "SunPro") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_UPL_1_0(self):        
        assert osadl_matrix.get_compatibility("MIT", "UPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_Unicode_DFS_2015(self):        
        assert osadl_matrix.get_compatibility("MIT", "Unicode-DFS-2015") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_Unicode_DFS_2016(self):        
        assert osadl_matrix.get_compatibility("MIT", "Unicode-DFS-2016") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_Unlicense(self):        
        assert osadl_matrix.get_compatibility("MIT", "Unlicense") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_W3C(self):        
        assert osadl_matrix.get_compatibility("MIT", "W3C") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_W3C_19980720(self):        
        assert osadl_matrix.get_compatibility("MIT", "W3C-19980720") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_W3C_20150513(self):        
        assert osadl_matrix.get_compatibility("MIT", "W3C-20150513") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_WTFPL(self):        
        assert osadl_matrix.get_compatibility("MIT", "WTFPL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_X11(self):        
        assert osadl_matrix.get_compatibility("MIT", "X11") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_XFree86_1_1(self):        
        assert osadl_matrix.get_compatibility("MIT", "XFree86-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_ZPL_2_0(self):        
        assert osadl_matrix.get_compatibility("MIT", "ZPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_Zlib(self):        
        assert osadl_matrix.get_compatibility("MIT", "Zlib") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_bzip2_1_0_5(self):        
        assert osadl_matrix.get_compatibility("MIT", "bzip2-1.0.5") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_bzip2_1_0_6(self):        
        assert osadl_matrix.get_compatibility("MIT", "bzip2-1.0.6") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_curl(self):        
        assert osadl_matrix.get_compatibility("MIT", "curl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_libtiff(self):        
        assert osadl_matrix.get_compatibility("MIT", "libtiff") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_zlib_acknowledgement(self):        
        assert osadl_matrix.get_compatibility("MIT", "zlib-acknowledgement") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_CMU_0BSD(self):        
        assert osadl_matrix.get_compatibility("MIT-CMU", "0BSD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_CMU_AFL_2_0(self):        
        assert osadl_matrix.get_compatibility("MIT-CMU", "AFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_CMU_AFL_2_1(self):        
        assert osadl_matrix.get_compatibility("MIT-CMU", "AFL-2.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_CMU_AFL_3_0(self):        
        assert osadl_matrix.get_compatibility("MIT-CMU", "AFL-3.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_CMU_AGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("MIT-CMU", "AGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MIT_CMU_AGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("MIT-CMU", "AGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MIT_CMU_Apache_1_0(self):        
        assert osadl_matrix.get_compatibility("MIT-CMU", "Apache-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_CMU_Apache_1_1(self):        
        assert osadl_matrix.get_compatibility("MIT-CMU", "Apache-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_CMU_Apache_2_0(self):        
        assert osadl_matrix.get_compatibility("MIT-CMU", "Apache-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_CMU_Artistic_1_0(self):        
        assert osadl_matrix.get_compatibility("MIT-CMU", "Artistic-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_CMU_Artistic_1_0_Perl(self):        
        assert osadl_matrix.get_compatibility("MIT-CMU", "Artistic-1.0-Perl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_CMU_Artistic_2_0(self):        
        assert osadl_matrix.get_compatibility("MIT-CMU", "Artistic-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_CMU_BSD_1_Clause(self):        
        assert osadl_matrix.get_compatibility("MIT-CMU", "BSD-1-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_CMU_BSD_2_Clause(self):        
        assert osadl_matrix.get_compatibility("MIT-CMU", "BSD-2-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_CMU_BSD_2_Clause_Patent(self):        
        assert osadl_matrix.get_compatibility("MIT-CMU", "BSD-2-Clause-Patent") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_CMU_BSD_3_Clause(self):        
        assert osadl_matrix.get_compatibility("MIT-CMU", "BSD-3-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_CMU_BSD_4_Clause(self):        
        assert osadl_matrix.get_compatibility("MIT-CMU", "BSD-4-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_CMU_BSD_4_Clause_UC(self):        
        assert osadl_matrix.get_compatibility("MIT-CMU", "BSD-4-Clause-UC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_CMU_BSD_Source_Code(self):        
        assert osadl_matrix.get_compatibility("MIT-CMU", "BSD-Source-Code") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_CMU_BSL_1_0(self):        
        assert osadl_matrix.get_compatibility("MIT-CMU", "BSL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_CMU_CC0_1_0(self):        
        assert osadl_matrix.get_compatibility("MIT-CMU", "CC0-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_CMU_CDDL_1_0(self):        
        assert osadl_matrix.get_compatibility("MIT-CMU", "CDDL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MIT_CMU_CDDL_1_1(self):        
        assert osadl_matrix.get_compatibility("MIT-CMU", "CDDL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MIT_CMU_CPL_1_0(self):        
        assert osadl_matrix.get_compatibility("MIT-CMU", "CPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MIT_CMU_EFL_2_0(self):        
        assert osadl_matrix.get_compatibility("MIT-CMU", "EFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_CMU_EPL_1_0(self):        
        assert osadl_matrix.get_compatibility("MIT-CMU", "EPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MIT_CMU_EPL_2_0(self):        
        assert osadl_matrix.get_compatibility("MIT-CMU", "EPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MIT_CMU_EUPL_1_1(self):        
        assert osadl_matrix.get_compatibility("MIT-CMU", "EUPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MIT_CMU_EUPL_1_2(self):        
        assert osadl_matrix.get_compatibility("MIT-CMU", "EUPL-1.2") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MIT_CMU_FSFAP(self):        
        assert osadl_matrix.get_compatibility("MIT-CMU", "FSFAP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_CMU_FSFULLR(self):        
        assert osadl_matrix.get_compatibility("MIT-CMU", "FSFULLR") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_CMU_FTL(self):        
        assert osadl_matrix.get_compatibility("MIT-CMU", "FTL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_CMU_GPL_1_0_only(self):        
        assert osadl_matrix.get_compatibility("MIT-CMU", "GPL-1.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MIT_CMU_GPL_1_0_or_later(self):        
        assert osadl_matrix.get_compatibility("MIT-CMU", "GPL-1.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MIT_CMU_GPL_2_0_only(self):        
        assert osadl_matrix.get_compatibility("MIT-CMU", "GPL-2.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MIT_CMU_GPL_2_0_only_WITH_Classpath_exception_2_0(self):        
        assert osadl_matrix.get_compatibility("MIT-CMU", "GPL-2.0-only WITH Classpath-exception-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MIT_CMU_GPL_2_0_or_later(self):        
        assert osadl_matrix.get_compatibility("MIT-CMU", "GPL-2.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MIT_CMU_GPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("MIT-CMU", "GPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MIT_CMU_GPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("MIT-CMU", "GPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MIT_CMU_HPND(self):        
        assert osadl_matrix.get_compatibility("MIT-CMU", "HPND") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_CMU_IBM_pibs(self):        
        assert osadl_matrix.get_compatibility("MIT-CMU", "IBM-pibs") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_CMU_ICU(self):        
        assert osadl_matrix.get_compatibility("MIT-CMU", "ICU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_CMU_IJG(self):        
        assert osadl_matrix.get_compatibility("MIT-CMU", "IJG") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_CMU_IPL_1_0(self):        
        assert osadl_matrix.get_compatibility("MIT-CMU", "IPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MIT_CMU_ISC(self):        
        assert osadl_matrix.get_compatibility("MIT-CMU", "ISC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_CMU_Info_ZIP(self):        
        assert osadl_matrix.get_compatibility("MIT-CMU", "Info-ZIP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_CMU_LGPL_2_1_only(self):        
        assert osadl_matrix.get_compatibility("MIT-CMU", "LGPL-2.1-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MIT_CMU_LGPL_2_1_or_later(self):        
        assert osadl_matrix.get_compatibility("MIT-CMU", "LGPL-2.1-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MIT_CMU_LGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("MIT-CMU", "LGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MIT_CMU_LGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("MIT-CMU", "LGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MIT_CMU_Libpng(self):        
        assert osadl_matrix.get_compatibility("MIT-CMU", "Libpng") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_CMU_MIT(self):        
        assert osadl_matrix.get_compatibility("MIT-CMU", "MIT") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_CMU_MIT_CMU(self):        
        assert osadl_matrix.get_compatibility("MIT-CMU", "MIT-CMU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_CMU_MPL_1_1(self):        
        assert osadl_matrix.get_compatibility("MIT-CMU", "MPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MIT_CMU_MPL_2_0(self):        
        assert osadl_matrix.get_compatibility("MIT-CMU", "MPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MIT_CMU_MPL_2_0_no_copyleft_exception(self):        
        assert osadl_matrix.get_compatibility("MIT-CMU", "MPL-2.0-no-copyleft-exception") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MIT_CMU_MS_PL(self):        
        assert osadl_matrix.get_compatibility("MIT-CMU", "MS-PL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MIT_CMU_MS_RL(self):        
        assert osadl_matrix.get_compatibility("MIT-CMU", "MS-RL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MIT_CMU_MirOS(self):        
        assert osadl_matrix.get_compatibility("MIT-CMU", "MirOS") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_CMU_NBPL_1_0(self):        
        assert osadl_matrix.get_compatibility("MIT-CMU", "NBPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_CMU_NTP(self):        
        assert osadl_matrix.get_compatibility("MIT-CMU", "NTP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_CMU_OSL_3_0(self):        
        assert osadl_matrix.get_compatibility("MIT-CMU", "OSL-3.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MIT_CMU_OpenSSL(self):        
        assert osadl_matrix.get_compatibility("MIT-CMU", "OpenSSL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MIT_CMU_PHP_3_01(self):        
        assert osadl_matrix.get_compatibility("MIT-CMU", "PHP-3.01") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_CMU_PostgreSQL(self):        
        assert osadl_matrix.get_compatibility("MIT-CMU", "PostgreSQL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_CMU_Python_2_0(self):        
        assert osadl_matrix.get_compatibility("MIT-CMU", "Python-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_CMU_Qhull(self):        
        assert osadl_matrix.get_compatibility("MIT-CMU", "Qhull") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_CMU_RSA_MD(self):        
        assert osadl_matrix.get_compatibility("MIT-CMU", "RSA-MD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_CMU_Sleepycat(self):        
        assert osadl_matrix.get_compatibility("MIT-CMU", "Sleepycat") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MIT_CMU_SunPro(self):        
        assert osadl_matrix.get_compatibility("MIT-CMU", "SunPro") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_CMU_UPL_1_0(self):        
        assert osadl_matrix.get_compatibility("MIT-CMU", "UPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_CMU_Unicode_DFS_2015(self):        
        assert osadl_matrix.get_compatibility("MIT-CMU", "Unicode-DFS-2015") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_CMU_Unicode_DFS_2016(self):        
        assert osadl_matrix.get_compatibility("MIT-CMU", "Unicode-DFS-2016") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_CMU_Unlicense(self):        
        assert osadl_matrix.get_compatibility("MIT-CMU", "Unlicense") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_CMU_W3C(self):        
        assert osadl_matrix.get_compatibility("MIT-CMU", "W3C") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_CMU_W3C_19980720(self):        
        assert osadl_matrix.get_compatibility("MIT-CMU", "W3C-19980720") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_CMU_W3C_20150513(self):        
        assert osadl_matrix.get_compatibility("MIT-CMU", "W3C-20150513") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_CMU_WTFPL(self):        
        assert osadl_matrix.get_compatibility("MIT-CMU", "WTFPL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_CMU_X11(self):        
        assert osadl_matrix.get_compatibility("MIT-CMU", "X11") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_CMU_XFree86_1_1(self):        
        assert osadl_matrix.get_compatibility("MIT-CMU", "XFree86-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_CMU_ZPL_2_0(self):        
        assert osadl_matrix.get_compatibility("MIT-CMU", "ZPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_CMU_Zlib(self):        
        assert osadl_matrix.get_compatibility("MIT-CMU", "Zlib") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_CMU_bzip2_1_0_5(self):        
        assert osadl_matrix.get_compatibility("MIT-CMU", "bzip2-1.0.5") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_CMU_bzip2_1_0_6(self):        
        assert osadl_matrix.get_compatibility("MIT-CMU", "bzip2-1.0.6") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_CMU_curl(self):        
        assert osadl_matrix.get_compatibility("MIT-CMU", "curl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_CMU_libtiff(self):        
        assert osadl_matrix.get_compatibility("MIT-CMU", "libtiff") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MIT_CMU_zlib_acknowledgement(self):        
        assert osadl_matrix.get_compatibility("MIT-CMU", "zlib-acknowledgement") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MPL_1_1_0BSD(self):        
        assert osadl_matrix.get_compatibility("MPL-1.1", "0BSD") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_1_1_AFL_2_0(self):        
        assert osadl_matrix.get_compatibility("MPL-1.1", "AFL-2.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_1_1_AFL_2_1(self):        
        assert osadl_matrix.get_compatibility("MPL-1.1", "AFL-2.1") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_1_1_AFL_3_0(self):        
        assert osadl_matrix.get_compatibility("MPL-1.1", "AFL-3.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_1_1_AGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("MPL-1.1", "AGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MPL_1_1_AGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("MPL-1.1", "AGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MPL_1_1_Apache_1_0(self):        
        assert osadl_matrix.get_compatibility("MPL-1.1", "Apache-1.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_1_1_Apache_1_1(self):        
        assert osadl_matrix.get_compatibility("MPL-1.1", "Apache-1.1") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_1_1_Apache_2_0(self):        
        assert osadl_matrix.get_compatibility("MPL-1.1", "Apache-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MPL_1_1_Artistic_1_0(self):        
        assert osadl_matrix.get_compatibility("MPL-1.1", "Artistic-1.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_1_1_Artistic_1_0_Perl(self):        
        assert osadl_matrix.get_compatibility("MPL-1.1", "Artistic-1.0-Perl") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_1_1_Artistic_2_0(self):        
        assert osadl_matrix.get_compatibility("MPL-1.1", "Artistic-2.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_1_1_BSD_1_Clause(self):        
        assert osadl_matrix.get_compatibility("MPL-1.1", "BSD-1-Clause") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_1_1_BSD_2_Clause(self):        
        assert osadl_matrix.get_compatibility("MPL-1.1", "BSD-2-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MPL_1_1_BSD_2_Clause_Patent(self):        
        assert osadl_matrix.get_compatibility("MPL-1.1", "BSD-2-Clause-Patent") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MPL_1_1_BSD_3_Clause(self):        
        assert osadl_matrix.get_compatibility("MPL-1.1", "BSD-3-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MPL_1_1_BSD_4_Clause(self):        
        assert osadl_matrix.get_compatibility("MPL-1.1", "BSD-4-Clause") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_1_1_BSD_4_Clause_UC(self):        
        assert osadl_matrix.get_compatibility("MPL-1.1", "BSD-4-Clause-UC") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_1_1_BSD_Source_Code(self):        
        assert osadl_matrix.get_compatibility("MPL-1.1", "BSD-Source-Code") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_1_1_BSL_1_0(self):        
        assert osadl_matrix.get_compatibility("MPL-1.1", "BSL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MPL_1_1_CC0_1_0(self):        
        assert osadl_matrix.get_compatibility("MPL-1.1", "CC0-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MPL_1_1_CDDL_1_0(self):        
        assert osadl_matrix.get_compatibility("MPL-1.1", "CDDL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MPL_1_1_CDDL_1_1(self):        
        assert osadl_matrix.get_compatibility("MPL-1.1", "CDDL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MPL_1_1_CPL_1_0(self):        
        assert osadl_matrix.get_compatibility("MPL-1.1", "CPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MPL_1_1_EFL_2_0(self):        
        assert osadl_matrix.get_compatibility("MPL-1.1", "EFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MPL_1_1_EPL_1_0(self):        
        assert osadl_matrix.get_compatibility("MPL-1.1", "EPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MPL_1_1_EPL_2_0(self):        
        assert osadl_matrix.get_compatibility("MPL-1.1", "EPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MPL_1_1_EUPL_1_1(self):        
        assert osadl_matrix.get_compatibility("MPL-1.1", "EUPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MPL_1_1_EUPL_1_2(self):        
        assert osadl_matrix.get_compatibility("MPL-1.1", "EUPL-1.2") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MPL_1_1_FSFAP(self):        
        assert osadl_matrix.get_compatibility("MPL-1.1", "FSFAP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MPL_1_1_FSFULLR(self):        
        assert osadl_matrix.get_compatibility("MPL-1.1", "FSFULLR") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MPL_1_1_FTL(self):        
        assert osadl_matrix.get_compatibility("MPL-1.1", "FTL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_1_1_GPL_1_0_only(self):        
        assert osadl_matrix.get_compatibility("MPL-1.1", "GPL-1.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MPL_1_1_GPL_1_0_or_later(self):        
        assert osadl_matrix.get_compatibility("MPL-1.1", "GPL-1.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MPL_1_1_GPL_2_0_only(self):        
        assert osadl_matrix.get_compatibility("MPL-1.1", "GPL-2.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MPL_1_1_GPL_2_0_only_WITH_Classpath_exception_2_0(self):        
        assert osadl_matrix.get_compatibility("MPL-1.1", "GPL-2.0-only WITH Classpath-exception-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MPL_1_1_GPL_2_0_or_later(self):        
        assert osadl_matrix.get_compatibility("MPL-1.1", "GPL-2.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MPL_1_1_GPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("MPL-1.1", "GPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MPL_1_1_GPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("MPL-1.1", "GPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MPL_1_1_HPND(self):        
        assert osadl_matrix.get_compatibility("MPL-1.1", "HPND") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_1_1_IBM_pibs(self):        
        assert osadl_matrix.get_compatibility("MPL-1.1", "IBM-pibs") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MPL_1_1_ICU(self):        
        assert osadl_matrix.get_compatibility("MPL-1.1", "ICU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MPL_1_1_IJG(self):        
        assert osadl_matrix.get_compatibility("MPL-1.1", "IJG") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_1_1_IPL_1_0(self):        
        assert osadl_matrix.get_compatibility("MPL-1.1", "IPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MPL_1_1_ISC(self):        
        assert osadl_matrix.get_compatibility("MPL-1.1", "ISC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MPL_1_1_Info_ZIP(self):        
        assert osadl_matrix.get_compatibility("MPL-1.1", "Info-ZIP") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_1_1_LGPL_2_1_only(self):        
        assert osadl_matrix.get_compatibility("MPL-1.1", "LGPL-2.1-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MPL_1_1_LGPL_2_1_or_later(self):        
        assert osadl_matrix.get_compatibility("MPL-1.1", "LGPL-2.1-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MPL_1_1_LGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("MPL-1.1", "LGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MPL_1_1_LGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("MPL-1.1", "LGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MPL_1_1_Libpng(self):        
        assert osadl_matrix.get_compatibility("MPL-1.1", "Libpng") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MPL_1_1_MIT(self):        
        assert osadl_matrix.get_compatibility("MPL-1.1", "MIT") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MPL_1_1_MIT_CMU(self):        
        assert osadl_matrix.get_compatibility("MPL-1.1", "MIT-CMU") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_1_1_MPL_1_1(self):        
        assert osadl_matrix.get_compatibility("MPL-1.1", "MPL-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MPL_1_1_MPL_2_0(self):        
        assert osadl_matrix.get_compatibility("MPL-1.1", "MPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MPL_1_1_MPL_2_0_no_copyleft_exception(self):        
        assert osadl_matrix.get_compatibility("MPL-1.1", "MPL-2.0-no-copyleft-exception") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MPL_1_1_MS_PL(self):        
        assert osadl_matrix.get_compatibility("MPL-1.1", "MS-PL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_1_1_MS_RL(self):        
        assert osadl_matrix.get_compatibility("MPL-1.1", "MS-RL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MPL_1_1_MirOS(self):        
        assert osadl_matrix.get_compatibility("MPL-1.1", "MirOS") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_1_1_NBPL_1_0(self):        
        assert osadl_matrix.get_compatibility("MPL-1.1", "NBPL-1.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_1_1_NTP(self):        
        assert osadl_matrix.get_compatibility("MPL-1.1", "NTP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MPL_1_1_OSL_3_0(self):        
        assert osadl_matrix.get_compatibility("MPL-1.1", "OSL-3.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MPL_1_1_OpenSSL(self):        
        assert osadl_matrix.get_compatibility("MPL-1.1", "OpenSSL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_1_1_PHP_3_01(self):        
        assert osadl_matrix.get_compatibility("MPL-1.1", "PHP-3.01") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_1_1_PostgreSQL(self):        
        assert osadl_matrix.get_compatibility("MPL-1.1", "PostgreSQL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_1_1_Python_2_0(self):        
        assert osadl_matrix.get_compatibility("MPL-1.1", "Python-2.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_1_1_Qhull(self):        
        assert osadl_matrix.get_compatibility("MPL-1.1", "Qhull") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_1_1_RSA_MD(self):        
        assert osadl_matrix.get_compatibility("MPL-1.1", "RSA-MD") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_1_1_Sleepycat(self):        
        assert osadl_matrix.get_compatibility("MPL-1.1", "Sleepycat") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MPL_1_1_SunPro(self):        
        assert osadl_matrix.get_compatibility("MPL-1.1", "SunPro") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_1_1_UPL_1_0(self):        
        assert osadl_matrix.get_compatibility("MPL-1.1", "UPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MPL_1_1_Unicode_DFS_2015(self):        
        assert osadl_matrix.get_compatibility("MPL-1.1", "Unicode-DFS-2015") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_1_1_Unicode_DFS_2016(self):        
        assert osadl_matrix.get_compatibility("MPL-1.1", "Unicode-DFS-2016") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_1_1_Unlicense(self):        
        assert osadl_matrix.get_compatibility("MPL-1.1", "Unlicense") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MPL_1_1_W3C(self):        
        assert osadl_matrix.get_compatibility("MPL-1.1", "W3C") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_1_1_W3C_19980720(self):        
        assert osadl_matrix.get_compatibility("MPL-1.1", "W3C-19980720") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_1_1_W3C_20150513(self):        
        assert osadl_matrix.get_compatibility("MPL-1.1", "W3C-20150513") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_1_1_WTFPL(self):        
        assert osadl_matrix.get_compatibility("MPL-1.1", "WTFPL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MPL_1_1_X11(self):        
        assert osadl_matrix.get_compatibility("MPL-1.1", "X11") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MPL_1_1_XFree86_1_1(self):        
        assert osadl_matrix.get_compatibility("MPL-1.1", "XFree86-1.1") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_1_1_ZPL_2_0(self):        
        assert osadl_matrix.get_compatibility("MPL-1.1", "ZPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MPL_1_1_Zlib(self):        
        assert osadl_matrix.get_compatibility("MPL-1.1", "Zlib") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MPL_1_1_bzip2_1_0_5(self):        
        assert osadl_matrix.get_compatibility("MPL-1.1", "bzip2-1.0.5") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MPL_1_1_bzip2_1_0_6(self):        
        assert osadl_matrix.get_compatibility("MPL-1.1", "bzip2-1.0.6") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MPL_1_1_curl(self):        
        assert osadl_matrix.get_compatibility("MPL-1.1", "curl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MPL_1_1_libtiff(self):        
        assert osadl_matrix.get_compatibility("MPL-1.1", "libtiff") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_1_1_zlib_acknowledgement(self):        
        assert osadl_matrix.get_compatibility("MPL-1.1", "zlib-acknowledgement") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_2_0_0BSD(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0", "0BSD") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_2_0_AFL_2_0(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0", "AFL-2.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_2_0_AFL_2_1(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0", "AFL-2.1") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_2_0_AFL_3_0(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0", "AFL-3.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_2_0_AGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0", "AGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MPL_2_0_AGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0", "AGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MPL_2_0_Apache_1_0(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0", "Apache-1.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_2_0_Apache_1_1(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0", "Apache-1.1") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_2_0_Apache_2_0(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0", "Apache-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MPL_2_0_Artistic_1_0(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0", "Artistic-1.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_2_0_Artistic_1_0_Perl(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0", "Artistic-1.0-Perl") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_2_0_Artistic_2_0(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0", "Artistic-2.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_2_0_BSD_1_Clause(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0", "BSD-1-Clause") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_2_0_BSD_2_Clause(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0", "BSD-2-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MPL_2_0_BSD_2_Clause_Patent(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0", "BSD-2-Clause-Patent") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MPL_2_0_BSD_3_Clause(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0", "BSD-3-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MPL_2_0_BSD_4_Clause(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0", "BSD-4-Clause") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_2_0_BSD_4_Clause_UC(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0", "BSD-4-Clause-UC") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_2_0_BSD_Source_Code(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0", "BSD-Source-Code") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_2_0_BSL_1_0(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0", "BSL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MPL_2_0_CC0_1_0(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0", "CC0-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MPL_2_0_CDDL_1_0(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0", "CDDL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MPL_2_0_CDDL_1_1(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0", "CDDL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MPL_2_0_CPL_1_0(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0", "CPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MPL_2_0_EFL_2_0(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0", "EFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MPL_2_0_EPL_1_0(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0", "EPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MPL_2_0_EPL_2_0(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0", "EPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MPL_2_0_EUPL_1_1(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0", "EUPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MPL_2_0_EUPL_1_2(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0", "EUPL-1.2") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MPL_2_0_FSFAP(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0", "FSFAP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MPL_2_0_FSFULLR(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0", "FSFULLR") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MPL_2_0_FTL(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0", "FTL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_2_0_GPL_1_0_only(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0", "GPL-1.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MPL_2_0_GPL_1_0_or_later(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0", "GPL-1.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MPL_2_0_GPL_2_0_only(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0", "GPL-2.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MPL_2_0_GPL_2_0_only_WITH_Classpath_exception_2_0(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0", "GPL-2.0-only WITH Classpath-exception-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MPL_2_0_GPL_2_0_or_later(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0", "GPL-2.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MPL_2_0_GPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0", "GPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MPL_2_0_GPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0", "GPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MPL_2_0_HPND(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0", "HPND") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_2_0_IBM_pibs(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0", "IBM-pibs") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MPL_2_0_ICU(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0", "ICU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MPL_2_0_IJG(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0", "IJG") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_2_0_IPL_1_0(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0", "IPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MPL_2_0_ISC(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0", "ISC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MPL_2_0_Info_ZIP(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0", "Info-ZIP") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_2_0_LGPL_2_1_only(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0", "LGPL-2.1-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MPL_2_0_LGPL_2_1_or_later(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0", "LGPL-2.1-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MPL_2_0_LGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0", "LGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MPL_2_0_LGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0", "LGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MPL_2_0_Libpng(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0", "Libpng") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MPL_2_0_MIT(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0", "MIT") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MPL_2_0_MIT_CMU(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0", "MIT-CMU") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_2_0_MPL_1_1(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0", "MPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MPL_2_0_MPL_2_0(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0", "MPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MPL_2_0_MPL_2_0_no_copyleft_exception(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0", "MPL-2.0-no-copyleft-exception") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MPL_2_0_MS_PL(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0", "MS-PL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_2_0_MS_RL(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0", "MS-RL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MPL_2_0_MirOS(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0", "MirOS") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_2_0_NBPL_1_0(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0", "NBPL-1.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_2_0_NTP(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0", "NTP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MPL_2_0_OSL_3_0(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0", "OSL-3.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MPL_2_0_OpenSSL(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0", "OpenSSL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_2_0_PHP_3_01(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0", "PHP-3.01") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_2_0_PostgreSQL(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0", "PostgreSQL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_2_0_Python_2_0(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0", "Python-2.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_2_0_Qhull(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0", "Qhull") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_2_0_RSA_MD(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0", "RSA-MD") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_2_0_Sleepycat(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0", "Sleepycat") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MPL_2_0_SunPro(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0", "SunPro") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_2_0_UPL_1_0(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0", "UPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MPL_2_0_Unicode_DFS_2015(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0", "Unicode-DFS-2015") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_2_0_Unicode_DFS_2016(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0", "Unicode-DFS-2016") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_2_0_Unlicense(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0", "Unlicense") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MPL_2_0_W3C(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0", "W3C") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_2_0_W3C_19980720(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0", "W3C-19980720") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_2_0_W3C_20150513(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0", "W3C-20150513") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_2_0_WTFPL(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0", "WTFPL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MPL_2_0_X11(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0", "X11") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MPL_2_0_XFree86_1_1(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0", "XFree86-1.1") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_2_0_ZPL_2_0(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0", "ZPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MPL_2_0_Zlib(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0", "Zlib") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MPL_2_0_bzip2_1_0_5(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0", "bzip2-1.0.5") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MPL_2_0_bzip2_1_0_6(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0", "bzip2-1.0.6") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MPL_2_0_curl(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0", "curl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MPL_2_0_libtiff(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0", "libtiff") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_2_0_zlib_acknowledgement(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0", "zlib-acknowledgement") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_2_0_no_copyleft_exception_0BSD(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0-no-copyleft-exception", "0BSD") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_2_0_no_copyleft_exception_AFL_2_0(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0-no-copyleft-exception", "AFL-2.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_2_0_no_copyleft_exception_AFL_2_1(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0-no-copyleft-exception", "AFL-2.1") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_2_0_no_copyleft_exception_AFL_3_0(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0-no-copyleft-exception", "AFL-3.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_2_0_no_copyleft_exception_AGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0-no-copyleft-exception", "AGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MPL_2_0_no_copyleft_exception_AGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0-no-copyleft-exception", "AGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MPL_2_0_no_copyleft_exception_Apache_1_0(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0-no-copyleft-exception", "Apache-1.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_2_0_no_copyleft_exception_Apache_1_1(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0-no-copyleft-exception", "Apache-1.1") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_2_0_no_copyleft_exception_Apache_2_0(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0-no-copyleft-exception", "Apache-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MPL_2_0_no_copyleft_exception_Artistic_1_0(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0-no-copyleft-exception", "Artistic-1.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_2_0_no_copyleft_exception_Artistic_1_0_Perl(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0-no-copyleft-exception", "Artistic-1.0-Perl") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_2_0_no_copyleft_exception_Artistic_2_0(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0-no-copyleft-exception", "Artistic-2.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_2_0_no_copyleft_exception_BSD_1_Clause(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0-no-copyleft-exception", "BSD-1-Clause") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_2_0_no_copyleft_exception_BSD_2_Clause(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0-no-copyleft-exception", "BSD-2-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MPL_2_0_no_copyleft_exception_BSD_2_Clause_Patent(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0-no-copyleft-exception", "BSD-2-Clause-Patent") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MPL_2_0_no_copyleft_exception_BSD_3_Clause(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0-no-copyleft-exception", "BSD-3-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MPL_2_0_no_copyleft_exception_BSD_4_Clause(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0-no-copyleft-exception", "BSD-4-Clause") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_2_0_no_copyleft_exception_BSD_4_Clause_UC(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0-no-copyleft-exception", "BSD-4-Clause-UC") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_2_0_no_copyleft_exception_BSD_Source_Code(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0-no-copyleft-exception", "BSD-Source-Code") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_2_0_no_copyleft_exception_BSL_1_0(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0-no-copyleft-exception", "BSL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MPL_2_0_no_copyleft_exception_CC0_1_0(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0-no-copyleft-exception", "CC0-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MPL_2_0_no_copyleft_exception_CDDL_1_0(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0-no-copyleft-exception", "CDDL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MPL_2_0_no_copyleft_exception_CDDL_1_1(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0-no-copyleft-exception", "CDDL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MPL_2_0_no_copyleft_exception_CPL_1_0(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0-no-copyleft-exception", "CPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MPL_2_0_no_copyleft_exception_EFL_2_0(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0-no-copyleft-exception", "EFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MPL_2_0_no_copyleft_exception_EPL_1_0(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0-no-copyleft-exception", "EPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MPL_2_0_no_copyleft_exception_EPL_2_0(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0-no-copyleft-exception", "EPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MPL_2_0_no_copyleft_exception_EUPL_1_1(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0-no-copyleft-exception", "EUPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MPL_2_0_no_copyleft_exception_EUPL_1_2(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0-no-copyleft-exception", "EUPL-1.2") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MPL_2_0_no_copyleft_exception_FSFAP(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0-no-copyleft-exception", "FSFAP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MPL_2_0_no_copyleft_exception_FSFULLR(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0-no-copyleft-exception", "FSFULLR") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MPL_2_0_no_copyleft_exception_FTL(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0-no-copyleft-exception", "FTL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_2_0_no_copyleft_exception_GPL_1_0_only(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0-no-copyleft-exception", "GPL-1.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MPL_2_0_no_copyleft_exception_GPL_1_0_or_later(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0-no-copyleft-exception", "GPL-1.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MPL_2_0_no_copyleft_exception_GPL_2_0_only(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0-no-copyleft-exception", "GPL-2.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MPL_2_0_no_copyleft_exception_GPL_2_0_only_WITH_Classpath_exception_2_0(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0-no-copyleft-exception", "GPL-2.0-only WITH Classpath-exception-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MPL_2_0_no_copyleft_exception_GPL_2_0_or_later(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0-no-copyleft-exception", "GPL-2.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MPL_2_0_no_copyleft_exception_GPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0-no-copyleft-exception", "GPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MPL_2_0_no_copyleft_exception_GPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0-no-copyleft-exception", "GPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MPL_2_0_no_copyleft_exception_HPND(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0-no-copyleft-exception", "HPND") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_2_0_no_copyleft_exception_IBM_pibs(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0-no-copyleft-exception", "IBM-pibs") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MPL_2_0_no_copyleft_exception_ICU(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0-no-copyleft-exception", "ICU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MPL_2_0_no_copyleft_exception_IJG(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0-no-copyleft-exception", "IJG") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_2_0_no_copyleft_exception_IPL_1_0(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0-no-copyleft-exception", "IPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MPL_2_0_no_copyleft_exception_ISC(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0-no-copyleft-exception", "ISC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MPL_2_0_no_copyleft_exception_Info_ZIP(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0-no-copyleft-exception", "Info-ZIP") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_2_0_no_copyleft_exception_LGPL_2_1_only(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0-no-copyleft-exception", "LGPL-2.1-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MPL_2_0_no_copyleft_exception_LGPL_2_1_or_later(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0-no-copyleft-exception", "LGPL-2.1-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MPL_2_0_no_copyleft_exception_LGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0-no-copyleft-exception", "LGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MPL_2_0_no_copyleft_exception_LGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0-no-copyleft-exception", "LGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MPL_2_0_no_copyleft_exception_Libpng(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0-no-copyleft-exception", "Libpng") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MPL_2_0_no_copyleft_exception_MIT(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0-no-copyleft-exception", "MIT") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MPL_2_0_no_copyleft_exception_MIT_CMU(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0-no-copyleft-exception", "MIT-CMU") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_2_0_no_copyleft_exception_MPL_1_1(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0-no-copyleft-exception", "MPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MPL_2_0_no_copyleft_exception_MPL_2_0(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0-no-copyleft-exception", "MPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MPL_2_0_no_copyleft_exception_MPL_2_0_no_copyleft_exception(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0-no-copyleft-exception", "MPL-2.0-no-copyleft-exception") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MPL_2_0_no_copyleft_exception_MS_PL(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0-no-copyleft-exception", "MS-PL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_2_0_no_copyleft_exception_MS_RL(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0-no-copyleft-exception", "MS-RL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MPL_2_0_no_copyleft_exception_MirOS(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0-no-copyleft-exception", "MirOS") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_2_0_no_copyleft_exception_NBPL_1_0(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0-no-copyleft-exception", "NBPL-1.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_2_0_no_copyleft_exception_NTP(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0-no-copyleft-exception", "NTP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MPL_2_0_no_copyleft_exception_OSL_3_0(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0-no-copyleft-exception", "OSL-3.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MPL_2_0_no_copyleft_exception_OpenSSL(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0-no-copyleft-exception", "OpenSSL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_2_0_no_copyleft_exception_PHP_3_01(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0-no-copyleft-exception", "PHP-3.01") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_2_0_no_copyleft_exception_PostgreSQL(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0-no-copyleft-exception", "PostgreSQL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_2_0_no_copyleft_exception_Python_2_0(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0-no-copyleft-exception", "Python-2.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_2_0_no_copyleft_exception_Qhull(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0-no-copyleft-exception", "Qhull") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_2_0_no_copyleft_exception_RSA_MD(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0-no-copyleft-exception", "RSA-MD") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_2_0_no_copyleft_exception_Sleepycat(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0-no-copyleft-exception", "Sleepycat") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MPL_2_0_no_copyleft_exception_SunPro(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0-no-copyleft-exception", "SunPro") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_2_0_no_copyleft_exception_UPL_1_0(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0-no-copyleft-exception", "UPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MPL_2_0_no_copyleft_exception_Unicode_DFS_2015(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0-no-copyleft-exception", "Unicode-DFS-2015") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_2_0_no_copyleft_exception_Unicode_DFS_2016(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0-no-copyleft-exception", "Unicode-DFS-2016") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_2_0_no_copyleft_exception_Unlicense(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0-no-copyleft-exception", "Unlicense") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MPL_2_0_no_copyleft_exception_W3C(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0-no-copyleft-exception", "W3C") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_2_0_no_copyleft_exception_W3C_19980720(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0-no-copyleft-exception", "W3C-19980720") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_2_0_no_copyleft_exception_W3C_20150513(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0-no-copyleft-exception", "W3C-20150513") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_2_0_no_copyleft_exception_WTFPL(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0-no-copyleft-exception", "WTFPL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MPL_2_0_no_copyleft_exception_X11(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0-no-copyleft-exception", "X11") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MPL_2_0_no_copyleft_exception_XFree86_1_1(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0-no-copyleft-exception", "XFree86-1.1") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_2_0_no_copyleft_exception_ZPL_2_0(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0-no-copyleft-exception", "ZPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MPL_2_0_no_copyleft_exception_Zlib(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0-no-copyleft-exception", "Zlib") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MPL_2_0_no_copyleft_exception_bzip2_1_0_5(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0-no-copyleft-exception", "bzip2-1.0.5") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MPL_2_0_no_copyleft_exception_bzip2_1_0_6(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0-no-copyleft-exception", "bzip2-1.0.6") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MPL_2_0_no_copyleft_exception_curl(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0-no-copyleft-exception", "curl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MPL_2_0_no_copyleft_exception_libtiff(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0-no-copyleft-exception", "libtiff") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MPL_2_0_no_copyleft_exception_zlib_acknowledgement(self):        
        assert osadl_matrix.get_compatibility("MPL-2.0-no-copyleft-exception", "zlib-acknowledgement") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MS_PL_0BSD(self):        
        assert osadl_matrix.get_compatibility("MS-PL", "0BSD") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MS_PL_AFL_2_0(self):        
        assert osadl_matrix.get_compatibility("MS-PL", "AFL-2.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MS_PL_AFL_2_1(self):        
        assert osadl_matrix.get_compatibility("MS-PL", "AFL-2.1") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MS_PL_AFL_3_0(self):        
        assert osadl_matrix.get_compatibility("MS-PL", "AFL-3.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MS_PL_AGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("MS-PL", "AGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MS_PL_AGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("MS-PL", "AGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MS_PL_Apache_1_0(self):        
        assert osadl_matrix.get_compatibility("MS-PL", "Apache-1.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MS_PL_Apache_1_1(self):        
        assert osadl_matrix.get_compatibility("MS-PL", "Apache-1.1") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MS_PL_Apache_2_0(self):        
        assert osadl_matrix.get_compatibility("MS-PL", "Apache-2.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MS_PL_Artistic_1_0(self):        
        assert osadl_matrix.get_compatibility("MS-PL", "Artistic-1.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MS_PL_Artistic_1_0_Perl(self):        
        assert osadl_matrix.get_compatibility("MS-PL", "Artistic-1.0-Perl") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MS_PL_Artistic_2_0(self):        
        assert osadl_matrix.get_compatibility("MS-PL", "Artistic-2.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MS_PL_BSD_1_Clause(self):        
        assert osadl_matrix.get_compatibility("MS-PL", "BSD-1-Clause") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MS_PL_BSD_2_Clause(self):        
        assert osadl_matrix.get_compatibility("MS-PL", "BSD-2-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MS_PL_BSD_2_Clause_Patent(self):        
        assert osadl_matrix.get_compatibility("MS-PL", "BSD-2-Clause-Patent") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MS_PL_BSD_3_Clause(self):        
        assert osadl_matrix.get_compatibility("MS-PL", "BSD-3-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MS_PL_BSD_4_Clause(self):        
        assert osadl_matrix.get_compatibility("MS-PL", "BSD-4-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MS_PL_BSD_4_Clause_UC(self):        
        assert osadl_matrix.get_compatibility("MS-PL", "BSD-4-Clause-UC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MS_PL_BSD_Source_Code(self):        
        assert osadl_matrix.get_compatibility("MS-PL", "BSD-Source-Code") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MS_PL_BSL_1_0(self):        
        assert osadl_matrix.get_compatibility("MS-PL", "BSL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MS_PL_CC0_1_0(self):        
        assert osadl_matrix.get_compatibility("MS-PL", "CC0-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MS_PL_CDDL_1_0(self):        
        assert osadl_matrix.get_compatibility("MS-PL", "CDDL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MS_PL_CDDL_1_1(self):        
        assert osadl_matrix.get_compatibility("MS-PL", "CDDL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MS_PL_CPL_1_0(self):        
        assert osadl_matrix.get_compatibility("MS-PL", "CPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MS_PL_EFL_2_0(self):        
        assert osadl_matrix.get_compatibility("MS-PL", "EFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MS_PL_EPL_1_0(self):        
        assert osadl_matrix.get_compatibility("MS-PL", "EPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MS_PL_EPL_2_0(self):        
        assert osadl_matrix.get_compatibility("MS-PL", "EPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MS_PL_EUPL_1_1(self):        
        assert osadl_matrix.get_compatibility("MS-PL", "EUPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MS_PL_EUPL_1_2(self):        
        assert osadl_matrix.get_compatibility("MS-PL", "EUPL-1.2") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MS_PL_FSFAP(self):        
        assert osadl_matrix.get_compatibility("MS-PL", "FSFAP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MS_PL_FSFULLR(self):        
        assert osadl_matrix.get_compatibility("MS-PL", "FSFULLR") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MS_PL_FTL(self):        
        assert osadl_matrix.get_compatibility("MS-PL", "FTL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MS_PL_GPL_1_0_only(self):        
        assert osadl_matrix.get_compatibility("MS-PL", "GPL-1.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MS_PL_GPL_1_0_or_later(self):        
        assert osadl_matrix.get_compatibility("MS-PL", "GPL-1.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MS_PL_GPL_2_0_only(self):        
        assert osadl_matrix.get_compatibility("MS-PL", "GPL-2.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MS_PL_GPL_2_0_only_WITH_Classpath_exception_2_0(self):        
        assert osadl_matrix.get_compatibility("MS-PL", "GPL-2.0-only WITH Classpath-exception-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MS_PL_GPL_2_0_or_later(self):        
        assert osadl_matrix.get_compatibility("MS-PL", "GPL-2.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MS_PL_GPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("MS-PL", "GPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MS_PL_GPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("MS-PL", "GPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MS_PL_HPND(self):        
        assert osadl_matrix.get_compatibility("MS-PL", "HPND") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MS_PL_IBM_pibs(self):        
        assert osadl_matrix.get_compatibility("MS-PL", "IBM-pibs") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MS_PL_ICU(self):        
        assert osadl_matrix.get_compatibility("MS-PL", "ICU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MS_PL_IJG(self):        
        assert osadl_matrix.get_compatibility("MS-PL", "IJG") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MS_PL_IPL_1_0(self):        
        assert osadl_matrix.get_compatibility("MS-PL", "IPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MS_PL_ISC(self):        
        assert osadl_matrix.get_compatibility("MS-PL", "ISC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MS_PL_Info_ZIP(self):        
        assert osadl_matrix.get_compatibility("MS-PL", "Info-ZIP") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MS_PL_LGPL_2_1_only(self):        
        assert osadl_matrix.get_compatibility("MS-PL", "LGPL-2.1-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MS_PL_LGPL_2_1_or_later(self):        
        assert osadl_matrix.get_compatibility("MS-PL", "LGPL-2.1-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MS_PL_LGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("MS-PL", "LGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MS_PL_LGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("MS-PL", "LGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MS_PL_Libpng(self):        
        assert osadl_matrix.get_compatibility("MS-PL", "Libpng") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MS_PL_MIT(self):        
        assert osadl_matrix.get_compatibility("MS-PL", "MIT") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MS_PL_MIT_CMU(self):        
        assert osadl_matrix.get_compatibility("MS-PL", "MIT-CMU") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MS_PL_MPL_1_1(self):        
        assert osadl_matrix.get_compatibility("MS-PL", "MPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MS_PL_MPL_2_0(self):        
        assert osadl_matrix.get_compatibility("MS-PL", "MPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MS_PL_MPL_2_0_no_copyleft_exception(self):        
        assert osadl_matrix.get_compatibility("MS-PL", "MPL-2.0-no-copyleft-exception") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MS_PL_MS_PL(self):        
        assert osadl_matrix.get_compatibility("MS-PL", "MS-PL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MS_PL_MS_RL(self):        
        assert osadl_matrix.get_compatibility("MS-PL", "MS-RL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MS_PL_MirOS(self):        
        assert osadl_matrix.get_compatibility("MS-PL", "MirOS") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MS_PL_NBPL_1_0(self):        
        assert osadl_matrix.get_compatibility("MS-PL", "NBPL-1.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MS_PL_NTP(self):        
        assert osadl_matrix.get_compatibility("MS-PL", "NTP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MS_PL_OSL_3_0(self):        
        assert osadl_matrix.get_compatibility("MS-PL", "OSL-3.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MS_PL_OpenSSL(self):        
        assert osadl_matrix.get_compatibility("MS-PL", "OpenSSL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MS_PL_PHP_3_01(self):        
        assert osadl_matrix.get_compatibility("MS-PL", "PHP-3.01") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MS_PL_PostgreSQL(self):        
        assert osadl_matrix.get_compatibility("MS-PL", "PostgreSQL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MS_PL_Python_2_0(self):        
        assert osadl_matrix.get_compatibility("MS-PL", "Python-2.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MS_PL_Qhull(self):        
        assert osadl_matrix.get_compatibility("MS-PL", "Qhull") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MS_PL_RSA_MD(self):        
        assert osadl_matrix.get_compatibility("MS-PL", "RSA-MD") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MS_PL_Sleepycat(self):        
        assert osadl_matrix.get_compatibility("MS-PL", "Sleepycat") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MS_PL_SunPro(self):        
        assert osadl_matrix.get_compatibility("MS-PL", "SunPro") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MS_PL_UPL_1_0(self):        
        assert osadl_matrix.get_compatibility("MS-PL", "UPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MS_PL_Unicode_DFS_2015(self):        
        assert osadl_matrix.get_compatibility("MS-PL", "Unicode-DFS-2015") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MS_PL_Unicode_DFS_2016(self):        
        assert osadl_matrix.get_compatibility("MS-PL", "Unicode-DFS-2016") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MS_PL_Unlicense(self):        
        assert osadl_matrix.get_compatibility("MS-PL", "Unlicense") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MS_PL_W3C(self):        
        assert osadl_matrix.get_compatibility("MS-PL", "W3C") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MS_PL_W3C_19980720(self):        
        assert osadl_matrix.get_compatibility("MS-PL", "W3C-19980720") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MS_PL_W3C_20150513(self):        
        assert osadl_matrix.get_compatibility("MS-PL", "W3C-20150513") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MS_PL_WTFPL(self):        
        assert osadl_matrix.get_compatibility("MS-PL", "WTFPL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MS_PL_X11(self):        
        assert osadl_matrix.get_compatibility("MS-PL", "X11") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MS_PL_XFree86_1_1(self):        
        assert osadl_matrix.get_compatibility("MS-PL", "XFree86-1.1") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MS_PL_ZPL_2_0(self):        
        assert osadl_matrix.get_compatibility("MS-PL", "ZPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MS_PL_Zlib(self):        
        assert osadl_matrix.get_compatibility("MS-PL", "Zlib") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MS_PL_bzip2_1_0_5(self):        
        assert osadl_matrix.get_compatibility("MS-PL", "bzip2-1.0.5") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MS_PL_bzip2_1_0_6(self):        
        assert osadl_matrix.get_compatibility("MS-PL", "bzip2-1.0.6") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MS_PL_curl(self):        
        assert osadl_matrix.get_compatibility("MS-PL", "curl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MS_PL_libtiff(self):        
        assert osadl_matrix.get_compatibility("MS-PL", "libtiff") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MS_PL_zlib_acknowledgement(self):        
        assert osadl_matrix.get_compatibility("MS-PL", "zlib-acknowledgement") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MS_RL_0BSD(self):        
        assert osadl_matrix.get_compatibility("MS-RL", "0BSD") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MS_RL_AFL_2_0(self):        
        assert osadl_matrix.get_compatibility("MS-RL", "AFL-2.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MS_RL_AFL_2_1(self):        
        assert osadl_matrix.get_compatibility("MS-RL", "AFL-2.1") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MS_RL_AFL_3_0(self):        
        assert osadl_matrix.get_compatibility("MS-RL", "AFL-3.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MS_RL_AGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("MS-RL", "AGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MS_RL_AGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("MS-RL", "AGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MS_RL_Apache_1_0(self):        
        assert osadl_matrix.get_compatibility("MS-RL", "Apache-1.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MS_RL_Apache_1_1(self):        
        assert osadl_matrix.get_compatibility("MS-RL", "Apache-1.1") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MS_RL_Apache_2_0(self):        
        assert osadl_matrix.get_compatibility("MS-RL", "Apache-2.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MS_RL_Artistic_1_0(self):        
        assert osadl_matrix.get_compatibility("MS-RL", "Artistic-1.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MS_RL_Artistic_1_0_Perl(self):        
        assert osadl_matrix.get_compatibility("MS-RL", "Artistic-1.0-Perl") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MS_RL_Artistic_2_0(self):        
        assert osadl_matrix.get_compatibility("MS-RL", "Artistic-2.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MS_RL_BSD_1_Clause(self):        
        assert osadl_matrix.get_compatibility("MS-RL", "BSD-1-Clause") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MS_RL_BSD_2_Clause(self):        
        assert osadl_matrix.get_compatibility("MS-RL", "BSD-2-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MS_RL_BSD_2_Clause_Patent(self):        
        assert osadl_matrix.get_compatibility("MS-RL", "BSD-2-Clause-Patent") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MS_RL_BSD_3_Clause(self):        
        assert osadl_matrix.get_compatibility("MS-RL", "BSD-3-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MS_RL_BSD_4_Clause(self):        
        assert osadl_matrix.get_compatibility("MS-RL", "BSD-4-Clause") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MS_RL_BSD_4_Clause_UC(self):        
        assert osadl_matrix.get_compatibility("MS-RL", "BSD-4-Clause-UC") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MS_RL_BSD_Source_Code(self):        
        assert osadl_matrix.get_compatibility("MS-RL", "BSD-Source-Code") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MS_RL_BSL_1_0(self):        
        assert osadl_matrix.get_compatibility("MS-RL", "BSL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MS_RL_CC0_1_0(self):        
        assert osadl_matrix.get_compatibility("MS-RL", "CC0-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MS_RL_CDDL_1_0(self):        
        assert osadl_matrix.get_compatibility("MS-RL", "CDDL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MS_RL_CDDL_1_1(self):        
        assert osadl_matrix.get_compatibility("MS-RL", "CDDL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MS_RL_CPL_1_0(self):        
        assert osadl_matrix.get_compatibility("MS-RL", "CPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MS_RL_EFL_2_0(self):        
        assert osadl_matrix.get_compatibility("MS-RL", "EFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MS_RL_EPL_1_0(self):        
        assert osadl_matrix.get_compatibility("MS-RL", "EPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MS_RL_EPL_2_0(self):        
        assert osadl_matrix.get_compatibility("MS-RL", "EPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MS_RL_EUPL_1_1(self):        
        assert osadl_matrix.get_compatibility("MS-RL", "EUPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MS_RL_EUPL_1_2(self):        
        assert osadl_matrix.get_compatibility("MS-RL", "EUPL-1.2") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MS_RL_FSFAP(self):        
        assert osadl_matrix.get_compatibility("MS-RL", "FSFAP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MS_RL_FSFULLR(self):        
        assert osadl_matrix.get_compatibility("MS-RL", "FSFULLR") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MS_RL_FTL(self):        
        assert osadl_matrix.get_compatibility("MS-RL", "FTL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MS_RL_GPL_1_0_only(self):        
        assert osadl_matrix.get_compatibility("MS-RL", "GPL-1.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MS_RL_GPL_1_0_or_later(self):        
        assert osadl_matrix.get_compatibility("MS-RL", "GPL-1.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MS_RL_GPL_2_0_only(self):        
        assert osadl_matrix.get_compatibility("MS-RL", "GPL-2.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MS_RL_GPL_2_0_only_WITH_Classpath_exception_2_0(self):        
        assert osadl_matrix.get_compatibility("MS-RL", "GPL-2.0-only WITH Classpath-exception-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MS_RL_GPL_2_0_or_later(self):        
        assert osadl_matrix.get_compatibility("MS-RL", "GPL-2.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MS_RL_GPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("MS-RL", "GPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MS_RL_GPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("MS-RL", "GPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MS_RL_HPND(self):        
        assert osadl_matrix.get_compatibility("MS-RL", "HPND") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MS_RL_IBM_pibs(self):        
        assert osadl_matrix.get_compatibility("MS-RL", "IBM-pibs") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MS_RL_ICU(self):        
        assert osadl_matrix.get_compatibility("MS-RL", "ICU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MS_RL_IJG(self):        
        assert osadl_matrix.get_compatibility("MS-RL", "IJG") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MS_RL_IPL_1_0(self):        
        assert osadl_matrix.get_compatibility("MS-RL", "IPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MS_RL_ISC(self):        
        assert osadl_matrix.get_compatibility("MS-RL", "ISC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MS_RL_Info_ZIP(self):        
        assert osadl_matrix.get_compatibility("MS-RL", "Info-ZIP") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MS_RL_LGPL_2_1_only(self):        
        assert osadl_matrix.get_compatibility("MS-RL", "LGPL-2.1-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MS_RL_LGPL_2_1_or_later(self):        
        assert osadl_matrix.get_compatibility("MS-RL", "LGPL-2.1-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MS_RL_LGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("MS-RL", "LGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MS_RL_LGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("MS-RL", "LGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MS_RL_Libpng(self):        
        assert osadl_matrix.get_compatibility("MS-RL", "Libpng") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MS_RL_MIT(self):        
        assert osadl_matrix.get_compatibility("MS-RL", "MIT") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MS_RL_MIT_CMU(self):        
        assert osadl_matrix.get_compatibility("MS-RL", "MIT-CMU") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MS_RL_MPL_1_1(self):        
        assert osadl_matrix.get_compatibility("MS-RL", "MPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MS_RL_MPL_2_0(self):        
        assert osadl_matrix.get_compatibility("MS-RL", "MPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MS_RL_MPL_2_0_no_copyleft_exception(self):        
        assert osadl_matrix.get_compatibility("MS-RL", "MPL-2.0-no-copyleft-exception") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MS_RL_MS_PL(self):        
        assert osadl_matrix.get_compatibility("MS-RL", "MS-PL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MS_RL_MS_RL(self):        
        assert osadl_matrix.get_compatibility("MS-RL", "MS-RL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MS_RL_MirOS(self):        
        assert osadl_matrix.get_compatibility("MS-RL", "MirOS") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MS_RL_NBPL_1_0(self):        
        assert osadl_matrix.get_compatibility("MS-RL", "NBPL-1.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MS_RL_NTP(self):        
        assert osadl_matrix.get_compatibility("MS-RL", "NTP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MS_RL_OSL_3_0(self):        
        assert osadl_matrix.get_compatibility("MS-RL", "OSL-3.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MS_RL_OpenSSL(self):        
        assert osadl_matrix.get_compatibility("MS-RL", "OpenSSL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MS_RL_PHP_3_01(self):        
        assert osadl_matrix.get_compatibility("MS-RL", "PHP-3.01") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MS_RL_PostgreSQL(self):        
        assert osadl_matrix.get_compatibility("MS-RL", "PostgreSQL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MS_RL_Python_2_0(self):        
        assert osadl_matrix.get_compatibility("MS-RL", "Python-2.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MS_RL_Qhull(self):        
        assert osadl_matrix.get_compatibility("MS-RL", "Qhull") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MS_RL_RSA_MD(self):        
        assert osadl_matrix.get_compatibility("MS-RL", "RSA-MD") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MS_RL_Sleepycat(self):        
        assert osadl_matrix.get_compatibility("MS-RL", "Sleepycat") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MS_RL_SunPro(self):        
        assert osadl_matrix.get_compatibility("MS-RL", "SunPro") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MS_RL_UPL_1_0(self):        
        assert osadl_matrix.get_compatibility("MS-RL", "UPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MS_RL_Unicode_DFS_2015(self):        
        assert osadl_matrix.get_compatibility("MS-RL", "Unicode-DFS-2015") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MS_RL_Unicode_DFS_2016(self):        
        assert osadl_matrix.get_compatibility("MS-RL", "Unicode-DFS-2016") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MS_RL_Unlicense(self):        
        assert osadl_matrix.get_compatibility("MS-RL", "Unlicense") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MS_RL_W3C(self):        
        assert osadl_matrix.get_compatibility("MS-RL", "W3C") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MS_RL_W3C_19980720(self):        
        assert osadl_matrix.get_compatibility("MS-RL", "W3C-19980720") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MS_RL_W3C_20150513(self):        
        assert osadl_matrix.get_compatibility("MS-RL", "W3C-20150513") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MS_RL_WTFPL(self):        
        assert osadl_matrix.get_compatibility("MS-RL", "WTFPL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MS_RL_X11(self):        
        assert osadl_matrix.get_compatibility("MS-RL", "X11") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MS_RL_XFree86_1_1(self):        
        assert osadl_matrix.get_compatibility("MS-RL", "XFree86-1.1") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MS_RL_ZPL_2_0(self):        
        assert osadl_matrix.get_compatibility("MS-RL", "ZPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MS_RL_Zlib(self):        
        assert osadl_matrix.get_compatibility("MS-RL", "Zlib") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MS_RL_bzip2_1_0_5(self):        
        assert osadl_matrix.get_compatibility("MS-RL", "bzip2-1.0.5") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MS_RL_bzip2_1_0_6(self):        
        assert osadl_matrix.get_compatibility("MS-RL", "bzip2-1.0.6") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MS_RL_curl(self):        
        assert osadl_matrix.get_compatibility("MS-RL", "curl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MS_RL_libtiff(self):        
        assert osadl_matrix.get_compatibility("MS-RL", "libtiff") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MS_RL_zlib_acknowledgement(self):        
        assert osadl_matrix.get_compatibility("MS-RL", "zlib-acknowledgement") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MirOS_0BSD(self):        
        assert osadl_matrix.get_compatibility("MirOS", "0BSD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MirOS_AFL_2_0(self):        
        assert osadl_matrix.get_compatibility("MirOS", "AFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MirOS_AFL_2_1(self):        
        assert osadl_matrix.get_compatibility("MirOS", "AFL-2.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MirOS_AFL_3_0(self):        
        assert osadl_matrix.get_compatibility("MirOS", "AFL-3.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MirOS_AGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("MirOS", "AGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MirOS_AGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("MirOS", "AGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MirOS_Apache_1_0(self):        
        assert osadl_matrix.get_compatibility("MirOS", "Apache-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MirOS_Apache_1_1(self):        
        assert osadl_matrix.get_compatibility("MirOS", "Apache-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MirOS_Apache_2_0(self):        
        assert osadl_matrix.get_compatibility("MirOS", "Apache-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MirOS_Artistic_1_0(self):        
        assert osadl_matrix.get_compatibility("MirOS", "Artistic-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MirOS_Artistic_1_0_Perl(self):        
        assert osadl_matrix.get_compatibility("MirOS", "Artistic-1.0-Perl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MirOS_Artistic_2_0(self):        
        assert osadl_matrix.get_compatibility("MirOS", "Artistic-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MirOS_BSD_1_Clause(self):        
        assert osadl_matrix.get_compatibility("MirOS", "BSD-1-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MirOS_BSD_2_Clause(self):        
        assert osadl_matrix.get_compatibility("MirOS", "BSD-2-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MirOS_BSD_2_Clause_Patent(self):        
        assert osadl_matrix.get_compatibility("MirOS", "BSD-2-Clause-Patent") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MirOS_BSD_3_Clause(self):        
        assert osadl_matrix.get_compatibility("MirOS", "BSD-3-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MirOS_BSD_4_Clause(self):        
        assert osadl_matrix.get_compatibility("MirOS", "BSD-4-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MirOS_BSD_4_Clause_UC(self):        
        assert osadl_matrix.get_compatibility("MirOS", "BSD-4-Clause-UC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MirOS_BSD_Source_Code(self):        
        assert osadl_matrix.get_compatibility("MirOS", "BSD-Source-Code") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MirOS_BSL_1_0(self):        
        assert osadl_matrix.get_compatibility("MirOS", "BSL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MirOS_CC0_1_0(self):        
        assert osadl_matrix.get_compatibility("MirOS", "CC0-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MirOS_CDDL_1_0(self):        
        assert osadl_matrix.get_compatibility("MirOS", "CDDL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MirOS_CDDL_1_1(self):        
        assert osadl_matrix.get_compatibility("MirOS", "CDDL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MirOS_CPL_1_0(self):        
        assert osadl_matrix.get_compatibility("MirOS", "CPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MirOS_EFL_2_0(self):        
        assert osadl_matrix.get_compatibility("MirOS", "EFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MirOS_EPL_1_0(self):        
        assert osadl_matrix.get_compatibility("MirOS", "EPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MirOS_EPL_2_0(self):        
        assert osadl_matrix.get_compatibility("MirOS", "EPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MirOS_EUPL_1_1(self):        
        assert osadl_matrix.get_compatibility("MirOS", "EUPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MirOS_EUPL_1_2(self):        
        assert osadl_matrix.get_compatibility("MirOS", "EUPL-1.2") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MirOS_FSFAP(self):        
        assert osadl_matrix.get_compatibility("MirOS", "FSFAP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MirOS_FSFULLR(self):        
        assert osadl_matrix.get_compatibility("MirOS", "FSFULLR") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MirOS_FTL(self):        
        assert osadl_matrix.get_compatibility("MirOS", "FTL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MirOS_GPL_1_0_only(self):        
        assert osadl_matrix.get_compatibility("MirOS", "GPL-1.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MirOS_GPL_1_0_or_later(self):        
        assert osadl_matrix.get_compatibility("MirOS", "GPL-1.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MirOS_GPL_2_0_only(self):        
        assert osadl_matrix.get_compatibility("MirOS", "GPL-2.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MirOS_GPL_2_0_only_WITH_Classpath_exception_2_0(self):        
        assert osadl_matrix.get_compatibility("MirOS", "GPL-2.0-only WITH Classpath-exception-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MirOS_GPL_2_0_or_later(self):        
        assert osadl_matrix.get_compatibility("MirOS", "GPL-2.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MirOS_GPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("MirOS", "GPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MirOS_GPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("MirOS", "GPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MirOS_HPND(self):        
        assert osadl_matrix.get_compatibility("MirOS", "HPND") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MirOS_IBM_pibs(self):        
        assert osadl_matrix.get_compatibility("MirOS", "IBM-pibs") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MirOS_ICU(self):        
        assert osadl_matrix.get_compatibility("MirOS", "ICU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MirOS_IJG(self):        
        assert osadl_matrix.get_compatibility("MirOS", "IJG") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MirOS_IPL_1_0(self):        
        assert osadl_matrix.get_compatibility("MirOS", "IPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MirOS_ISC(self):        
        assert osadl_matrix.get_compatibility("MirOS", "ISC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MirOS_Info_ZIP(self):        
        assert osadl_matrix.get_compatibility("MirOS", "Info-ZIP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MirOS_LGPL_2_1_only(self):        
        assert osadl_matrix.get_compatibility("MirOS", "LGPL-2.1-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MirOS_LGPL_2_1_or_later(self):        
        assert osadl_matrix.get_compatibility("MirOS", "LGPL-2.1-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MirOS_LGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("MirOS", "LGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MirOS_LGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("MirOS", "LGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MirOS_Libpng(self):        
        assert osadl_matrix.get_compatibility("MirOS", "Libpng") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MirOS_MIT(self):        
        assert osadl_matrix.get_compatibility("MirOS", "MIT") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MirOS_MIT_CMU(self):        
        assert osadl_matrix.get_compatibility("MirOS", "MIT-CMU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MirOS_MPL_1_1(self):        
        assert osadl_matrix.get_compatibility("MirOS", "MPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MirOS_MPL_2_0(self):        
        assert osadl_matrix.get_compatibility("MirOS", "MPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MirOS_MPL_2_0_no_copyleft_exception(self):        
        assert osadl_matrix.get_compatibility("MirOS", "MPL-2.0-no-copyleft-exception") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MirOS_MS_PL(self):        
        assert osadl_matrix.get_compatibility("MirOS", "MS-PL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MirOS_MS_RL(self):        
        assert osadl_matrix.get_compatibility("MirOS", "MS-RL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MirOS_MirOS(self):        
        assert osadl_matrix.get_compatibility("MirOS", "MirOS") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MirOS_NBPL_1_0(self):        
        assert osadl_matrix.get_compatibility("MirOS", "NBPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MirOS_NTP(self):        
        assert osadl_matrix.get_compatibility("MirOS", "NTP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MirOS_OSL_3_0(self):        
        assert osadl_matrix.get_compatibility("MirOS", "OSL-3.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MirOS_OpenSSL(self):        
        assert osadl_matrix.get_compatibility("MirOS", "OpenSSL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_MirOS_PHP_3_01(self):        
        assert osadl_matrix.get_compatibility("MirOS", "PHP-3.01") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MirOS_PostgreSQL(self):        
        assert osadl_matrix.get_compatibility("MirOS", "PostgreSQL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MirOS_Python_2_0(self):        
        assert osadl_matrix.get_compatibility("MirOS", "Python-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MirOS_Qhull(self):        
        assert osadl_matrix.get_compatibility("MirOS", "Qhull") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MirOS_RSA_MD(self):        
        assert osadl_matrix.get_compatibility("MirOS", "RSA-MD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MirOS_Sleepycat(self):        
        assert osadl_matrix.get_compatibility("MirOS", "Sleepycat") == osadl_matrix.OSADLCompatibility.NO
    

    def test_MirOS_SunPro(self):        
        assert osadl_matrix.get_compatibility("MirOS", "SunPro") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MirOS_UPL_1_0(self):        
        assert osadl_matrix.get_compatibility("MirOS", "UPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MirOS_Unicode_DFS_2015(self):        
        assert osadl_matrix.get_compatibility("MirOS", "Unicode-DFS-2015") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MirOS_Unicode_DFS_2016(self):        
        assert osadl_matrix.get_compatibility("MirOS", "Unicode-DFS-2016") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MirOS_Unlicense(self):        
        assert osadl_matrix.get_compatibility("MirOS", "Unlicense") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MirOS_W3C(self):        
        assert osadl_matrix.get_compatibility("MirOS", "W3C") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MirOS_W3C_19980720(self):        
        assert osadl_matrix.get_compatibility("MirOS", "W3C-19980720") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MirOS_W3C_20150513(self):        
        assert osadl_matrix.get_compatibility("MirOS", "W3C-20150513") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MirOS_WTFPL(self):        
        assert osadl_matrix.get_compatibility("MirOS", "WTFPL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MirOS_X11(self):        
        assert osadl_matrix.get_compatibility("MirOS", "X11") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MirOS_XFree86_1_1(self):        
        assert osadl_matrix.get_compatibility("MirOS", "XFree86-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MirOS_ZPL_2_0(self):        
        assert osadl_matrix.get_compatibility("MirOS", "ZPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MirOS_Zlib(self):        
        assert osadl_matrix.get_compatibility("MirOS", "Zlib") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MirOS_bzip2_1_0_5(self):        
        assert osadl_matrix.get_compatibility("MirOS", "bzip2-1.0.5") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MirOS_bzip2_1_0_6(self):        
        assert osadl_matrix.get_compatibility("MirOS", "bzip2-1.0.6") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MirOS_curl(self):        
        assert osadl_matrix.get_compatibility("MirOS", "curl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MirOS_libtiff(self):        
        assert osadl_matrix.get_compatibility("MirOS", "libtiff") == osadl_matrix.OSADLCompatibility.YES
    

    def test_MirOS_zlib_acknowledgement(self):        
        assert osadl_matrix.get_compatibility("MirOS", "zlib-acknowledgement") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NBPL_1_0_0BSD(self):        
        assert osadl_matrix.get_compatibility("NBPL-1.0", "0BSD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NBPL_1_0_AFL_2_0(self):        
        assert osadl_matrix.get_compatibility("NBPL-1.0", "AFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NBPL_1_0_AFL_2_1(self):        
        assert osadl_matrix.get_compatibility("NBPL-1.0", "AFL-2.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NBPL_1_0_AFL_3_0(self):        
        assert osadl_matrix.get_compatibility("NBPL-1.0", "AFL-3.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NBPL_1_0_AGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("NBPL-1.0", "AGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_NBPL_1_0_AGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("NBPL-1.0", "AGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_NBPL_1_0_Apache_1_0(self):        
        assert osadl_matrix.get_compatibility("NBPL-1.0", "Apache-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NBPL_1_0_Apache_1_1(self):        
        assert osadl_matrix.get_compatibility("NBPL-1.0", "Apache-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NBPL_1_0_Apache_2_0(self):        
        assert osadl_matrix.get_compatibility("NBPL-1.0", "Apache-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NBPL_1_0_Artistic_1_0(self):        
        assert osadl_matrix.get_compatibility("NBPL-1.0", "Artistic-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NBPL_1_0_Artistic_1_0_Perl(self):        
        assert osadl_matrix.get_compatibility("NBPL-1.0", "Artistic-1.0-Perl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NBPL_1_0_Artistic_2_0(self):        
        assert osadl_matrix.get_compatibility("NBPL-1.0", "Artistic-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NBPL_1_0_BSD_1_Clause(self):        
        assert osadl_matrix.get_compatibility("NBPL-1.0", "BSD-1-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NBPL_1_0_BSD_2_Clause(self):        
        assert osadl_matrix.get_compatibility("NBPL-1.0", "BSD-2-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NBPL_1_0_BSD_2_Clause_Patent(self):        
        assert osadl_matrix.get_compatibility("NBPL-1.0", "BSD-2-Clause-Patent") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NBPL_1_0_BSD_3_Clause(self):        
        assert osadl_matrix.get_compatibility("NBPL-1.0", "BSD-3-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NBPL_1_0_BSD_4_Clause(self):        
        assert osadl_matrix.get_compatibility("NBPL-1.0", "BSD-4-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NBPL_1_0_BSD_4_Clause_UC(self):        
        assert osadl_matrix.get_compatibility("NBPL-1.0", "BSD-4-Clause-UC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NBPL_1_0_BSD_Source_Code(self):        
        assert osadl_matrix.get_compatibility("NBPL-1.0", "BSD-Source-Code") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NBPL_1_0_BSL_1_0(self):        
        assert osadl_matrix.get_compatibility("NBPL-1.0", "BSL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NBPL_1_0_CC0_1_0(self):        
        assert osadl_matrix.get_compatibility("NBPL-1.0", "CC0-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NBPL_1_0_CDDL_1_0(self):        
        assert osadl_matrix.get_compatibility("NBPL-1.0", "CDDL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_NBPL_1_0_CDDL_1_1(self):        
        assert osadl_matrix.get_compatibility("NBPL-1.0", "CDDL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_NBPL_1_0_CPL_1_0(self):        
        assert osadl_matrix.get_compatibility("NBPL-1.0", "CPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_NBPL_1_0_EFL_2_0(self):        
        assert osadl_matrix.get_compatibility("NBPL-1.0", "EFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NBPL_1_0_EPL_1_0(self):        
        assert osadl_matrix.get_compatibility("NBPL-1.0", "EPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_NBPL_1_0_EPL_2_0(self):        
        assert osadl_matrix.get_compatibility("NBPL-1.0", "EPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_NBPL_1_0_EUPL_1_1(self):        
        assert osadl_matrix.get_compatibility("NBPL-1.0", "EUPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_NBPL_1_0_EUPL_1_2(self):        
        assert osadl_matrix.get_compatibility("NBPL-1.0", "EUPL-1.2") == osadl_matrix.OSADLCompatibility.NO
    

    def test_NBPL_1_0_FSFAP(self):        
        assert osadl_matrix.get_compatibility("NBPL-1.0", "FSFAP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NBPL_1_0_FSFULLR(self):        
        assert osadl_matrix.get_compatibility("NBPL-1.0", "FSFULLR") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NBPL_1_0_FTL(self):        
        assert osadl_matrix.get_compatibility("NBPL-1.0", "FTL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NBPL_1_0_GPL_1_0_only(self):        
        assert osadl_matrix.get_compatibility("NBPL-1.0", "GPL-1.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_NBPL_1_0_GPL_1_0_or_later(self):        
        assert osadl_matrix.get_compatibility("NBPL-1.0", "GPL-1.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_NBPL_1_0_GPL_2_0_only(self):        
        assert osadl_matrix.get_compatibility("NBPL-1.0", "GPL-2.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_NBPL_1_0_GPL_2_0_only_WITH_Classpath_exception_2_0(self):        
        assert osadl_matrix.get_compatibility("NBPL-1.0", "GPL-2.0-only WITH Classpath-exception-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_NBPL_1_0_GPL_2_0_or_later(self):        
        assert osadl_matrix.get_compatibility("NBPL-1.0", "GPL-2.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_NBPL_1_0_GPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("NBPL-1.0", "GPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_NBPL_1_0_GPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("NBPL-1.0", "GPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_NBPL_1_0_HPND(self):        
        assert osadl_matrix.get_compatibility("NBPL-1.0", "HPND") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NBPL_1_0_IBM_pibs(self):        
        assert osadl_matrix.get_compatibility("NBPL-1.0", "IBM-pibs") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NBPL_1_0_ICU(self):        
        assert osadl_matrix.get_compatibility("NBPL-1.0", "ICU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NBPL_1_0_IJG(self):        
        assert osadl_matrix.get_compatibility("NBPL-1.0", "IJG") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NBPL_1_0_IPL_1_0(self):        
        assert osadl_matrix.get_compatibility("NBPL-1.0", "IPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_NBPL_1_0_ISC(self):        
        assert osadl_matrix.get_compatibility("NBPL-1.0", "ISC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NBPL_1_0_Info_ZIP(self):        
        assert osadl_matrix.get_compatibility("NBPL-1.0", "Info-ZIP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NBPL_1_0_LGPL_2_1_only(self):        
        assert osadl_matrix.get_compatibility("NBPL-1.0", "LGPL-2.1-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_NBPL_1_0_LGPL_2_1_or_later(self):        
        assert osadl_matrix.get_compatibility("NBPL-1.0", "LGPL-2.1-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_NBPL_1_0_LGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("NBPL-1.0", "LGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_NBPL_1_0_LGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("NBPL-1.0", "LGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_NBPL_1_0_Libpng(self):        
        assert osadl_matrix.get_compatibility("NBPL-1.0", "Libpng") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NBPL_1_0_MIT(self):        
        assert osadl_matrix.get_compatibility("NBPL-1.0", "MIT") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NBPL_1_0_MIT_CMU(self):        
        assert osadl_matrix.get_compatibility("NBPL-1.0", "MIT-CMU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NBPL_1_0_MPL_1_1(self):        
        assert osadl_matrix.get_compatibility("NBPL-1.0", "MPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_NBPL_1_0_MPL_2_0(self):        
        assert osadl_matrix.get_compatibility("NBPL-1.0", "MPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_NBPL_1_0_MPL_2_0_no_copyleft_exception(self):        
        assert osadl_matrix.get_compatibility("NBPL-1.0", "MPL-2.0-no-copyleft-exception") == osadl_matrix.OSADLCompatibility.NO
    

    def test_NBPL_1_0_MS_PL(self):        
        assert osadl_matrix.get_compatibility("NBPL-1.0", "MS-PL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_NBPL_1_0_MS_RL(self):        
        assert osadl_matrix.get_compatibility("NBPL-1.0", "MS-RL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_NBPL_1_0_MirOS(self):        
        assert osadl_matrix.get_compatibility("NBPL-1.0", "MirOS") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NBPL_1_0_NBPL_1_0(self):        
        assert osadl_matrix.get_compatibility("NBPL-1.0", "NBPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NBPL_1_0_NTP(self):        
        assert osadl_matrix.get_compatibility("NBPL-1.0", "NTP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NBPL_1_0_OSL_3_0(self):        
        assert osadl_matrix.get_compatibility("NBPL-1.0", "OSL-3.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_NBPL_1_0_OpenSSL(self):        
        assert osadl_matrix.get_compatibility("NBPL-1.0", "OpenSSL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_NBPL_1_0_PHP_3_01(self):        
        assert osadl_matrix.get_compatibility("NBPL-1.0", "PHP-3.01") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NBPL_1_0_PostgreSQL(self):        
        assert osadl_matrix.get_compatibility("NBPL-1.0", "PostgreSQL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NBPL_1_0_Python_2_0(self):        
        assert osadl_matrix.get_compatibility("NBPL-1.0", "Python-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NBPL_1_0_Qhull(self):        
        assert osadl_matrix.get_compatibility("NBPL-1.0", "Qhull") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NBPL_1_0_RSA_MD(self):        
        assert osadl_matrix.get_compatibility("NBPL-1.0", "RSA-MD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NBPL_1_0_Sleepycat(self):        
        assert osadl_matrix.get_compatibility("NBPL-1.0", "Sleepycat") == osadl_matrix.OSADLCompatibility.NO
    

    def test_NBPL_1_0_SunPro(self):        
        assert osadl_matrix.get_compatibility("NBPL-1.0", "SunPro") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NBPL_1_0_UPL_1_0(self):        
        assert osadl_matrix.get_compatibility("NBPL-1.0", "UPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NBPL_1_0_Unicode_DFS_2015(self):        
        assert osadl_matrix.get_compatibility("NBPL-1.0", "Unicode-DFS-2015") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NBPL_1_0_Unicode_DFS_2016(self):        
        assert osadl_matrix.get_compatibility("NBPL-1.0", "Unicode-DFS-2016") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NBPL_1_0_Unlicense(self):        
        assert osadl_matrix.get_compatibility("NBPL-1.0", "Unlicense") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NBPL_1_0_W3C(self):        
        assert osadl_matrix.get_compatibility("NBPL-1.0", "W3C") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NBPL_1_0_W3C_19980720(self):        
        assert osadl_matrix.get_compatibility("NBPL-1.0", "W3C-19980720") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NBPL_1_0_W3C_20150513(self):        
        assert osadl_matrix.get_compatibility("NBPL-1.0", "W3C-20150513") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NBPL_1_0_WTFPL(self):        
        assert osadl_matrix.get_compatibility("NBPL-1.0", "WTFPL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NBPL_1_0_X11(self):        
        assert osadl_matrix.get_compatibility("NBPL-1.0", "X11") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NBPL_1_0_XFree86_1_1(self):        
        assert osadl_matrix.get_compatibility("NBPL-1.0", "XFree86-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NBPL_1_0_ZPL_2_0(self):        
        assert osadl_matrix.get_compatibility("NBPL-1.0", "ZPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NBPL_1_0_Zlib(self):        
        assert osadl_matrix.get_compatibility("NBPL-1.0", "Zlib") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NBPL_1_0_bzip2_1_0_5(self):        
        assert osadl_matrix.get_compatibility("NBPL-1.0", "bzip2-1.0.5") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NBPL_1_0_bzip2_1_0_6(self):        
        assert osadl_matrix.get_compatibility("NBPL-1.0", "bzip2-1.0.6") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NBPL_1_0_curl(self):        
        assert osadl_matrix.get_compatibility("NBPL-1.0", "curl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NBPL_1_0_libtiff(self):        
        assert osadl_matrix.get_compatibility("NBPL-1.0", "libtiff") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NBPL_1_0_zlib_acknowledgement(self):        
        assert osadl_matrix.get_compatibility("NBPL-1.0", "zlib-acknowledgement") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NTP_0BSD(self):        
        assert osadl_matrix.get_compatibility("NTP", "0BSD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NTP_AFL_2_0(self):        
        assert osadl_matrix.get_compatibility("NTP", "AFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NTP_AFL_2_1(self):        
        assert osadl_matrix.get_compatibility("NTP", "AFL-2.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NTP_AFL_3_0(self):        
        assert osadl_matrix.get_compatibility("NTP", "AFL-3.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NTP_AGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("NTP", "AGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_NTP_AGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("NTP", "AGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_NTP_Apache_1_0(self):        
        assert osadl_matrix.get_compatibility("NTP", "Apache-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NTP_Apache_1_1(self):        
        assert osadl_matrix.get_compatibility("NTP", "Apache-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NTP_Apache_2_0(self):        
        assert osadl_matrix.get_compatibility("NTP", "Apache-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NTP_Artistic_1_0(self):        
        assert osadl_matrix.get_compatibility("NTP", "Artistic-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NTP_Artistic_1_0_Perl(self):        
        assert osadl_matrix.get_compatibility("NTP", "Artistic-1.0-Perl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NTP_Artistic_2_0(self):        
        assert osadl_matrix.get_compatibility("NTP", "Artistic-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NTP_BSD_1_Clause(self):        
        assert osadl_matrix.get_compatibility("NTP", "BSD-1-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NTP_BSD_2_Clause(self):        
        assert osadl_matrix.get_compatibility("NTP", "BSD-2-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NTP_BSD_2_Clause_Patent(self):        
        assert osadl_matrix.get_compatibility("NTP", "BSD-2-Clause-Patent") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NTP_BSD_3_Clause(self):        
        assert osadl_matrix.get_compatibility("NTP", "BSD-3-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NTP_BSD_4_Clause(self):        
        assert osadl_matrix.get_compatibility("NTP", "BSD-4-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NTP_BSD_4_Clause_UC(self):        
        assert osadl_matrix.get_compatibility("NTP", "BSD-4-Clause-UC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NTP_BSD_Source_Code(self):        
        assert osadl_matrix.get_compatibility("NTP", "BSD-Source-Code") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NTP_BSL_1_0(self):        
        assert osadl_matrix.get_compatibility("NTP", "BSL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NTP_CC0_1_0(self):        
        assert osadl_matrix.get_compatibility("NTP", "CC0-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NTP_CDDL_1_0(self):        
        assert osadl_matrix.get_compatibility("NTP", "CDDL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_NTP_CDDL_1_1(self):        
        assert osadl_matrix.get_compatibility("NTP", "CDDL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_NTP_CPL_1_0(self):        
        assert osadl_matrix.get_compatibility("NTP", "CPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_NTP_EFL_2_0(self):        
        assert osadl_matrix.get_compatibility("NTP", "EFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NTP_EPL_1_0(self):        
        assert osadl_matrix.get_compatibility("NTP", "EPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_NTP_EPL_2_0(self):        
        assert osadl_matrix.get_compatibility("NTP", "EPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_NTP_EUPL_1_1(self):        
        assert osadl_matrix.get_compatibility("NTP", "EUPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_NTP_EUPL_1_2(self):        
        assert osadl_matrix.get_compatibility("NTP", "EUPL-1.2") == osadl_matrix.OSADLCompatibility.NO
    

    def test_NTP_FSFAP(self):        
        assert osadl_matrix.get_compatibility("NTP", "FSFAP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NTP_FSFULLR(self):        
        assert osadl_matrix.get_compatibility("NTP", "FSFULLR") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NTP_FTL(self):        
        assert osadl_matrix.get_compatibility("NTP", "FTL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NTP_GPL_1_0_only(self):        
        assert osadl_matrix.get_compatibility("NTP", "GPL-1.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_NTP_GPL_1_0_or_later(self):        
        assert osadl_matrix.get_compatibility("NTP", "GPL-1.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_NTP_GPL_2_0_only(self):        
        assert osadl_matrix.get_compatibility("NTP", "GPL-2.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_NTP_GPL_2_0_only_WITH_Classpath_exception_2_0(self):        
        assert osadl_matrix.get_compatibility("NTP", "GPL-2.0-only WITH Classpath-exception-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_NTP_GPL_2_0_or_later(self):        
        assert osadl_matrix.get_compatibility("NTP", "GPL-2.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_NTP_GPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("NTP", "GPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_NTP_GPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("NTP", "GPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_NTP_HPND(self):        
        assert osadl_matrix.get_compatibility("NTP", "HPND") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NTP_IBM_pibs(self):        
        assert osadl_matrix.get_compatibility("NTP", "IBM-pibs") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NTP_ICU(self):        
        assert osadl_matrix.get_compatibility("NTP", "ICU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NTP_IJG(self):        
        assert osadl_matrix.get_compatibility("NTP", "IJG") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NTP_IPL_1_0(self):        
        assert osadl_matrix.get_compatibility("NTP", "IPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_NTP_ISC(self):        
        assert osadl_matrix.get_compatibility("NTP", "ISC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NTP_Info_ZIP(self):        
        assert osadl_matrix.get_compatibility("NTP", "Info-ZIP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NTP_LGPL_2_1_only(self):        
        assert osadl_matrix.get_compatibility("NTP", "LGPL-2.1-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_NTP_LGPL_2_1_or_later(self):        
        assert osadl_matrix.get_compatibility("NTP", "LGPL-2.1-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_NTP_LGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("NTP", "LGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_NTP_LGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("NTP", "LGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_NTP_Libpng(self):        
        assert osadl_matrix.get_compatibility("NTP", "Libpng") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NTP_MIT(self):        
        assert osadl_matrix.get_compatibility("NTP", "MIT") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NTP_MIT_CMU(self):        
        assert osadl_matrix.get_compatibility("NTP", "MIT-CMU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NTP_MPL_1_1(self):        
        assert osadl_matrix.get_compatibility("NTP", "MPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_NTP_MPL_2_0(self):        
        assert osadl_matrix.get_compatibility("NTP", "MPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_NTP_MPL_2_0_no_copyleft_exception(self):        
        assert osadl_matrix.get_compatibility("NTP", "MPL-2.0-no-copyleft-exception") == osadl_matrix.OSADLCompatibility.NO
    

    def test_NTP_MS_PL(self):        
        assert osadl_matrix.get_compatibility("NTP", "MS-PL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_NTP_MS_RL(self):        
        assert osadl_matrix.get_compatibility("NTP", "MS-RL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_NTP_MirOS(self):        
        assert osadl_matrix.get_compatibility("NTP", "MirOS") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NTP_NBPL_1_0(self):        
        assert osadl_matrix.get_compatibility("NTP", "NBPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NTP_NTP(self):        
        assert osadl_matrix.get_compatibility("NTP", "NTP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NTP_OSL_3_0(self):        
        assert osadl_matrix.get_compatibility("NTP", "OSL-3.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_NTP_OpenSSL(self):        
        assert osadl_matrix.get_compatibility("NTP", "OpenSSL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_NTP_PHP_3_01(self):        
        assert osadl_matrix.get_compatibility("NTP", "PHP-3.01") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NTP_PostgreSQL(self):        
        assert osadl_matrix.get_compatibility("NTP", "PostgreSQL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NTP_Python_2_0(self):        
        assert osadl_matrix.get_compatibility("NTP", "Python-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NTP_Qhull(self):        
        assert osadl_matrix.get_compatibility("NTP", "Qhull") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NTP_RSA_MD(self):        
        assert osadl_matrix.get_compatibility("NTP", "RSA-MD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NTP_Sleepycat(self):        
        assert osadl_matrix.get_compatibility("NTP", "Sleepycat") == osadl_matrix.OSADLCompatibility.NO
    

    def test_NTP_SunPro(self):        
        assert osadl_matrix.get_compatibility("NTP", "SunPro") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NTP_UPL_1_0(self):        
        assert osadl_matrix.get_compatibility("NTP", "UPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NTP_Unicode_DFS_2015(self):        
        assert osadl_matrix.get_compatibility("NTP", "Unicode-DFS-2015") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NTP_Unicode_DFS_2016(self):        
        assert osadl_matrix.get_compatibility("NTP", "Unicode-DFS-2016") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NTP_Unlicense(self):        
        assert osadl_matrix.get_compatibility("NTP", "Unlicense") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NTP_W3C(self):        
        assert osadl_matrix.get_compatibility("NTP", "W3C") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NTP_W3C_19980720(self):        
        assert osadl_matrix.get_compatibility("NTP", "W3C-19980720") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NTP_W3C_20150513(self):        
        assert osadl_matrix.get_compatibility("NTP", "W3C-20150513") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NTP_WTFPL(self):        
        assert osadl_matrix.get_compatibility("NTP", "WTFPL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NTP_X11(self):        
        assert osadl_matrix.get_compatibility("NTP", "X11") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NTP_XFree86_1_1(self):        
        assert osadl_matrix.get_compatibility("NTP", "XFree86-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NTP_ZPL_2_0(self):        
        assert osadl_matrix.get_compatibility("NTP", "ZPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NTP_Zlib(self):        
        assert osadl_matrix.get_compatibility("NTP", "Zlib") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NTP_bzip2_1_0_5(self):        
        assert osadl_matrix.get_compatibility("NTP", "bzip2-1.0.5") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NTP_bzip2_1_0_6(self):        
        assert osadl_matrix.get_compatibility("NTP", "bzip2-1.0.6") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NTP_curl(self):        
        assert osadl_matrix.get_compatibility("NTP", "curl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NTP_libtiff(self):        
        assert osadl_matrix.get_compatibility("NTP", "libtiff") == osadl_matrix.OSADLCompatibility.YES
    

    def test_NTP_zlib_acknowledgement(self):        
        assert osadl_matrix.get_compatibility("NTP", "zlib-acknowledgement") == osadl_matrix.OSADLCompatibility.YES
    

    def test_OSL_3_0_0BSD(self):        
        assert osadl_matrix.get_compatibility("OSL-3.0", "0BSD") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_OSL_3_0_AFL_2_0(self):        
        assert osadl_matrix.get_compatibility("OSL-3.0", "AFL-2.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_OSL_3_0_AFL_2_1(self):        
        assert osadl_matrix.get_compatibility("OSL-3.0", "AFL-2.1") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_OSL_3_0_AFL_3_0(self):        
        assert osadl_matrix.get_compatibility("OSL-3.0", "AFL-3.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_OSL_3_0_AGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("OSL-3.0", "AGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_OSL_3_0_AGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("OSL-3.0", "AGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_OSL_3_0_Apache_1_0(self):        
        assert osadl_matrix.get_compatibility("OSL-3.0", "Apache-1.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_OSL_3_0_Apache_1_1(self):        
        assert osadl_matrix.get_compatibility("OSL-3.0", "Apache-1.1") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_OSL_3_0_Apache_2_0(self):        
        assert osadl_matrix.get_compatibility("OSL-3.0", "Apache-2.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_OSL_3_0_Artistic_1_0(self):        
        assert osadl_matrix.get_compatibility("OSL-3.0", "Artistic-1.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_OSL_3_0_Artistic_1_0_Perl(self):        
        assert osadl_matrix.get_compatibility("OSL-3.0", "Artistic-1.0-Perl") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_OSL_3_0_Artistic_2_0(self):        
        assert osadl_matrix.get_compatibility("OSL-3.0", "Artistic-2.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_OSL_3_0_BSD_1_Clause(self):        
        assert osadl_matrix.get_compatibility("OSL-3.0", "BSD-1-Clause") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_OSL_3_0_BSD_2_Clause(self):        
        assert osadl_matrix.get_compatibility("OSL-3.0", "BSD-2-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_OSL_3_0_BSD_2_Clause_Patent(self):        
        assert osadl_matrix.get_compatibility("OSL-3.0", "BSD-2-Clause-Patent") == osadl_matrix.OSADLCompatibility.YES
    

    def test_OSL_3_0_BSD_3_Clause(self):        
        assert osadl_matrix.get_compatibility("OSL-3.0", "BSD-3-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_OSL_3_0_BSD_4_Clause(self):        
        assert osadl_matrix.get_compatibility("OSL-3.0", "BSD-4-Clause") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_OSL_3_0_BSD_4_Clause_UC(self):        
        assert osadl_matrix.get_compatibility("OSL-3.0", "BSD-4-Clause-UC") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_OSL_3_0_BSD_Source_Code(self):        
        assert osadl_matrix.get_compatibility("OSL-3.0", "BSD-Source-Code") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_OSL_3_0_BSL_1_0(self):        
        assert osadl_matrix.get_compatibility("OSL-3.0", "BSL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_OSL_3_0_CC0_1_0(self):        
        assert osadl_matrix.get_compatibility("OSL-3.0", "CC0-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_OSL_3_0_CDDL_1_0(self):        
        assert osadl_matrix.get_compatibility("OSL-3.0", "CDDL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_OSL_3_0_CDDL_1_1(self):        
        assert osadl_matrix.get_compatibility("OSL-3.0", "CDDL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_OSL_3_0_CPL_1_0(self):        
        assert osadl_matrix.get_compatibility("OSL-3.0", "CPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_OSL_3_0_EFL_2_0(self):        
        assert osadl_matrix.get_compatibility("OSL-3.0", "EFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_OSL_3_0_EPL_1_0(self):        
        assert osadl_matrix.get_compatibility("OSL-3.0", "EPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_OSL_3_0_EPL_2_0(self):        
        assert osadl_matrix.get_compatibility("OSL-3.0", "EPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_OSL_3_0_EUPL_1_1(self):        
        assert osadl_matrix.get_compatibility("OSL-3.0", "EUPL-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_OSL_3_0_EUPL_1_2(self):        
        assert osadl_matrix.get_compatibility("OSL-3.0", "EUPL-1.2") == osadl_matrix.OSADLCompatibility.NO
    

    def test_OSL_3_0_FSFAP(self):        
        assert osadl_matrix.get_compatibility("OSL-3.0", "FSFAP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_OSL_3_0_FSFULLR(self):        
        assert osadl_matrix.get_compatibility("OSL-3.0", "FSFULLR") == osadl_matrix.OSADLCompatibility.YES
    

    def test_OSL_3_0_FTL(self):        
        assert osadl_matrix.get_compatibility("OSL-3.0", "FTL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_OSL_3_0_GPL_1_0_only(self):        
        assert osadl_matrix.get_compatibility("OSL-3.0", "GPL-1.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_OSL_3_0_GPL_1_0_or_later(self):        
        assert osadl_matrix.get_compatibility("OSL-3.0", "GPL-1.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_OSL_3_0_GPL_2_0_only(self):        
        assert osadl_matrix.get_compatibility("OSL-3.0", "GPL-2.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_OSL_3_0_GPL_2_0_only_WITH_Classpath_exception_2_0(self):        
        assert osadl_matrix.get_compatibility("OSL-3.0", "GPL-2.0-only WITH Classpath-exception-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_OSL_3_0_GPL_2_0_or_later(self):        
        assert osadl_matrix.get_compatibility("OSL-3.0", "GPL-2.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_OSL_3_0_GPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("OSL-3.0", "GPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_OSL_3_0_GPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("OSL-3.0", "GPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_OSL_3_0_HPND(self):        
        assert osadl_matrix.get_compatibility("OSL-3.0", "HPND") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_OSL_3_0_IBM_pibs(self):        
        assert osadl_matrix.get_compatibility("OSL-3.0", "IBM-pibs") == osadl_matrix.OSADLCompatibility.YES
    

    def test_OSL_3_0_ICU(self):        
        assert osadl_matrix.get_compatibility("OSL-3.0", "ICU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_OSL_3_0_IJG(self):        
        assert osadl_matrix.get_compatibility("OSL-3.0", "IJG") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_OSL_3_0_IPL_1_0(self):        
        assert osadl_matrix.get_compatibility("OSL-3.0", "IPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_OSL_3_0_ISC(self):        
        assert osadl_matrix.get_compatibility("OSL-3.0", "ISC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_OSL_3_0_Info_ZIP(self):        
        assert osadl_matrix.get_compatibility("OSL-3.0", "Info-ZIP") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_OSL_3_0_LGPL_2_1_only(self):        
        assert osadl_matrix.get_compatibility("OSL-3.0", "LGPL-2.1-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_OSL_3_0_LGPL_2_1_or_later(self):        
        assert osadl_matrix.get_compatibility("OSL-3.0", "LGPL-2.1-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_OSL_3_0_LGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("OSL-3.0", "LGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_OSL_3_0_LGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("OSL-3.0", "LGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_OSL_3_0_Libpng(self):        
        assert osadl_matrix.get_compatibility("OSL-3.0", "Libpng") == osadl_matrix.OSADLCompatibility.YES
    

    def test_OSL_3_0_MIT(self):        
        assert osadl_matrix.get_compatibility("OSL-3.0", "MIT") == osadl_matrix.OSADLCompatibility.YES
    

    def test_OSL_3_0_MIT_CMU(self):        
        assert osadl_matrix.get_compatibility("OSL-3.0", "MIT-CMU") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_OSL_3_0_MPL_1_1(self):        
        assert osadl_matrix.get_compatibility("OSL-3.0", "MPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_OSL_3_0_MPL_2_0(self):        
        assert osadl_matrix.get_compatibility("OSL-3.0", "MPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_OSL_3_0_MPL_2_0_no_copyleft_exception(self):        
        assert osadl_matrix.get_compatibility("OSL-3.0", "MPL-2.0-no-copyleft-exception") == osadl_matrix.OSADLCompatibility.NO
    

    def test_OSL_3_0_MS_PL(self):        
        assert osadl_matrix.get_compatibility("OSL-3.0", "MS-PL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_OSL_3_0_MS_RL(self):        
        assert osadl_matrix.get_compatibility("OSL-3.0", "MS-RL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_OSL_3_0_MirOS(self):        
        assert osadl_matrix.get_compatibility("OSL-3.0", "MirOS") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_OSL_3_0_NBPL_1_0(self):        
        assert osadl_matrix.get_compatibility("OSL-3.0", "NBPL-1.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_OSL_3_0_NTP(self):        
        assert osadl_matrix.get_compatibility("OSL-3.0", "NTP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_OSL_3_0_OSL_3_0(self):        
        assert osadl_matrix.get_compatibility("OSL-3.0", "OSL-3.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_OSL_3_0_OpenSSL(self):        
        assert osadl_matrix.get_compatibility("OSL-3.0", "OpenSSL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_OSL_3_0_PHP_3_01(self):        
        assert osadl_matrix.get_compatibility("OSL-3.0", "PHP-3.01") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_OSL_3_0_PostgreSQL(self):        
        assert osadl_matrix.get_compatibility("OSL-3.0", "PostgreSQL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_OSL_3_0_Python_2_0(self):        
        assert osadl_matrix.get_compatibility("OSL-3.0", "Python-2.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_OSL_3_0_Qhull(self):        
        assert osadl_matrix.get_compatibility("OSL-3.0", "Qhull") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_OSL_3_0_RSA_MD(self):        
        assert osadl_matrix.get_compatibility("OSL-3.0", "RSA-MD") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_OSL_3_0_Sleepycat(self):        
        assert osadl_matrix.get_compatibility("OSL-3.0", "Sleepycat") == osadl_matrix.OSADLCompatibility.NO
    

    def test_OSL_3_0_SunPro(self):        
        assert osadl_matrix.get_compatibility("OSL-3.0", "SunPro") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_OSL_3_0_UPL_1_0(self):        
        assert osadl_matrix.get_compatibility("OSL-3.0", "UPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_OSL_3_0_Unicode_DFS_2015(self):        
        assert osadl_matrix.get_compatibility("OSL-3.0", "Unicode-DFS-2015") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_OSL_3_0_Unicode_DFS_2016(self):        
        assert osadl_matrix.get_compatibility("OSL-3.0", "Unicode-DFS-2016") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_OSL_3_0_Unlicense(self):        
        assert osadl_matrix.get_compatibility("OSL-3.0", "Unlicense") == osadl_matrix.OSADLCompatibility.YES
    

    def test_OSL_3_0_W3C(self):        
        assert osadl_matrix.get_compatibility("OSL-3.0", "W3C") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_OSL_3_0_W3C_19980720(self):        
        assert osadl_matrix.get_compatibility("OSL-3.0", "W3C-19980720") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_OSL_3_0_W3C_20150513(self):        
        assert osadl_matrix.get_compatibility("OSL-3.0", "W3C-20150513") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_OSL_3_0_WTFPL(self):        
        assert osadl_matrix.get_compatibility("OSL-3.0", "WTFPL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_OSL_3_0_X11(self):        
        assert osadl_matrix.get_compatibility("OSL-3.0", "X11") == osadl_matrix.OSADLCompatibility.YES
    

    def test_OSL_3_0_XFree86_1_1(self):        
        assert osadl_matrix.get_compatibility("OSL-3.0", "XFree86-1.1") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_OSL_3_0_ZPL_2_0(self):        
        assert osadl_matrix.get_compatibility("OSL-3.0", "ZPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_OSL_3_0_Zlib(self):        
        assert osadl_matrix.get_compatibility("OSL-3.0", "Zlib") == osadl_matrix.OSADLCompatibility.YES
    

    def test_OSL_3_0_bzip2_1_0_5(self):        
        assert osadl_matrix.get_compatibility("OSL-3.0", "bzip2-1.0.5") == osadl_matrix.OSADLCompatibility.YES
    

    def test_OSL_3_0_bzip2_1_0_6(self):        
        assert osadl_matrix.get_compatibility("OSL-3.0", "bzip2-1.0.6") == osadl_matrix.OSADLCompatibility.YES
    

    def test_OSL_3_0_curl(self):        
        assert osadl_matrix.get_compatibility("OSL-3.0", "curl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_OSL_3_0_libtiff(self):        
        assert osadl_matrix.get_compatibility("OSL-3.0", "libtiff") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_OSL_3_0_zlib_acknowledgement(self):        
        assert osadl_matrix.get_compatibility("OSL-3.0", "zlib-acknowledgement") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_OpenSSL_0BSD(self):        
        assert osadl_matrix.get_compatibility("OpenSSL", "0BSD") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_OpenSSL_AFL_2_0(self):        
        assert osadl_matrix.get_compatibility("OpenSSL", "AFL-2.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_OpenSSL_AFL_2_1(self):        
        assert osadl_matrix.get_compatibility("OpenSSL", "AFL-2.1") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_OpenSSL_AFL_3_0(self):        
        assert osadl_matrix.get_compatibility("OpenSSL", "AFL-3.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_OpenSSL_AGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("OpenSSL", "AGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_OpenSSL_AGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("OpenSSL", "AGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_OpenSSL_Apache_1_0(self):        
        assert osadl_matrix.get_compatibility("OpenSSL", "Apache-1.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_OpenSSL_Apache_1_1(self):        
        assert osadl_matrix.get_compatibility("OpenSSL", "Apache-1.1") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_OpenSSL_Apache_2_0(self):        
        assert osadl_matrix.get_compatibility("OpenSSL", "Apache-2.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_OpenSSL_Artistic_1_0(self):        
        assert osadl_matrix.get_compatibility("OpenSSL", "Artistic-1.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_OpenSSL_Artistic_1_0_Perl(self):        
        assert osadl_matrix.get_compatibility("OpenSSL", "Artistic-1.0-Perl") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_OpenSSL_Artistic_2_0(self):        
        assert osadl_matrix.get_compatibility("OpenSSL", "Artistic-2.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_OpenSSL_BSD_1_Clause(self):        
        assert osadl_matrix.get_compatibility("OpenSSL", "BSD-1-Clause") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_OpenSSL_BSD_2_Clause(self):        
        assert osadl_matrix.get_compatibility("OpenSSL", "BSD-2-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_OpenSSL_BSD_2_Clause_Patent(self):        
        assert osadl_matrix.get_compatibility("OpenSSL", "BSD-2-Clause-Patent") == osadl_matrix.OSADLCompatibility.YES
    

    def test_OpenSSL_BSD_3_Clause(self):        
        assert osadl_matrix.get_compatibility("OpenSSL", "BSD-3-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_OpenSSL_BSD_4_Clause(self):        
        assert osadl_matrix.get_compatibility("OpenSSL", "BSD-4-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_OpenSSL_BSD_4_Clause_UC(self):        
        assert osadl_matrix.get_compatibility("OpenSSL", "BSD-4-Clause-UC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_OpenSSL_BSD_Source_Code(self):        
        assert osadl_matrix.get_compatibility("OpenSSL", "BSD-Source-Code") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_OpenSSL_BSL_1_0(self):        
        assert osadl_matrix.get_compatibility("OpenSSL", "BSL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_OpenSSL_CC0_1_0(self):        
        assert osadl_matrix.get_compatibility("OpenSSL", "CC0-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_OpenSSL_CDDL_1_0(self):        
        assert osadl_matrix.get_compatibility("OpenSSL", "CDDL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_OpenSSL_CDDL_1_1(self):        
        assert osadl_matrix.get_compatibility("OpenSSL", "CDDL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_OpenSSL_CPL_1_0(self):        
        assert osadl_matrix.get_compatibility("OpenSSL", "CPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_OpenSSL_EFL_2_0(self):        
        assert osadl_matrix.get_compatibility("OpenSSL", "EFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_OpenSSL_EPL_1_0(self):        
        assert osadl_matrix.get_compatibility("OpenSSL", "EPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_OpenSSL_EPL_2_0(self):        
        assert osadl_matrix.get_compatibility("OpenSSL", "EPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_OpenSSL_EUPL_1_1(self):        
        assert osadl_matrix.get_compatibility("OpenSSL", "EUPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_OpenSSL_EUPL_1_2(self):        
        assert osadl_matrix.get_compatibility("OpenSSL", "EUPL-1.2") == osadl_matrix.OSADLCompatibility.NO
    

    def test_OpenSSL_FSFAP(self):        
        assert osadl_matrix.get_compatibility("OpenSSL", "FSFAP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_OpenSSL_FSFULLR(self):        
        assert osadl_matrix.get_compatibility("OpenSSL", "FSFULLR") == osadl_matrix.OSADLCompatibility.YES
    

    def test_OpenSSL_FTL(self):        
        assert osadl_matrix.get_compatibility("OpenSSL", "FTL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_OpenSSL_GPL_1_0_only(self):        
        assert osadl_matrix.get_compatibility("OpenSSL", "GPL-1.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_OpenSSL_GPL_1_0_or_later(self):        
        assert osadl_matrix.get_compatibility("OpenSSL", "GPL-1.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_OpenSSL_GPL_2_0_only(self):        
        assert osadl_matrix.get_compatibility("OpenSSL", "GPL-2.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_OpenSSL_GPL_2_0_only_WITH_Classpath_exception_2_0(self):        
        assert osadl_matrix.get_compatibility("OpenSSL", "GPL-2.0-only WITH Classpath-exception-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_OpenSSL_GPL_2_0_or_later(self):        
        assert osadl_matrix.get_compatibility("OpenSSL", "GPL-2.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_OpenSSL_GPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("OpenSSL", "GPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_OpenSSL_GPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("OpenSSL", "GPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_OpenSSL_HPND(self):        
        assert osadl_matrix.get_compatibility("OpenSSL", "HPND") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_OpenSSL_IBM_pibs(self):        
        assert osadl_matrix.get_compatibility("OpenSSL", "IBM-pibs") == osadl_matrix.OSADLCompatibility.YES
    

    def test_OpenSSL_ICU(self):        
        assert osadl_matrix.get_compatibility("OpenSSL", "ICU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_OpenSSL_IJG(self):        
        assert osadl_matrix.get_compatibility("OpenSSL", "IJG") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_OpenSSL_IPL_1_0(self):        
        assert osadl_matrix.get_compatibility("OpenSSL", "IPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_OpenSSL_ISC(self):        
        assert osadl_matrix.get_compatibility("OpenSSL", "ISC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_OpenSSL_Info_ZIP(self):        
        assert osadl_matrix.get_compatibility("OpenSSL", "Info-ZIP") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_OpenSSL_LGPL_2_1_only(self):        
        assert osadl_matrix.get_compatibility("OpenSSL", "LGPL-2.1-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_OpenSSL_LGPL_2_1_or_later(self):        
        assert osadl_matrix.get_compatibility("OpenSSL", "LGPL-2.1-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_OpenSSL_LGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("OpenSSL", "LGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_OpenSSL_LGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("OpenSSL", "LGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_OpenSSL_Libpng(self):        
        assert osadl_matrix.get_compatibility("OpenSSL", "Libpng") == osadl_matrix.OSADLCompatibility.YES
    

    def test_OpenSSL_MIT(self):        
        assert osadl_matrix.get_compatibility("OpenSSL", "MIT") == osadl_matrix.OSADLCompatibility.YES
    

    def test_OpenSSL_MIT_CMU(self):        
        assert osadl_matrix.get_compatibility("OpenSSL", "MIT-CMU") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_OpenSSL_MPL_1_1(self):        
        assert osadl_matrix.get_compatibility("OpenSSL", "MPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_OpenSSL_MPL_2_0(self):        
        assert osadl_matrix.get_compatibility("OpenSSL", "MPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_OpenSSL_MPL_2_0_no_copyleft_exception(self):        
        assert osadl_matrix.get_compatibility("OpenSSL", "MPL-2.0-no-copyleft-exception") == osadl_matrix.OSADLCompatibility.NO
    

    def test_OpenSSL_MS_PL(self):        
        assert osadl_matrix.get_compatibility("OpenSSL", "MS-PL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_OpenSSL_MS_RL(self):        
        assert osadl_matrix.get_compatibility("OpenSSL", "MS-RL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_OpenSSL_MirOS(self):        
        assert osadl_matrix.get_compatibility("OpenSSL", "MirOS") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_OpenSSL_NBPL_1_0(self):        
        assert osadl_matrix.get_compatibility("OpenSSL", "NBPL-1.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_OpenSSL_NTP(self):        
        assert osadl_matrix.get_compatibility("OpenSSL", "NTP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_OpenSSL_OSL_3_0(self):        
        assert osadl_matrix.get_compatibility("OpenSSL", "OSL-3.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_OpenSSL_OpenSSL(self):        
        assert osadl_matrix.get_compatibility("OpenSSL", "OpenSSL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_OpenSSL_PHP_3_01(self):        
        assert osadl_matrix.get_compatibility("OpenSSL", "PHP-3.01") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_OpenSSL_PostgreSQL(self):        
        assert osadl_matrix.get_compatibility("OpenSSL", "PostgreSQL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_OpenSSL_Python_2_0(self):        
        assert osadl_matrix.get_compatibility("OpenSSL", "Python-2.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_OpenSSL_Qhull(self):        
        assert osadl_matrix.get_compatibility("OpenSSL", "Qhull") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_OpenSSL_RSA_MD(self):        
        assert osadl_matrix.get_compatibility("OpenSSL", "RSA-MD") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_OpenSSL_Sleepycat(self):        
        assert osadl_matrix.get_compatibility("OpenSSL", "Sleepycat") == osadl_matrix.OSADLCompatibility.NO
    

    def test_OpenSSL_SunPro(self):        
        assert osadl_matrix.get_compatibility("OpenSSL", "SunPro") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_OpenSSL_UPL_1_0(self):        
        assert osadl_matrix.get_compatibility("OpenSSL", "UPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_OpenSSL_Unicode_DFS_2015(self):        
        assert osadl_matrix.get_compatibility("OpenSSL", "Unicode-DFS-2015") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_OpenSSL_Unicode_DFS_2016(self):        
        assert osadl_matrix.get_compatibility("OpenSSL", "Unicode-DFS-2016") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_OpenSSL_Unlicense(self):        
        assert osadl_matrix.get_compatibility("OpenSSL", "Unlicense") == osadl_matrix.OSADLCompatibility.YES
    

    def test_OpenSSL_W3C(self):        
        assert osadl_matrix.get_compatibility("OpenSSL", "W3C") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_OpenSSL_W3C_19980720(self):        
        assert osadl_matrix.get_compatibility("OpenSSL", "W3C-19980720") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_OpenSSL_W3C_20150513(self):        
        assert osadl_matrix.get_compatibility("OpenSSL", "W3C-20150513") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_OpenSSL_WTFPL(self):        
        assert osadl_matrix.get_compatibility("OpenSSL", "WTFPL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_OpenSSL_X11(self):        
        assert osadl_matrix.get_compatibility("OpenSSL", "X11") == osadl_matrix.OSADLCompatibility.YES
    

    def test_OpenSSL_XFree86_1_1(self):        
        assert osadl_matrix.get_compatibility("OpenSSL", "XFree86-1.1") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_OpenSSL_ZPL_2_0(self):        
        assert osadl_matrix.get_compatibility("OpenSSL", "ZPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_OpenSSL_Zlib(self):        
        assert osadl_matrix.get_compatibility("OpenSSL", "Zlib") == osadl_matrix.OSADLCompatibility.YES
    

    def test_OpenSSL_bzip2_1_0_5(self):        
        assert osadl_matrix.get_compatibility("OpenSSL", "bzip2-1.0.5") == osadl_matrix.OSADLCompatibility.YES
    

    def test_OpenSSL_bzip2_1_0_6(self):        
        assert osadl_matrix.get_compatibility("OpenSSL", "bzip2-1.0.6") == osadl_matrix.OSADLCompatibility.YES
    

    def test_OpenSSL_curl(self):        
        assert osadl_matrix.get_compatibility("OpenSSL", "curl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_OpenSSL_libtiff(self):        
        assert osadl_matrix.get_compatibility("OpenSSL", "libtiff") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_OpenSSL_zlib_acknowledgement(self):        
        assert osadl_matrix.get_compatibility("OpenSSL", "zlib-acknowledgement") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_PHP_3_01_0BSD(self):        
        assert osadl_matrix.get_compatibility("PHP-3.01", "0BSD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PHP_3_01_AFL_2_0(self):        
        assert osadl_matrix.get_compatibility("PHP-3.01", "AFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PHP_3_01_AFL_2_1(self):        
        assert osadl_matrix.get_compatibility("PHP-3.01", "AFL-2.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PHP_3_01_AFL_3_0(self):        
        assert osadl_matrix.get_compatibility("PHP-3.01", "AFL-3.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PHP_3_01_AGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("PHP-3.01", "AGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_PHP_3_01_AGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("PHP-3.01", "AGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_PHP_3_01_Apache_1_0(self):        
        assert osadl_matrix.get_compatibility("PHP-3.01", "Apache-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PHP_3_01_Apache_1_1(self):        
        assert osadl_matrix.get_compatibility("PHP-3.01", "Apache-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PHP_3_01_Apache_2_0(self):        
        assert osadl_matrix.get_compatibility("PHP-3.01", "Apache-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PHP_3_01_Artistic_1_0(self):        
        assert osadl_matrix.get_compatibility("PHP-3.01", "Artistic-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PHP_3_01_Artistic_1_0_Perl(self):        
        assert osadl_matrix.get_compatibility("PHP-3.01", "Artistic-1.0-Perl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PHP_3_01_Artistic_2_0(self):        
        assert osadl_matrix.get_compatibility("PHP-3.01", "Artistic-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PHP_3_01_BSD_1_Clause(self):        
        assert osadl_matrix.get_compatibility("PHP-3.01", "BSD-1-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PHP_3_01_BSD_2_Clause(self):        
        assert osadl_matrix.get_compatibility("PHP-3.01", "BSD-2-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PHP_3_01_BSD_2_Clause_Patent(self):        
        assert osadl_matrix.get_compatibility("PHP-3.01", "BSD-2-Clause-Patent") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PHP_3_01_BSD_3_Clause(self):        
        assert osadl_matrix.get_compatibility("PHP-3.01", "BSD-3-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PHP_3_01_BSD_4_Clause(self):        
        assert osadl_matrix.get_compatibility("PHP-3.01", "BSD-4-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PHP_3_01_BSD_4_Clause_UC(self):        
        assert osadl_matrix.get_compatibility("PHP-3.01", "BSD-4-Clause-UC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PHP_3_01_BSD_Source_Code(self):        
        assert osadl_matrix.get_compatibility("PHP-3.01", "BSD-Source-Code") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PHP_3_01_BSL_1_0(self):        
        assert osadl_matrix.get_compatibility("PHP-3.01", "BSL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PHP_3_01_CC0_1_0(self):        
        assert osadl_matrix.get_compatibility("PHP-3.01", "CC0-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PHP_3_01_CDDL_1_0(self):        
        assert osadl_matrix.get_compatibility("PHP-3.01", "CDDL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_PHP_3_01_CDDL_1_1(self):        
        assert osadl_matrix.get_compatibility("PHP-3.01", "CDDL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_PHP_3_01_CPL_1_0(self):        
        assert osadl_matrix.get_compatibility("PHP-3.01", "CPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_PHP_3_01_EFL_2_0(self):        
        assert osadl_matrix.get_compatibility("PHP-3.01", "EFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PHP_3_01_EPL_1_0(self):        
        assert osadl_matrix.get_compatibility("PHP-3.01", "EPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_PHP_3_01_EPL_2_0(self):        
        assert osadl_matrix.get_compatibility("PHP-3.01", "EPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_PHP_3_01_EUPL_1_1(self):        
        assert osadl_matrix.get_compatibility("PHP-3.01", "EUPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_PHP_3_01_EUPL_1_2(self):        
        assert osadl_matrix.get_compatibility("PHP-3.01", "EUPL-1.2") == osadl_matrix.OSADLCompatibility.NO
    

    def test_PHP_3_01_FSFAP(self):        
        assert osadl_matrix.get_compatibility("PHP-3.01", "FSFAP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PHP_3_01_FSFULLR(self):        
        assert osadl_matrix.get_compatibility("PHP-3.01", "FSFULLR") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PHP_3_01_FTL(self):        
        assert osadl_matrix.get_compatibility("PHP-3.01", "FTL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PHP_3_01_GPL_1_0_only(self):        
        assert osadl_matrix.get_compatibility("PHP-3.01", "GPL-1.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_PHP_3_01_GPL_1_0_or_later(self):        
        assert osadl_matrix.get_compatibility("PHP-3.01", "GPL-1.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_PHP_3_01_GPL_2_0_only(self):        
        assert osadl_matrix.get_compatibility("PHP-3.01", "GPL-2.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_PHP_3_01_GPL_2_0_only_WITH_Classpath_exception_2_0(self):        
        assert osadl_matrix.get_compatibility("PHP-3.01", "GPL-2.0-only WITH Classpath-exception-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_PHP_3_01_GPL_2_0_or_later(self):        
        assert osadl_matrix.get_compatibility("PHP-3.01", "GPL-2.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_PHP_3_01_GPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("PHP-3.01", "GPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_PHP_3_01_GPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("PHP-3.01", "GPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_PHP_3_01_HPND(self):        
        assert osadl_matrix.get_compatibility("PHP-3.01", "HPND") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PHP_3_01_IBM_pibs(self):        
        assert osadl_matrix.get_compatibility("PHP-3.01", "IBM-pibs") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PHP_3_01_ICU(self):        
        assert osadl_matrix.get_compatibility("PHP-3.01", "ICU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PHP_3_01_IJG(self):        
        assert osadl_matrix.get_compatibility("PHP-3.01", "IJG") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PHP_3_01_IPL_1_0(self):        
        assert osadl_matrix.get_compatibility("PHP-3.01", "IPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_PHP_3_01_ISC(self):        
        assert osadl_matrix.get_compatibility("PHP-3.01", "ISC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PHP_3_01_Info_ZIP(self):        
        assert osadl_matrix.get_compatibility("PHP-3.01", "Info-ZIP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PHP_3_01_LGPL_2_1_only(self):        
        assert osadl_matrix.get_compatibility("PHP-3.01", "LGPL-2.1-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_PHP_3_01_LGPL_2_1_or_later(self):        
        assert osadl_matrix.get_compatibility("PHP-3.01", "LGPL-2.1-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_PHP_3_01_LGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("PHP-3.01", "LGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_PHP_3_01_LGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("PHP-3.01", "LGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_PHP_3_01_Libpng(self):        
        assert osadl_matrix.get_compatibility("PHP-3.01", "Libpng") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PHP_3_01_MIT(self):        
        assert osadl_matrix.get_compatibility("PHP-3.01", "MIT") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PHP_3_01_MIT_CMU(self):        
        assert osadl_matrix.get_compatibility("PHP-3.01", "MIT-CMU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PHP_3_01_MPL_1_1(self):        
        assert osadl_matrix.get_compatibility("PHP-3.01", "MPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_PHP_3_01_MPL_2_0(self):        
        assert osadl_matrix.get_compatibility("PHP-3.01", "MPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_PHP_3_01_MPL_2_0_no_copyleft_exception(self):        
        assert osadl_matrix.get_compatibility("PHP-3.01", "MPL-2.0-no-copyleft-exception") == osadl_matrix.OSADLCompatibility.NO
    

    def test_PHP_3_01_MS_PL(self):        
        assert osadl_matrix.get_compatibility("PHP-3.01", "MS-PL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_PHP_3_01_MS_RL(self):        
        assert osadl_matrix.get_compatibility("PHP-3.01", "MS-RL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_PHP_3_01_MirOS(self):        
        assert osadl_matrix.get_compatibility("PHP-3.01", "MirOS") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PHP_3_01_NBPL_1_0(self):        
        assert osadl_matrix.get_compatibility("PHP-3.01", "NBPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PHP_3_01_NTP(self):        
        assert osadl_matrix.get_compatibility("PHP-3.01", "NTP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PHP_3_01_OSL_3_0(self):        
        assert osadl_matrix.get_compatibility("PHP-3.01", "OSL-3.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_PHP_3_01_OpenSSL(self):        
        assert osadl_matrix.get_compatibility("PHP-3.01", "OpenSSL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_PHP_3_01_PHP_3_01(self):        
        assert osadl_matrix.get_compatibility("PHP-3.01", "PHP-3.01") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PHP_3_01_PostgreSQL(self):        
        assert osadl_matrix.get_compatibility("PHP-3.01", "PostgreSQL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PHP_3_01_Python_2_0(self):        
        assert osadl_matrix.get_compatibility("PHP-3.01", "Python-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PHP_3_01_Qhull(self):        
        assert osadl_matrix.get_compatibility("PHP-3.01", "Qhull") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PHP_3_01_RSA_MD(self):        
        assert osadl_matrix.get_compatibility("PHP-3.01", "RSA-MD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PHP_3_01_Sleepycat(self):        
        assert osadl_matrix.get_compatibility("PHP-3.01", "Sleepycat") == osadl_matrix.OSADLCompatibility.NO
    

    def test_PHP_3_01_SunPro(self):        
        assert osadl_matrix.get_compatibility("PHP-3.01", "SunPro") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PHP_3_01_UPL_1_0(self):        
        assert osadl_matrix.get_compatibility("PHP-3.01", "UPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PHP_3_01_Unicode_DFS_2015(self):        
        assert osadl_matrix.get_compatibility("PHP-3.01", "Unicode-DFS-2015") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PHP_3_01_Unicode_DFS_2016(self):        
        assert osadl_matrix.get_compatibility("PHP-3.01", "Unicode-DFS-2016") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PHP_3_01_Unlicense(self):        
        assert osadl_matrix.get_compatibility("PHP-3.01", "Unlicense") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PHP_3_01_W3C(self):        
        assert osadl_matrix.get_compatibility("PHP-3.01", "W3C") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PHP_3_01_W3C_19980720(self):        
        assert osadl_matrix.get_compatibility("PHP-3.01", "W3C-19980720") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PHP_3_01_W3C_20150513(self):        
        assert osadl_matrix.get_compatibility("PHP-3.01", "W3C-20150513") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PHP_3_01_WTFPL(self):        
        assert osadl_matrix.get_compatibility("PHP-3.01", "WTFPL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PHP_3_01_X11(self):        
        assert osadl_matrix.get_compatibility("PHP-3.01", "X11") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PHP_3_01_XFree86_1_1(self):        
        assert osadl_matrix.get_compatibility("PHP-3.01", "XFree86-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PHP_3_01_ZPL_2_0(self):        
        assert osadl_matrix.get_compatibility("PHP-3.01", "ZPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PHP_3_01_Zlib(self):        
        assert osadl_matrix.get_compatibility("PHP-3.01", "Zlib") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PHP_3_01_bzip2_1_0_5(self):        
        assert osadl_matrix.get_compatibility("PHP-3.01", "bzip2-1.0.5") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PHP_3_01_bzip2_1_0_6(self):        
        assert osadl_matrix.get_compatibility("PHP-3.01", "bzip2-1.0.6") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PHP_3_01_curl(self):        
        assert osadl_matrix.get_compatibility("PHP-3.01", "curl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PHP_3_01_libtiff(self):        
        assert osadl_matrix.get_compatibility("PHP-3.01", "libtiff") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PHP_3_01_zlib_acknowledgement(self):        
        assert osadl_matrix.get_compatibility("PHP-3.01", "zlib-acknowledgement") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PostgreSQL_0BSD(self):        
        assert osadl_matrix.get_compatibility("PostgreSQL", "0BSD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PostgreSQL_AFL_2_0(self):        
        assert osadl_matrix.get_compatibility("PostgreSQL", "AFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PostgreSQL_AFL_2_1(self):        
        assert osadl_matrix.get_compatibility("PostgreSQL", "AFL-2.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PostgreSQL_AFL_3_0(self):        
        assert osadl_matrix.get_compatibility("PostgreSQL", "AFL-3.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PostgreSQL_AGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("PostgreSQL", "AGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_PostgreSQL_AGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("PostgreSQL", "AGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_PostgreSQL_Apache_1_0(self):        
        assert osadl_matrix.get_compatibility("PostgreSQL", "Apache-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PostgreSQL_Apache_1_1(self):        
        assert osadl_matrix.get_compatibility("PostgreSQL", "Apache-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PostgreSQL_Apache_2_0(self):        
        assert osadl_matrix.get_compatibility("PostgreSQL", "Apache-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PostgreSQL_Artistic_1_0(self):        
        assert osadl_matrix.get_compatibility("PostgreSQL", "Artistic-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PostgreSQL_Artistic_1_0_Perl(self):        
        assert osadl_matrix.get_compatibility("PostgreSQL", "Artistic-1.0-Perl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PostgreSQL_Artistic_2_0(self):        
        assert osadl_matrix.get_compatibility("PostgreSQL", "Artistic-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PostgreSQL_BSD_1_Clause(self):        
        assert osadl_matrix.get_compatibility("PostgreSQL", "BSD-1-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PostgreSQL_BSD_2_Clause(self):        
        assert osadl_matrix.get_compatibility("PostgreSQL", "BSD-2-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PostgreSQL_BSD_2_Clause_Patent(self):        
        assert osadl_matrix.get_compatibility("PostgreSQL", "BSD-2-Clause-Patent") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PostgreSQL_BSD_3_Clause(self):        
        assert osadl_matrix.get_compatibility("PostgreSQL", "BSD-3-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PostgreSQL_BSD_4_Clause(self):        
        assert osadl_matrix.get_compatibility("PostgreSQL", "BSD-4-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PostgreSQL_BSD_4_Clause_UC(self):        
        assert osadl_matrix.get_compatibility("PostgreSQL", "BSD-4-Clause-UC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PostgreSQL_BSD_Source_Code(self):        
        assert osadl_matrix.get_compatibility("PostgreSQL", "BSD-Source-Code") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PostgreSQL_BSL_1_0(self):        
        assert osadl_matrix.get_compatibility("PostgreSQL", "BSL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PostgreSQL_CC0_1_0(self):        
        assert osadl_matrix.get_compatibility("PostgreSQL", "CC0-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PostgreSQL_CDDL_1_0(self):        
        assert osadl_matrix.get_compatibility("PostgreSQL", "CDDL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_PostgreSQL_CDDL_1_1(self):        
        assert osadl_matrix.get_compatibility("PostgreSQL", "CDDL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_PostgreSQL_CPL_1_0(self):        
        assert osadl_matrix.get_compatibility("PostgreSQL", "CPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_PostgreSQL_EFL_2_0(self):        
        assert osadl_matrix.get_compatibility("PostgreSQL", "EFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PostgreSQL_EPL_1_0(self):        
        assert osadl_matrix.get_compatibility("PostgreSQL", "EPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_PostgreSQL_EPL_2_0(self):        
        assert osadl_matrix.get_compatibility("PostgreSQL", "EPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_PostgreSQL_EUPL_1_1(self):        
        assert osadl_matrix.get_compatibility("PostgreSQL", "EUPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_PostgreSQL_EUPL_1_2(self):        
        assert osadl_matrix.get_compatibility("PostgreSQL", "EUPL-1.2") == osadl_matrix.OSADLCompatibility.NO
    

    def test_PostgreSQL_FSFAP(self):        
        assert osadl_matrix.get_compatibility("PostgreSQL", "FSFAP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PostgreSQL_FSFULLR(self):        
        assert osadl_matrix.get_compatibility("PostgreSQL", "FSFULLR") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PostgreSQL_FTL(self):        
        assert osadl_matrix.get_compatibility("PostgreSQL", "FTL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PostgreSQL_GPL_1_0_only(self):        
        assert osadl_matrix.get_compatibility("PostgreSQL", "GPL-1.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_PostgreSQL_GPL_1_0_or_later(self):        
        assert osadl_matrix.get_compatibility("PostgreSQL", "GPL-1.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_PostgreSQL_GPL_2_0_only(self):        
        assert osadl_matrix.get_compatibility("PostgreSQL", "GPL-2.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_PostgreSQL_GPL_2_0_only_WITH_Classpath_exception_2_0(self):        
        assert osadl_matrix.get_compatibility("PostgreSQL", "GPL-2.0-only WITH Classpath-exception-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_PostgreSQL_GPL_2_0_or_later(self):        
        assert osadl_matrix.get_compatibility("PostgreSQL", "GPL-2.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_PostgreSQL_GPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("PostgreSQL", "GPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_PostgreSQL_GPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("PostgreSQL", "GPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_PostgreSQL_HPND(self):        
        assert osadl_matrix.get_compatibility("PostgreSQL", "HPND") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PostgreSQL_IBM_pibs(self):        
        assert osadl_matrix.get_compatibility("PostgreSQL", "IBM-pibs") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PostgreSQL_ICU(self):        
        assert osadl_matrix.get_compatibility("PostgreSQL", "ICU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PostgreSQL_IJG(self):        
        assert osadl_matrix.get_compatibility("PostgreSQL", "IJG") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PostgreSQL_IPL_1_0(self):        
        assert osadl_matrix.get_compatibility("PostgreSQL", "IPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_PostgreSQL_ISC(self):        
        assert osadl_matrix.get_compatibility("PostgreSQL", "ISC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PostgreSQL_Info_ZIP(self):        
        assert osadl_matrix.get_compatibility("PostgreSQL", "Info-ZIP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PostgreSQL_LGPL_2_1_only(self):        
        assert osadl_matrix.get_compatibility("PostgreSQL", "LGPL-2.1-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_PostgreSQL_LGPL_2_1_or_later(self):        
        assert osadl_matrix.get_compatibility("PostgreSQL", "LGPL-2.1-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_PostgreSQL_LGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("PostgreSQL", "LGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_PostgreSQL_LGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("PostgreSQL", "LGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_PostgreSQL_Libpng(self):        
        assert osadl_matrix.get_compatibility("PostgreSQL", "Libpng") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PostgreSQL_MIT(self):        
        assert osadl_matrix.get_compatibility("PostgreSQL", "MIT") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PostgreSQL_MIT_CMU(self):        
        assert osadl_matrix.get_compatibility("PostgreSQL", "MIT-CMU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PostgreSQL_MPL_1_1(self):        
        assert osadl_matrix.get_compatibility("PostgreSQL", "MPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_PostgreSQL_MPL_2_0(self):        
        assert osadl_matrix.get_compatibility("PostgreSQL", "MPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_PostgreSQL_MPL_2_0_no_copyleft_exception(self):        
        assert osadl_matrix.get_compatibility("PostgreSQL", "MPL-2.0-no-copyleft-exception") == osadl_matrix.OSADLCompatibility.NO
    

    def test_PostgreSQL_MS_PL(self):        
        assert osadl_matrix.get_compatibility("PostgreSQL", "MS-PL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_PostgreSQL_MS_RL(self):        
        assert osadl_matrix.get_compatibility("PostgreSQL", "MS-RL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_PostgreSQL_MirOS(self):        
        assert osadl_matrix.get_compatibility("PostgreSQL", "MirOS") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PostgreSQL_NBPL_1_0(self):        
        assert osadl_matrix.get_compatibility("PostgreSQL", "NBPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PostgreSQL_NTP(self):        
        assert osadl_matrix.get_compatibility("PostgreSQL", "NTP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PostgreSQL_OSL_3_0(self):        
        assert osadl_matrix.get_compatibility("PostgreSQL", "OSL-3.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_PostgreSQL_OpenSSL(self):        
        assert osadl_matrix.get_compatibility("PostgreSQL", "OpenSSL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_PostgreSQL_PHP_3_01(self):        
        assert osadl_matrix.get_compatibility("PostgreSQL", "PHP-3.01") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PostgreSQL_PostgreSQL(self):        
        assert osadl_matrix.get_compatibility("PostgreSQL", "PostgreSQL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PostgreSQL_Python_2_0(self):        
        assert osadl_matrix.get_compatibility("PostgreSQL", "Python-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PostgreSQL_Qhull(self):        
        assert osadl_matrix.get_compatibility("PostgreSQL", "Qhull") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PostgreSQL_RSA_MD(self):        
        assert osadl_matrix.get_compatibility("PostgreSQL", "RSA-MD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PostgreSQL_Sleepycat(self):        
        assert osadl_matrix.get_compatibility("PostgreSQL", "Sleepycat") == osadl_matrix.OSADLCompatibility.NO
    

    def test_PostgreSQL_SunPro(self):        
        assert osadl_matrix.get_compatibility("PostgreSQL", "SunPro") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PostgreSQL_UPL_1_0(self):        
        assert osadl_matrix.get_compatibility("PostgreSQL", "UPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PostgreSQL_Unicode_DFS_2015(self):        
        assert osadl_matrix.get_compatibility("PostgreSQL", "Unicode-DFS-2015") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PostgreSQL_Unicode_DFS_2016(self):        
        assert osadl_matrix.get_compatibility("PostgreSQL", "Unicode-DFS-2016") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PostgreSQL_Unlicense(self):        
        assert osadl_matrix.get_compatibility("PostgreSQL", "Unlicense") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PostgreSQL_W3C(self):        
        assert osadl_matrix.get_compatibility("PostgreSQL", "W3C") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PostgreSQL_W3C_19980720(self):        
        assert osadl_matrix.get_compatibility("PostgreSQL", "W3C-19980720") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PostgreSQL_W3C_20150513(self):        
        assert osadl_matrix.get_compatibility("PostgreSQL", "W3C-20150513") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PostgreSQL_WTFPL(self):        
        assert osadl_matrix.get_compatibility("PostgreSQL", "WTFPL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PostgreSQL_X11(self):        
        assert osadl_matrix.get_compatibility("PostgreSQL", "X11") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PostgreSQL_XFree86_1_1(self):        
        assert osadl_matrix.get_compatibility("PostgreSQL", "XFree86-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PostgreSQL_ZPL_2_0(self):        
        assert osadl_matrix.get_compatibility("PostgreSQL", "ZPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PostgreSQL_Zlib(self):        
        assert osadl_matrix.get_compatibility("PostgreSQL", "Zlib") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PostgreSQL_bzip2_1_0_5(self):        
        assert osadl_matrix.get_compatibility("PostgreSQL", "bzip2-1.0.5") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PostgreSQL_bzip2_1_0_6(self):        
        assert osadl_matrix.get_compatibility("PostgreSQL", "bzip2-1.0.6") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PostgreSQL_curl(self):        
        assert osadl_matrix.get_compatibility("PostgreSQL", "curl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PostgreSQL_libtiff(self):        
        assert osadl_matrix.get_compatibility("PostgreSQL", "libtiff") == osadl_matrix.OSADLCompatibility.YES
    

    def test_PostgreSQL_zlib_acknowledgement(self):        
        assert osadl_matrix.get_compatibility("PostgreSQL", "zlib-acknowledgement") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Python_2_0_0BSD(self):        
        assert osadl_matrix.get_compatibility("Python-2.0", "0BSD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Python_2_0_AFL_2_0(self):        
        assert osadl_matrix.get_compatibility("Python-2.0", "AFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Python_2_0_AFL_2_1(self):        
        assert osadl_matrix.get_compatibility("Python-2.0", "AFL-2.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Python_2_0_AFL_3_0(self):        
        assert osadl_matrix.get_compatibility("Python-2.0", "AFL-3.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Python_2_0_AGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("Python-2.0", "AGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Python_2_0_AGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("Python-2.0", "AGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Python_2_0_Apache_1_0(self):        
        assert osadl_matrix.get_compatibility("Python-2.0", "Apache-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Python_2_0_Apache_1_1(self):        
        assert osadl_matrix.get_compatibility("Python-2.0", "Apache-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Python_2_0_Apache_2_0(self):        
        assert osadl_matrix.get_compatibility("Python-2.0", "Apache-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Python_2_0_Artistic_1_0(self):        
        assert osadl_matrix.get_compatibility("Python-2.0", "Artistic-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Python_2_0_Artistic_1_0_Perl(self):        
        assert osadl_matrix.get_compatibility("Python-2.0", "Artistic-1.0-Perl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Python_2_0_Artistic_2_0(self):        
        assert osadl_matrix.get_compatibility("Python-2.0", "Artistic-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Python_2_0_BSD_1_Clause(self):        
        assert osadl_matrix.get_compatibility("Python-2.0", "BSD-1-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Python_2_0_BSD_2_Clause(self):        
        assert osadl_matrix.get_compatibility("Python-2.0", "BSD-2-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Python_2_0_BSD_2_Clause_Patent(self):        
        assert osadl_matrix.get_compatibility("Python-2.0", "BSD-2-Clause-Patent") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Python_2_0_BSD_3_Clause(self):        
        assert osadl_matrix.get_compatibility("Python-2.0", "BSD-3-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Python_2_0_BSD_4_Clause(self):        
        assert osadl_matrix.get_compatibility("Python-2.0", "BSD-4-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Python_2_0_BSD_4_Clause_UC(self):        
        assert osadl_matrix.get_compatibility("Python-2.0", "BSD-4-Clause-UC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Python_2_0_BSD_Source_Code(self):        
        assert osadl_matrix.get_compatibility("Python-2.0", "BSD-Source-Code") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Python_2_0_BSL_1_0(self):        
        assert osadl_matrix.get_compatibility("Python-2.0", "BSL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Python_2_0_CC0_1_0(self):        
        assert osadl_matrix.get_compatibility("Python-2.0", "CC0-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Python_2_0_CDDL_1_0(self):        
        assert osadl_matrix.get_compatibility("Python-2.0", "CDDL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Python_2_0_CDDL_1_1(self):        
        assert osadl_matrix.get_compatibility("Python-2.0", "CDDL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Python_2_0_CPL_1_0(self):        
        assert osadl_matrix.get_compatibility("Python-2.0", "CPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Python_2_0_EFL_2_0(self):        
        assert osadl_matrix.get_compatibility("Python-2.0", "EFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Python_2_0_EPL_1_0(self):        
        assert osadl_matrix.get_compatibility("Python-2.0", "EPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Python_2_0_EPL_2_0(self):        
        assert osadl_matrix.get_compatibility("Python-2.0", "EPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Python_2_0_EUPL_1_1(self):        
        assert osadl_matrix.get_compatibility("Python-2.0", "EUPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Python_2_0_EUPL_1_2(self):        
        assert osadl_matrix.get_compatibility("Python-2.0", "EUPL-1.2") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Python_2_0_FSFAP(self):        
        assert osadl_matrix.get_compatibility("Python-2.0", "FSFAP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Python_2_0_FSFULLR(self):        
        assert osadl_matrix.get_compatibility("Python-2.0", "FSFULLR") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Python_2_0_FTL(self):        
        assert osadl_matrix.get_compatibility("Python-2.0", "FTL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Python_2_0_GPL_1_0_only(self):        
        assert osadl_matrix.get_compatibility("Python-2.0", "GPL-1.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Python_2_0_GPL_1_0_or_later(self):        
        assert osadl_matrix.get_compatibility("Python-2.0", "GPL-1.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Python_2_0_GPL_2_0_only(self):        
        assert osadl_matrix.get_compatibility("Python-2.0", "GPL-2.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Python_2_0_GPL_2_0_only_WITH_Classpath_exception_2_0(self):        
        assert osadl_matrix.get_compatibility("Python-2.0", "GPL-2.0-only WITH Classpath-exception-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Python_2_0_GPL_2_0_or_later(self):        
        assert osadl_matrix.get_compatibility("Python-2.0", "GPL-2.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Python_2_0_GPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("Python-2.0", "GPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Python_2_0_GPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("Python-2.0", "GPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Python_2_0_HPND(self):        
        assert osadl_matrix.get_compatibility("Python-2.0", "HPND") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Python_2_0_IBM_pibs(self):        
        assert osadl_matrix.get_compatibility("Python-2.0", "IBM-pibs") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Python_2_0_ICU(self):        
        assert osadl_matrix.get_compatibility("Python-2.0", "ICU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Python_2_0_IJG(self):        
        assert osadl_matrix.get_compatibility("Python-2.0", "IJG") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Python_2_0_IPL_1_0(self):        
        assert osadl_matrix.get_compatibility("Python-2.0", "IPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Python_2_0_ISC(self):        
        assert osadl_matrix.get_compatibility("Python-2.0", "ISC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Python_2_0_Info_ZIP(self):        
        assert osadl_matrix.get_compatibility("Python-2.0", "Info-ZIP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Python_2_0_LGPL_2_1_only(self):        
        assert osadl_matrix.get_compatibility("Python-2.0", "LGPL-2.1-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Python_2_0_LGPL_2_1_or_later(self):        
        assert osadl_matrix.get_compatibility("Python-2.0", "LGPL-2.1-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Python_2_0_LGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("Python-2.0", "LGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Python_2_0_LGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("Python-2.0", "LGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Python_2_0_Libpng(self):        
        assert osadl_matrix.get_compatibility("Python-2.0", "Libpng") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Python_2_0_MIT(self):        
        assert osadl_matrix.get_compatibility("Python-2.0", "MIT") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Python_2_0_MIT_CMU(self):        
        assert osadl_matrix.get_compatibility("Python-2.0", "MIT-CMU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Python_2_0_MPL_1_1(self):        
        assert osadl_matrix.get_compatibility("Python-2.0", "MPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Python_2_0_MPL_2_0(self):        
        assert osadl_matrix.get_compatibility("Python-2.0", "MPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Python_2_0_MPL_2_0_no_copyleft_exception(self):        
        assert osadl_matrix.get_compatibility("Python-2.0", "MPL-2.0-no-copyleft-exception") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Python_2_0_MS_PL(self):        
        assert osadl_matrix.get_compatibility("Python-2.0", "MS-PL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_Python_2_0_MS_RL(self):        
        assert osadl_matrix.get_compatibility("Python-2.0", "MS-RL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Python_2_0_MirOS(self):        
        assert osadl_matrix.get_compatibility("Python-2.0", "MirOS") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Python_2_0_NBPL_1_0(self):        
        assert osadl_matrix.get_compatibility("Python-2.0", "NBPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Python_2_0_NTP(self):        
        assert osadl_matrix.get_compatibility("Python-2.0", "NTP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Python_2_0_OSL_3_0(self):        
        assert osadl_matrix.get_compatibility("Python-2.0", "OSL-3.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Python_2_0_OpenSSL(self):        
        assert osadl_matrix.get_compatibility("Python-2.0", "OpenSSL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_Python_2_0_PHP_3_01(self):        
        assert osadl_matrix.get_compatibility("Python-2.0", "PHP-3.01") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Python_2_0_PostgreSQL(self):        
        assert osadl_matrix.get_compatibility("Python-2.0", "PostgreSQL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Python_2_0_Python_2_0(self):        
        assert osadl_matrix.get_compatibility("Python-2.0", "Python-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Python_2_0_Qhull(self):        
        assert osadl_matrix.get_compatibility("Python-2.0", "Qhull") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Python_2_0_RSA_MD(self):        
        assert osadl_matrix.get_compatibility("Python-2.0", "RSA-MD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Python_2_0_Sleepycat(self):        
        assert osadl_matrix.get_compatibility("Python-2.0", "Sleepycat") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Python_2_0_SunPro(self):        
        assert osadl_matrix.get_compatibility("Python-2.0", "SunPro") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Python_2_0_UPL_1_0(self):        
        assert osadl_matrix.get_compatibility("Python-2.0", "UPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Python_2_0_Unicode_DFS_2015(self):        
        assert osadl_matrix.get_compatibility("Python-2.0", "Unicode-DFS-2015") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Python_2_0_Unicode_DFS_2016(self):        
        assert osadl_matrix.get_compatibility("Python-2.0", "Unicode-DFS-2016") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Python_2_0_Unlicense(self):        
        assert osadl_matrix.get_compatibility("Python-2.0", "Unlicense") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Python_2_0_W3C(self):        
        assert osadl_matrix.get_compatibility("Python-2.0", "W3C") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Python_2_0_W3C_19980720(self):        
        assert osadl_matrix.get_compatibility("Python-2.0", "W3C-19980720") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Python_2_0_W3C_20150513(self):        
        assert osadl_matrix.get_compatibility("Python-2.0", "W3C-20150513") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Python_2_0_WTFPL(self):        
        assert osadl_matrix.get_compatibility("Python-2.0", "WTFPL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Python_2_0_X11(self):        
        assert osadl_matrix.get_compatibility("Python-2.0", "X11") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Python_2_0_XFree86_1_1(self):        
        assert osadl_matrix.get_compatibility("Python-2.0", "XFree86-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Python_2_0_ZPL_2_0(self):        
        assert osadl_matrix.get_compatibility("Python-2.0", "ZPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Python_2_0_Zlib(self):        
        assert osadl_matrix.get_compatibility("Python-2.0", "Zlib") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Python_2_0_bzip2_1_0_5(self):        
        assert osadl_matrix.get_compatibility("Python-2.0", "bzip2-1.0.5") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Python_2_0_bzip2_1_0_6(self):        
        assert osadl_matrix.get_compatibility("Python-2.0", "bzip2-1.0.6") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Python_2_0_curl(self):        
        assert osadl_matrix.get_compatibility("Python-2.0", "curl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Python_2_0_libtiff(self):        
        assert osadl_matrix.get_compatibility("Python-2.0", "libtiff") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Python_2_0_zlib_acknowledgement(self):        
        assert osadl_matrix.get_compatibility("Python-2.0", "zlib-acknowledgement") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Qhull_0BSD(self):        
        assert osadl_matrix.get_compatibility("Qhull", "0BSD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Qhull_AFL_2_0(self):        
        assert osadl_matrix.get_compatibility("Qhull", "AFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Qhull_AFL_2_1(self):        
        assert osadl_matrix.get_compatibility("Qhull", "AFL-2.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Qhull_AFL_3_0(self):        
        assert osadl_matrix.get_compatibility("Qhull", "AFL-3.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Qhull_AGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("Qhull", "AGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Qhull_AGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("Qhull", "AGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Qhull_Apache_1_0(self):        
        assert osadl_matrix.get_compatibility("Qhull", "Apache-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Qhull_Apache_1_1(self):        
        assert osadl_matrix.get_compatibility("Qhull", "Apache-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Qhull_Apache_2_0(self):        
        assert osadl_matrix.get_compatibility("Qhull", "Apache-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Qhull_Artistic_1_0(self):        
        assert osadl_matrix.get_compatibility("Qhull", "Artistic-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Qhull_Artistic_1_0_Perl(self):        
        assert osadl_matrix.get_compatibility("Qhull", "Artistic-1.0-Perl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Qhull_Artistic_2_0(self):        
        assert osadl_matrix.get_compatibility("Qhull", "Artistic-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Qhull_BSD_1_Clause(self):        
        assert osadl_matrix.get_compatibility("Qhull", "BSD-1-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Qhull_BSD_2_Clause(self):        
        assert osadl_matrix.get_compatibility("Qhull", "BSD-2-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Qhull_BSD_2_Clause_Patent(self):        
        assert osadl_matrix.get_compatibility("Qhull", "BSD-2-Clause-Patent") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Qhull_BSD_3_Clause(self):        
        assert osadl_matrix.get_compatibility("Qhull", "BSD-3-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Qhull_BSD_4_Clause(self):        
        assert osadl_matrix.get_compatibility("Qhull", "BSD-4-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Qhull_BSD_4_Clause_UC(self):        
        assert osadl_matrix.get_compatibility("Qhull", "BSD-4-Clause-UC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Qhull_BSD_Source_Code(self):        
        assert osadl_matrix.get_compatibility("Qhull", "BSD-Source-Code") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Qhull_BSL_1_0(self):        
        assert osadl_matrix.get_compatibility("Qhull", "BSL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Qhull_CC0_1_0(self):        
        assert osadl_matrix.get_compatibility("Qhull", "CC0-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Qhull_CDDL_1_0(self):        
        assert osadl_matrix.get_compatibility("Qhull", "CDDL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Qhull_CDDL_1_1(self):        
        assert osadl_matrix.get_compatibility("Qhull", "CDDL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Qhull_CPL_1_0(self):        
        assert osadl_matrix.get_compatibility("Qhull", "CPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Qhull_EFL_2_0(self):        
        assert osadl_matrix.get_compatibility("Qhull", "EFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Qhull_EPL_1_0(self):        
        assert osadl_matrix.get_compatibility("Qhull", "EPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Qhull_EPL_2_0(self):        
        assert osadl_matrix.get_compatibility("Qhull", "EPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Qhull_EUPL_1_1(self):        
        assert osadl_matrix.get_compatibility("Qhull", "EUPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Qhull_EUPL_1_2(self):        
        assert osadl_matrix.get_compatibility("Qhull", "EUPL-1.2") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Qhull_FSFAP(self):        
        assert osadl_matrix.get_compatibility("Qhull", "FSFAP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Qhull_FSFULLR(self):        
        assert osadl_matrix.get_compatibility("Qhull", "FSFULLR") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Qhull_FTL(self):        
        assert osadl_matrix.get_compatibility("Qhull", "FTL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Qhull_GPL_1_0_only(self):        
        assert osadl_matrix.get_compatibility("Qhull", "GPL-1.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Qhull_GPL_1_0_or_later(self):        
        assert osadl_matrix.get_compatibility("Qhull", "GPL-1.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Qhull_GPL_2_0_only(self):        
        assert osadl_matrix.get_compatibility("Qhull", "GPL-2.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Qhull_GPL_2_0_only_WITH_Classpath_exception_2_0(self):        
        assert osadl_matrix.get_compatibility("Qhull", "GPL-2.0-only WITH Classpath-exception-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Qhull_GPL_2_0_or_later(self):        
        assert osadl_matrix.get_compatibility("Qhull", "GPL-2.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Qhull_GPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("Qhull", "GPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Qhull_GPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("Qhull", "GPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Qhull_HPND(self):        
        assert osadl_matrix.get_compatibility("Qhull", "HPND") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Qhull_IBM_pibs(self):        
        assert osadl_matrix.get_compatibility("Qhull", "IBM-pibs") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Qhull_ICU(self):        
        assert osadl_matrix.get_compatibility("Qhull", "ICU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Qhull_IJG(self):        
        assert osadl_matrix.get_compatibility("Qhull", "IJG") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Qhull_IPL_1_0(self):        
        assert osadl_matrix.get_compatibility("Qhull", "IPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Qhull_ISC(self):        
        assert osadl_matrix.get_compatibility("Qhull", "ISC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Qhull_Info_ZIP(self):        
        assert osadl_matrix.get_compatibility("Qhull", "Info-ZIP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Qhull_LGPL_2_1_only(self):        
        assert osadl_matrix.get_compatibility("Qhull", "LGPL-2.1-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Qhull_LGPL_2_1_or_later(self):        
        assert osadl_matrix.get_compatibility("Qhull", "LGPL-2.1-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Qhull_LGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("Qhull", "LGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Qhull_LGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("Qhull", "LGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Qhull_Libpng(self):        
        assert osadl_matrix.get_compatibility("Qhull", "Libpng") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Qhull_MIT(self):        
        assert osadl_matrix.get_compatibility("Qhull", "MIT") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Qhull_MIT_CMU(self):        
        assert osadl_matrix.get_compatibility("Qhull", "MIT-CMU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Qhull_MPL_1_1(self):        
        assert osadl_matrix.get_compatibility("Qhull", "MPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Qhull_MPL_2_0(self):        
        assert osadl_matrix.get_compatibility("Qhull", "MPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Qhull_MPL_2_0_no_copyleft_exception(self):        
        assert osadl_matrix.get_compatibility("Qhull", "MPL-2.0-no-copyleft-exception") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Qhull_MS_PL(self):        
        assert osadl_matrix.get_compatibility("Qhull", "MS-PL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_Qhull_MS_RL(self):        
        assert osadl_matrix.get_compatibility("Qhull", "MS-RL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Qhull_MirOS(self):        
        assert osadl_matrix.get_compatibility("Qhull", "MirOS") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Qhull_NBPL_1_0(self):        
        assert osadl_matrix.get_compatibility("Qhull", "NBPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Qhull_NTP(self):        
        assert osadl_matrix.get_compatibility("Qhull", "NTP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Qhull_OSL_3_0(self):        
        assert osadl_matrix.get_compatibility("Qhull", "OSL-3.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Qhull_OpenSSL(self):        
        assert osadl_matrix.get_compatibility("Qhull", "OpenSSL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_Qhull_PHP_3_01(self):        
        assert osadl_matrix.get_compatibility("Qhull", "PHP-3.01") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Qhull_PostgreSQL(self):        
        assert osadl_matrix.get_compatibility("Qhull", "PostgreSQL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Qhull_Python_2_0(self):        
        assert osadl_matrix.get_compatibility("Qhull", "Python-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Qhull_Qhull(self):        
        assert osadl_matrix.get_compatibility("Qhull", "Qhull") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Qhull_RSA_MD(self):        
        assert osadl_matrix.get_compatibility("Qhull", "RSA-MD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Qhull_Sleepycat(self):        
        assert osadl_matrix.get_compatibility("Qhull", "Sleepycat") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Qhull_SunPro(self):        
        assert osadl_matrix.get_compatibility("Qhull", "SunPro") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Qhull_UPL_1_0(self):        
        assert osadl_matrix.get_compatibility("Qhull", "UPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Qhull_Unicode_DFS_2015(self):        
        assert osadl_matrix.get_compatibility("Qhull", "Unicode-DFS-2015") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Qhull_Unicode_DFS_2016(self):        
        assert osadl_matrix.get_compatibility("Qhull", "Unicode-DFS-2016") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Qhull_Unlicense(self):        
        assert osadl_matrix.get_compatibility("Qhull", "Unlicense") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Qhull_W3C(self):        
        assert osadl_matrix.get_compatibility("Qhull", "W3C") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Qhull_W3C_19980720(self):        
        assert osadl_matrix.get_compatibility("Qhull", "W3C-19980720") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Qhull_W3C_20150513(self):        
        assert osadl_matrix.get_compatibility("Qhull", "W3C-20150513") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Qhull_WTFPL(self):        
        assert osadl_matrix.get_compatibility("Qhull", "WTFPL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Qhull_X11(self):        
        assert osadl_matrix.get_compatibility("Qhull", "X11") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Qhull_XFree86_1_1(self):        
        assert osadl_matrix.get_compatibility("Qhull", "XFree86-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Qhull_ZPL_2_0(self):        
        assert osadl_matrix.get_compatibility("Qhull", "ZPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Qhull_Zlib(self):        
        assert osadl_matrix.get_compatibility("Qhull", "Zlib") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Qhull_bzip2_1_0_5(self):        
        assert osadl_matrix.get_compatibility("Qhull", "bzip2-1.0.5") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Qhull_bzip2_1_0_6(self):        
        assert osadl_matrix.get_compatibility("Qhull", "bzip2-1.0.6") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Qhull_curl(self):        
        assert osadl_matrix.get_compatibility("Qhull", "curl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Qhull_libtiff(self):        
        assert osadl_matrix.get_compatibility("Qhull", "libtiff") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Qhull_zlib_acknowledgement(self):        
        assert osadl_matrix.get_compatibility("Qhull", "zlib-acknowledgement") == osadl_matrix.OSADLCompatibility.YES
    

    def test_RSA_MD_0BSD(self):        
        assert osadl_matrix.get_compatibility("RSA-MD", "0BSD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_RSA_MD_AFL_2_0(self):        
        assert osadl_matrix.get_compatibility("RSA-MD", "AFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_RSA_MD_AFL_2_1(self):        
        assert osadl_matrix.get_compatibility("RSA-MD", "AFL-2.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_RSA_MD_AFL_3_0(self):        
        assert osadl_matrix.get_compatibility("RSA-MD", "AFL-3.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_RSA_MD_AGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("RSA-MD", "AGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_RSA_MD_AGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("RSA-MD", "AGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_RSA_MD_Apache_1_0(self):        
        assert osadl_matrix.get_compatibility("RSA-MD", "Apache-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_RSA_MD_Apache_1_1(self):        
        assert osadl_matrix.get_compatibility("RSA-MD", "Apache-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_RSA_MD_Apache_2_0(self):        
        assert osadl_matrix.get_compatibility("RSA-MD", "Apache-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_RSA_MD_Artistic_1_0(self):        
        assert osadl_matrix.get_compatibility("RSA-MD", "Artistic-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_RSA_MD_Artistic_1_0_Perl(self):        
        assert osadl_matrix.get_compatibility("RSA-MD", "Artistic-1.0-Perl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_RSA_MD_Artistic_2_0(self):        
        assert osadl_matrix.get_compatibility("RSA-MD", "Artistic-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_RSA_MD_BSD_1_Clause(self):        
        assert osadl_matrix.get_compatibility("RSA-MD", "BSD-1-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_RSA_MD_BSD_2_Clause(self):        
        assert osadl_matrix.get_compatibility("RSA-MD", "BSD-2-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_RSA_MD_BSD_2_Clause_Patent(self):        
        assert osadl_matrix.get_compatibility("RSA-MD", "BSD-2-Clause-Patent") == osadl_matrix.OSADLCompatibility.YES
    

    def test_RSA_MD_BSD_3_Clause(self):        
        assert osadl_matrix.get_compatibility("RSA-MD", "BSD-3-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_RSA_MD_BSD_4_Clause(self):        
        assert osadl_matrix.get_compatibility("RSA-MD", "BSD-4-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_RSA_MD_BSD_4_Clause_UC(self):        
        assert osadl_matrix.get_compatibility("RSA-MD", "BSD-4-Clause-UC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_RSA_MD_BSD_Source_Code(self):        
        assert osadl_matrix.get_compatibility("RSA-MD", "BSD-Source-Code") == osadl_matrix.OSADLCompatibility.YES
    

    def test_RSA_MD_BSL_1_0(self):        
        assert osadl_matrix.get_compatibility("RSA-MD", "BSL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_RSA_MD_CC0_1_0(self):        
        assert osadl_matrix.get_compatibility("RSA-MD", "CC0-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_RSA_MD_CDDL_1_0(self):        
        assert osadl_matrix.get_compatibility("RSA-MD", "CDDL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_RSA_MD_CDDL_1_1(self):        
        assert osadl_matrix.get_compatibility("RSA-MD", "CDDL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_RSA_MD_CPL_1_0(self):        
        assert osadl_matrix.get_compatibility("RSA-MD", "CPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_RSA_MD_EFL_2_0(self):        
        assert osadl_matrix.get_compatibility("RSA-MD", "EFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_RSA_MD_EPL_1_0(self):        
        assert osadl_matrix.get_compatibility("RSA-MD", "EPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_RSA_MD_EPL_2_0(self):        
        assert osadl_matrix.get_compatibility("RSA-MD", "EPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_RSA_MD_EUPL_1_1(self):        
        assert osadl_matrix.get_compatibility("RSA-MD", "EUPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_RSA_MD_EUPL_1_2(self):        
        assert osadl_matrix.get_compatibility("RSA-MD", "EUPL-1.2") == osadl_matrix.OSADLCompatibility.NO
    

    def test_RSA_MD_FSFAP(self):        
        assert osadl_matrix.get_compatibility("RSA-MD", "FSFAP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_RSA_MD_FSFULLR(self):        
        assert osadl_matrix.get_compatibility("RSA-MD", "FSFULLR") == osadl_matrix.OSADLCompatibility.YES
    

    def test_RSA_MD_FTL(self):        
        assert osadl_matrix.get_compatibility("RSA-MD", "FTL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_RSA_MD_GPL_1_0_only(self):        
        assert osadl_matrix.get_compatibility("RSA-MD", "GPL-1.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_RSA_MD_GPL_1_0_or_later(self):        
        assert osadl_matrix.get_compatibility("RSA-MD", "GPL-1.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_RSA_MD_GPL_2_0_only(self):        
        assert osadl_matrix.get_compatibility("RSA-MD", "GPL-2.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_RSA_MD_GPL_2_0_only_WITH_Classpath_exception_2_0(self):        
        assert osadl_matrix.get_compatibility("RSA-MD", "GPL-2.0-only WITH Classpath-exception-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_RSA_MD_GPL_2_0_or_later(self):        
        assert osadl_matrix.get_compatibility("RSA-MD", "GPL-2.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_RSA_MD_GPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("RSA-MD", "GPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_RSA_MD_GPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("RSA-MD", "GPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_RSA_MD_HPND(self):        
        assert osadl_matrix.get_compatibility("RSA-MD", "HPND") == osadl_matrix.OSADLCompatibility.YES
    

    def test_RSA_MD_IBM_pibs(self):        
        assert osadl_matrix.get_compatibility("RSA-MD", "IBM-pibs") == osadl_matrix.OSADLCompatibility.YES
    

    def test_RSA_MD_ICU(self):        
        assert osadl_matrix.get_compatibility("RSA-MD", "ICU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_RSA_MD_IJG(self):        
        assert osadl_matrix.get_compatibility("RSA-MD", "IJG") == osadl_matrix.OSADLCompatibility.YES
    

    def test_RSA_MD_IPL_1_0(self):        
        assert osadl_matrix.get_compatibility("RSA-MD", "IPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_RSA_MD_ISC(self):        
        assert osadl_matrix.get_compatibility("RSA-MD", "ISC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_RSA_MD_Info_ZIP(self):        
        assert osadl_matrix.get_compatibility("RSA-MD", "Info-ZIP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_RSA_MD_LGPL_2_1_only(self):        
        assert osadl_matrix.get_compatibility("RSA-MD", "LGPL-2.1-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_RSA_MD_LGPL_2_1_or_later(self):        
        assert osadl_matrix.get_compatibility("RSA-MD", "LGPL-2.1-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_RSA_MD_LGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("RSA-MD", "LGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_RSA_MD_LGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("RSA-MD", "LGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_RSA_MD_Libpng(self):        
        assert osadl_matrix.get_compatibility("RSA-MD", "Libpng") == osadl_matrix.OSADLCompatibility.YES
    

    def test_RSA_MD_MIT(self):        
        assert osadl_matrix.get_compatibility("RSA-MD", "MIT") == osadl_matrix.OSADLCompatibility.YES
    

    def test_RSA_MD_MIT_CMU(self):        
        assert osadl_matrix.get_compatibility("RSA-MD", "MIT-CMU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_RSA_MD_MPL_1_1(self):        
        assert osadl_matrix.get_compatibility("RSA-MD", "MPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_RSA_MD_MPL_2_0(self):        
        assert osadl_matrix.get_compatibility("RSA-MD", "MPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_RSA_MD_MPL_2_0_no_copyleft_exception(self):        
        assert osadl_matrix.get_compatibility("RSA-MD", "MPL-2.0-no-copyleft-exception") == osadl_matrix.OSADLCompatibility.NO
    

    def test_RSA_MD_MS_PL(self):        
        assert osadl_matrix.get_compatibility("RSA-MD", "MS-PL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_RSA_MD_MS_RL(self):        
        assert osadl_matrix.get_compatibility("RSA-MD", "MS-RL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_RSA_MD_MirOS(self):        
        assert osadl_matrix.get_compatibility("RSA-MD", "MirOS") == osadl_matrix.OSADLCompatibility.YES
    

    def test_RSA_MD_NBPL_1_0(self):        
        assert osadl_matrix.get_compatibility("RSA-MD", "NBPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_RSA_MD_NTP(self):        
        assert osadl_matrix.get_compatibility("RSA-MD", "NTP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_RSA_MD_OSL_3_0(self):        
        assert osadl_matrix.get_compatibility("RSA-MD", "OSL-3.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_RSA_MD_OpenSSL(self):        
        assert osadl_matrix.get_compatibility("RSA-MD", "OpenSSL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_RSA_MD_PHP_3_01(self):        
        assert osadl_matrix.get_compatibility("RSA-MD", "PHP-3.01") == osadl_matrix.OSADLCompatibility.YES
    

    def test_RSA_MD_PostgreSQL(self):        
        assert osadl_matrix.get_compatibility("RSA-MD", "PostgreSQL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_RSA_MD_Python_2_0(self):        
        assert osadl_matrix.get_compatibility("RSA-MD", "Python-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_RSA_MD_Qhull(self):        
        assert osadl_matrix.get_compatibility("RSA-MD", "Qhull") == osadl_matrix.OSADLCompatibility.YES
    

    def test_RSA_MD_RSA_MD(self):        
        assert osadl_matrix.get_compatibility("RSA-MD", "RSA-MD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_RSA_MD_Sleepycat(self):        
        assert osadl_matrix.get_compatibility("RSA-MD", "Sleepycat") == osadl_matrix.OSADLCompatibility.NO
    

    def test_RSA_MD_SunPro(self):        
        assert osadl_matrix.get_compatibility("RSA-MD", "SunPro") == osadl_matrix.OSADLCompatibility.YES
    

    def test_RSA_MD_UPL_1_0(self):        
        assert osadl_matrix.get_compatibility("RSA-MD", "UPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_RSA_MD_Unicode_DFS_2015(self):        
        assert osadl_matrix.get_compatibility("RSA-MD", "Unicode-DFS-2015") == osadl_matrix.OSADLCompatibility.YES
    

    def test_RSA_MD_Unicode_DFS_2016(self):        
        assert osadl_matrix.get_compatibility("RSA-MD", "Unicode-DFS-2016") == osadl_matrix.OSADLCompatibility.YES
    

    def test_RSA_MD_Unlicense(self):        
        assert osadl_matrix.get_compatibility("RSA-MD", "Unlicense") == osadl_matrix.OSADLCompatibility.YES
    

    def test_RSA_MD_W3C(self):        
        assert osadl_matrix.get_compatibility("RSA-MD", "W3C") == osadl_matrix.OSADLCompatibility.YES
    

    def test_RSA_MD_W3C_19980720(self):        
        assert osadl_matrix.get_compatibility("RSA-MD", "W3C-19980720") == osadl_matrix.OSADLCompatibility.YES
    

    def test_RSA_MD_W3C_20150513(self):        
        assert osadl_matrix.get_compatibility("RSA-MD", "W3C-20150513") == osadl_matrix.OSADLCompatibility.YES
    

    def test_RSA_MD_WTFPL(self):        
        assert osadl_matrix.get_compatibility("RSA-MD", "WTFPL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_RSA_MD_X11(self):        
        assert osadl_matrix.get_compatibility("RSA-MD", "X11") == osadl_matrix.OSADLCompatibility.YES
    

    def test_RSA_MD_XFree86_1_1(self):        
        assert osadl_matrix.get_compatibility("RSA-MD", "XFree86-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_RSA_MD_ZPL_2_0(self):        
        assert osadl_matrix.get_compatibility("RSA-MD", "ZPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_RSA_MD_Zlib(self):        
        assert osadl_matrix.get_compatibility("RSA-MD", "Zlib") == osadl_matrix.OSADLCompatibility.YES
    

    def test_RSA_MD_bzip2_1_0_5(self):        
        assert osadl_matrix.get_compatibility("RSA-MD", "bzip2-1.0.5") == osadl_matrix.OSADLCompatibility.YES
    

    def test_RSA_MD_bzip2_1_0_6(self):        
        assert osadl_matrix.get_compatibility("RSA-MD", "bzip2-1.0.6") == osadl_matrix.OSADLCompatibility.YES
    

    def test_RSA_MD_curl(self):        
        assert osadl_matrix.get_compatibility("RSA-MD", "curl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_RSA_MD_libtiff(self):        
        assert osadl_matrix.get_compatibility("RSA-MD", "libtiff") == osadl_matrix.OSADLCompatibility.YES
    

    def test_RSA_MD_zlib_acknowledgement(self):        
        assert osadl_matrix.get_compatibility("RSA-MD", "zlib-acknowledgement") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Sleepycat_0BSD(self):        
        assert osadl_matrix.get_compatibility("Sleepycat", "0BSD") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_Sleepycat_AFL_2_0(self):        
        assert osadl_matrix.get_compatibility("Sleepycat", "AFL-2.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_Sleepycat_AFL_2_1(self):        
        assert osadl_matrix.get_compatibility("Sleepycat", "AFL-2.1") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_Sleepycat_AFL_3_0(self):        
        assert osadl_matrix.get_compatibility("Sleepycat", "AFL-3.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_Sleepycat_AGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("Sleepycat", "AGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Sleepycat_AGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("Sleepycat", "AGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Sleepycat_Apache_1_0(self):        
        assert osadl_matrix.get_compatibility("Sleepycat", "Apache-1.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_Sleepycat_Apache_1_1(self):        
        assert osadl_matrix.get_compatibility("Sleepycat", "Apache-1.1") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_Sleepycat_Apache_2_0(self):        
        assert osadl_matrix.get_compatibility("Sleepycat", "Apache-2.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_Sleepycat_Artistic_1_0(self):        
        assert osadl_matrix.get_compatibility("Sleepycat", "Artistic-1.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_Sleepycat_Artistic_1_0_Perl(self):        
        assert osadl_matrix.get_compatibility("Sleepycat", "Artistic-1.0-Perl") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_Sleepycat_Artistic_2_0(self):        
        assert osadl_matrix.get_compatibility("Sleepycat", "Artistic-2.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_Sleepycat_BSD_1_Clause(self):        
        assert osadl_matrix.get_compatibility("Sleepycat", "BSD-1-Clause") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_Sleepycat_BSD_2_Clause(self):        
        assert osadl_matrix.get_compatibility("Sleepycat", "BSD-2-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Sleepycat_BSD_2_Clause_Patent(self):        
        assert osadl_matrix.get_compatibility("Sleepycat", "BSD-2-Clause-Patent") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Sleepycat_BSD_3_Clause(self):        
        assert osadl_matrix.get_compatibility("Sleepycat", "BSD-3-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Sleepycat_BSD_4_Clause(self):        
        assert osadl_matrix.get_compatibility("Sleepycat", "BSD-4-Clause") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_Sleepycat_BSD_4_Clause_UC(self):        
        assert osadl_matrix.get_compatibility("Sleepycat", "BSD-4-Clause-UC") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_Sleepycat_BSD_Source_Code(self):        
        assert osadl_matrix.get_compatibility("Sleepycat", "BSD-Source-Code") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_Sleepycat_BSL_1_0(self):        
        assert osadl_matrix.get_compatibility("Sleepycat", "BSL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Sleepycat_CC0_1_0(self):        
        assert osadl_matrix.get_compatibility("Sleepycat", "CC0-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Sleepycat_CDDL_1_0(self):        
        assert osadl_matrix.get_compatibility("Sleepycat", "CDDL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Sleepycat_CDDL_1_1(self):        
        assert osadl_matrix.get_compatibility("Sleepycat", "CDDL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Sleepycat_CPL_1_0(self):        
        assert osadl_matrix.get_compatibility("Sleepycat", "CPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Sleepycat_EFL_2_0(self):        
        assert osadl_matrix.get_compatibility("Sleepycat", "EFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Sleepycat_EPL_1_0(self):        
        assert osadl_matrix.get_compatibility("Sleepycat", "EPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Sleepycat_EPL_2_0(self):        
        assert osadl_matrix.get_compatibility("Sleepycat", "EPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Sleepycat_EUPL_1_1(self):        
        assert osadl_matrix.get_compatibility("Sleepycat", "EUPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Sleepycat_EUPL_1_2(self):        
        assert osadl_matrix.get_compatibility("Sleepycat", "EUPL-1.2") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Sleepycat_FSFAP(self):        
        assert osadl_matrix.get_compatibility("Sleepycat", "FSFAP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Sleepycat_FSFULLR(self):        
        assert osadl_matrix.get_compatibility("Sleepycat", "FSFULLR") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Sleepycat_FTL(self):        
        assert osadl_matrix.get_compatibility("Sleepycat", "FTL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_Sleepycat_GPL_1_0_only(self):        
        assert osadl_matrix.get_compatibility("Sleepycat", "GPL-1.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Sleepycat_GPL_1_0_or_later(self):        
        assert osadl_matrix.get_compatibility("Sleepycat", "GPL-1.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Sleepycat_GPL_2_0_only(self):        
        assert osadl_matrix.get_compatibility("Sleepycat", "GPL-2.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Sleepycat_GPL_2_0_only_WITH_Classpath_exception_2_0(self):        
        assert osadl_matrix.get_compatibility("Sleepycat", "GPL-2.0-only WITH Classpath-exception-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Sleepycat_GPL_2_0_or_later(self):        
        assert osadl_matrix.get_compatibility("Sleepycat", "GPL-2.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Sleepycat_GPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("Sleepycat", "GPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Sleepycat_GPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("Sleepycat", "GPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Sleepycat_HPND(self):        
        assert osadl_matrix.get_compatibility("Sleepycat", "HPND") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_Sleepycat_IBM_pibs(self):        
        assert osadl_matrix.get_compatibility("Sleepycat", "IBM-pibs") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Sleepycat_ICU(self):        
        assert osadl_matrix.get_compatibility("Sleepycat", "ICU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Sleepycat_IJG(self):        
        assert osadl_matrix.get_compatibility("Sleepycat", "IJG") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_Sleepycat_IPL_1_0(self):        
        assert osadl_matrix.get_compatibility("Sleepycat", "IPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Sleepycat_ISC(self):        
        assert osadl_matrix.get_compatibility("Sleepycat", "ISC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Sleepycat_Info_ZIP(self):        
        assert osadl_matrix.get_compatibility("Sleepycat", "Info-ZIP") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_Sleepycat_LGPL_2_1_only(self):        
        assert osadl_matrix.get_compatibility("Sleepycat", "LGPL-2.1-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Sleepycat_LGPL_2_1_or_later(self):        
        assert osadl_matrix.get_compatibility("Sleepycat", "LGPL-2.1-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Sleepycat_LGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("Sleepycat", "LGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Sleepycat_LGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("Sleepycat", "LGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Sleepycat_Libpng(self):        
        assert osadl_matrix.get_compatibility("Sleepycat", "Libpng") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Sleepycat_MIT(self):        
        assert osadl_matrix.get_compatibility("Sleepycat", "MIT") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Sleepycat_MIT_CMU(self):        
        assert osadl_matrix.get_compatibility("Sleepycat", "MIT-CMU") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_Sleepycat_MPL_1_1(self):        
        assert osadl_matrix.get_compatibility("Sleepycat", "MPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Sleepycat_MPL_2_0(self):        
        assert osadl_matrix.get_compatibility("Sleepycat", "MPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Sleepycat_MPL_2_0_no_copyleft_exception(self):        
        assert osadl_matrix.get_compatibility("Sleepycat", "MPL-2.0-no-copyleft-exception") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Sleepycat_MS_PL(self):        
        assert osadl_matrix.get_compatibility("Sleepycat", "MS-PL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_Sleepycat_MS_RL(self):        
        assert osadl_matrix.get_compatibility("Sleepycat", "MS-RL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Sleepycat_MirOS(self):        
        assert osadl_matrix.get_compatibility("Sleepycat", "MirOS") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_Sleepycat_NBPL_1_0(self):        
        assert osadl_matrix.get_compatibility("Sleepycat", "NBPL-1.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_Sleepycat_NTP(self):        
        assert osadl_matrix.get_compatibility("Sleepycat", "NTP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Sleepycat_OSL_3_0(self):        
        assert osadl_matrix.get_compatibility("Sleepycat", "OSL-3.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Sleepycat_OpenSSL(self):        
        assert osadl_matrix.get_compatibility("Sleepycat", "OpenSSL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_Sleepycat_PHP_3_01(self):        
        assert osadl_matrix.get_compatibility("Sleepycat", "PHP-3.01") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_Sleepycat_PostgreSQL(self):        
        assert osadl_matrix.get_compatibility("Sleepycat", "PostgreSQL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_Sleepycat_Python_2_0(self):        
        assert osadl_matrix.get_compatibility("Sleepycat", "Python-2.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_Sleepycat_Qhull(self):        
        assert osadl_matrix.get_compatibility("Sleepycat", "Qhull") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_Sleepycat_RSA_MD(self):        
        assert osadl_matrix.get_compatibility("Sleepycat", "RSA-MD") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_Sleepycat_Sleepycat(self):        
        assert osadl_matrix.get_compatibility("Sleepycat", "Sleepycat") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Sleepycat_SunPro(self):        
        assert osadl_matrix.get_compatibility("Sleepycat", "SunPro") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_Sleepycat_UPL_1_0(self):        
        assert osadl_matrix.get_compatibility("Sleepycat", "UPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Sleepycat_Unicode_DFS_2015(self):        
        assert osadl_matrix.get_compatibility("Sleepycat", "Unicode-DFS-2015") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_Sleepycat_Unicode_DFS_2016(self):        
        assert osadl_matrix.get_compatibility("Sleepycat", "Unicode-DFS-2016") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_Sleepycat_Unlicense(self):        
        assert osadl_matrix.get_compatibility("Sleepycat", "Unlicense") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Sleepycat_W3C(self):        
        assert osadl_matrix.get_compatibility("Sleepycat", "W3C") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_Sleepycat_W3C_19980720(self):        
        assert osadl_matrix.get_compatibility("Sleepycat", "W3C-19980720") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_Sleepycat_W3C_20150513(self):        
        assert osadl_matrix.get_compatibility("Sleepycat", "W3C-20150513") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_Sleepycat_WTFPL(self):        
        assert osadl_matrix.get_compatibility("Sleepycat", "WTFPL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Sleepycat_X11(self):        
        assert osadl_matrix.get_compatibility("Sleepycat", "X11") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Sleepycat_XFree86_1_1(self):        
        assert osadl_matrix.get_compatibility("Sleepycat", "XFree86-1.1") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_Sleepycat_ZPL_2_0(self):        
        assert osadl_matrix.get_compatibility("Sleepycat", "ZPL-2.0") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_Sleepycat_Zlib(self):        
        assert osadl_matrix.get_compatibility("Sleepycat", "Zlib") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Sleepycat_bzip2_1_0_5(self):        
        assert osadl_matrix.get_compatibility("Sleepycat", "bzip2-1.0.5") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Sleepycat_bzip2_1_0_6(self):        
        assert osadl_matrix.get_compatibility("Sleepycat", "bzip2-1.0.6") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Sleepycat_curl(self):        
        assert osadl_matrix.get_compatibility("Sleepycat", "curl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Sleepycat_libtiff(self):        
        assert osadl_matrix.get_compatibility("Sleepycat", "libtiff") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_Sleepycat_zlib_acknowledgement(self):        
        assert osadl_matrix.get_compatibility("Sleepycat", "zlib-acknowledgement") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_SunPro_0BSD(self):        
        assert osadl_matrix.get_compatibility("SunPro", "0BSD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_SunPro_AFL_2_0(self):        
        assert osadl_matrix.get_compatibility("SunPro", "AFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_SunPro_AFL_2_1(self):        
        assert osadl_matrix.get_compatibility("SunPro", "AFL-2.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_SunPro_AFL_3_0(self):        
        assert osadl_matrix.get_compatibility("SunPro", "AFL-3.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_SunPro_AGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("SunPro", "AGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_SunPro_AGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("SunPro", "AGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_SunPro_Apache_1_0(self):        
        assert osadl_matrix.get_compatibility("SunPro", "Apache-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_SunPro_Apache_1_1(self):        
        assert osadl_matrix.get_compatibility("SunPro", "Apache-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_SunPro_Apache_2_0(self):        
        assert osadl_matrix.get_compatibility("SunPro", "Apache-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_SunPro_Artistic_1_0(self):        
        assert osadl_matrix.get_compatibility("SunPro", "Artistic-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_SunPro_Artistic_1_0_Perl(self):        
        assert osadl_matrix.get_compatibility("SunPro", "Artistic-1.0-Perl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_SunPro_Artistic_2_0(self):        
        assert osadl_matrix.get_compatibility("SunPro", "Artistic-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_SunPro_BSD_1_Clause(self):        
        assert osadl_matrix.get_compatibility("SunPro", "BSD-1-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_SunPro_BSD_2_Clause(self):        
        assert osadl_matrix.get_compatibility("SunPro", "BSD-2-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_SunPro_BSD_2_Clause_Patent(self):        
        assert osadl_matrix.get_compatibility("SunPro", "BSD-2-Clause-Patent") == osadl_matrix.OSADLCompatibility.YES
    

    def test_SunPro_BSD_3_Clause(self):        
        assert osadl_matrix.get_compatibility("SunPro", "BSD-3-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_SunPro_BSD_4_Clause(self):        
        assert osadl_matrix.get_compatibility("SunPro", "BSD-4-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_SunPro_BSD_4_Clause_UC(self):        
        assert osadl_matrix.get_compatibility("SunPro", "BSD-4-Clause-UC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_SunPro_BSD_Source_Code(self):        
        assert osadl_matrix.get_compatibility("SunPro", "BSD-Source-Code") == osadl_matrix.OSADLCompatibility.YES
    

    def test_SunPro_BSL_1_0(self):        
        assert osadl_matrix.get_compatibility("SunPro", "BSL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_SunPro_CC0_1_0(self):        
        assert osadl_matrix.get_compatibility("SunPro", "CC0-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_SunPro_CDDL_1_0(self):        
        assert osadl_matrix.get_compatibility("SunPro", "CDDL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_SunPro_CDDL_1_1(self):        
        assert osadl_matrix.get_compatibility("SunPro", "CDDL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_SunPro_CPL_1_0(self):        
        assert osadl_matrix.get_compatibility("SunPro", "CPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_SunPro_EFL_2_0(self):        
        assert osadl_matrix.get_compatibility("SunPro", "EFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_SunPro_EPL_1_0(self):        
        assert osadl_matrix.get_compatibility("SunPro", "EPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_SunPro_EPL_2_0(self):        
        assert osadl_matrix.get_compatibility("SunPro", "EPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_SunPro_EUPL_1_1(self):        
        assert osadl_matrix.get_compatibility("SunPro", "EUPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_SunPro_EUPL_1_2(self):        
        assert osadl_matrix.get_compatibility("SunPro", "EUPL-1.2") == osadl_matrix.OSADLCompatibility.NO
    

    def test_SunPro_FSFAP(self):        
        assert osadl_matrix.get_compatibility("SunPro", "FSFAP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_SunPro_FSFULLR(self):        
        assert osadl_matrix.get_compatibility("SunPro", "FSFULLR") == osadl_matrix.OSADLCompatibility.YES
    

    def test_SunPro_FTL(self):        
        assert osadl_matrix.get_compatibility("SunPro", "FTL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_SunPro_GPL_1_0_only(self):        
        assert osadl_matrix.get_compatibility("SunPro", "GPL-1.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_SunPro_GPL_1_0_or_later(self):        
        assert osadl_matrix.get_compatibility("SunPro", "GPL-1.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_SunPro_GPL_2_0_only(self):        
        assert osadl_matrix.get_compatibility("SunPro", "GPL-2.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_SunPro_GPL_2_0_only_WITH_Classpath_exception_2_0(self):        
        assert osadl_matrix.get_compatibility("SunPro", "GPL-2.0-only WITH Classpath-exception-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_SunPro_GPL_2_0_or_later(self):        
        assert osadl_matrix.get_compatibility("SunPro", "GPL-2.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_SunPro_GPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("SunPro", "GPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_SunPro_GPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("SunPro", "GPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_SunPro_HPND(self):        
        assert osadl_matrix.get_compatibility("SunPro", "HPND") == osadl_matrix.OSADLCompatibility.YES
    

    def test_SunPro_IBM_pibs(self):        
        assert osadl_matrix.get_compatibility("SunPro", "IBM-pibs") == osadl_matrix.OSADLCompatibility.YES
    

    def test_SunPro_ICU(self):        
        assert osadl_matrix.get_compatibility("SunPro", "ICU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_SunPro_IJG(self):        
        assert osadl_matrix.get_compatibility("SunPro", "IJG") == osadl_matrix.OSADLCompatibility.YES
    

    def test_SunPro_IPL_1_0(self):        
        assert osadl_matrix.get_compatibility("SunPro", "IPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_SunPro_ISC(self):        
        assert osadl_matrix.get_compatibility("SunPro", "ISC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_SunPro_Info_ZIP(self):        
        assert osadl_matrix.get_compatibility("SunPro", "Info-ZIP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_SunPro_LGPL_2_1_only(self):        
        assert osadl_matrix.get_compatibility("SunPro", "LGPL-2.1-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_SunPro_LGPL_2_1_or_later(self):        
        assert osadl_matrix.get_compatibility("SunPro", "LGPL-2.1-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_SunPro_LGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("SunPro", "LGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_SunPro_LGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("SunPro", "LGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_SunPro_Libpng(self):        
        assert osadl_matrix.get_compatibility("SunPro", "Libpng") == osadl_matrix.OSADLCompatibility.YES
    

    def test_SunPro_MIT(self):        
        assert osadl_matrix.get_compatibility("SunPro", "MIT") == osadl_matrix.OSADLCompatibility.YES
    

    def test_SunPro_MIT_CMU(self):        
        assert osadl_matrix.get_compatibility("SunPro", "MIT-CMU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_SunPro_MPL_1_1(self):        
        assert osadl_matrix.get_compatibility("SunPro", "MPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_SunPro_MPL_2_0(self):        
        assert osadl_matrix.get_compatibility("SunPro", "MPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_SunPro_MPL_2_0_no_copyleft_exception(self):        
        assert osadl_matrix.get_compatibility("SunPro", "MPL-2.0-no-copyleft-exception") == osadl_matrix.OSADLCompatibility.NO
    

    def test_SunPro_MS_PL(self):        
        assert osadl_matrix.get_compatibility("SunPro", "MS-PL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_SunPro_MS_RL(self):        
        assert osadl_matrix.get_compatibility("SunPro", "MS-RL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_SunPro_MirOS(self):        
        assert osadl_matrix.get_compatibility("SunPro", "MirOS") == osadl_matrix.OSADLCompatibility.YES
    

    def test_SunPro_NBPL_1_0(self):        
        assert osadl_matrix.get_compatibility("SunPro", "NBPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_SunPro_NTP(self):        
        assert osadl_matrix.get_compatibility("SunPro", "NTP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_SunPro_OSL_3_0(self):        
        assert osadl_matrix.get_compatibility("SunPro", "OSL-3.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_SunPro_OpenSSL(self):        
        assert osadl_matrix.get_compatibility("SunPro", "OpenSSL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_SunPro_PHP_3_01(self):        
        assert osadl_matrix.get_compatibility("SunPro", "PHP-3.01") == osadl_matrix.OSADLCompatibility.YES
    

    def test_SunPro_PostgreSQL(self):        
        assert osadl_matrix.get_compatibility("SunPro", "PostgreSQL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_SunPro_Python_2_0(self):        
        assert osadl_matrix.get_compatibility("SunPro", "Python-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_SunPro_Qhull(self):        
        assert osadl_matrix.get_compatibility("SunPro", "Qhull") == osadl_matrix.OSADLCompatibility.YES
    

    def test_SunPro_RSA_MD(self):        
        assert osadl_matrix.get_compatibility("SunPro", "RSA-MD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_SunPro_Sleepycat(self):        
        assert osadl_matrix.get_compatibility("SunPro", "Sleepycat") == osadl_matrix.OSADLCompatibility.NO
    

    def test_SunPro_SunPro(self):        
        assert osadl_matrix.get_compatibility("SunPro", "SunPro") == osadl_matrix.OSADLCompatibility.YES
    

    def test_SunPro_UPL_1_0(self):        
        assert osadl_matrix.get_compatibility("SunPro", "UPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_SunPro_Unicode_DFS_2015(self):        
        assert osadl_matrix.get_compatibility("SunPro", "Unicode-DFS-2015") == osadl_matrix.OSADLCompatibility.YES
    

    def test_SunPro_Unicode_DFS_2016(self):        
        assert osadl_matrix.get_compatibility("SunPro", "Unicode-DFS-2016") == osadl_matrix.OSADLCompatibility.YES
    

    def test_SunPro_Unlicense(self):        
        assert osadl_matrix.get_compatibility("SunPro", "Unlicense") == osadl_matrix.OSADLCompatibility.YES
    

    def test_SunPro_W3C(self):        
        assert osadl_matrix.get_compatibility("SunPro", "W3C") == osadl_matrix.OSADLCompatibility.YES
    

    def test_SunPro_W3C_19980720(self):        
        assert osadl_matrix.get_compatibility("SunPro", "W3C-19980720") == osadl_matrix.OSADLCompatibility.YES
    

    def test_SunPro_W3C_20150513(self):        
        assert osadl_matrix.get_compatibility("SunPro", "W3C-20150513") == osadl_matrix.OSADLCompatibility.YES
    

    def test_SunPro_WTFPL(self):        
        assert osadl_matrix.get_compatibility("SunPro", "WTFPL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_SunPro_X11(self):        
        assert osadl_matrix.get_compatibility("SunPro", "X11") == osadl_matrix.OSADLCompatibility.YES
    

    def test_SunPro_XFree86_1_1(self):        
        assert osadl_matrix.get_compatibility("SunPro", "XFree86-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_SunPro_ZPL_2_0(self):        
        assert osadl_matrix.get_compatibility("SunPro", "ZPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_SunPro_Zlib(self):        
        assert osadl_matrix.get_compatibility("SunPro", "Zlib") == osadl_matrix.OSADLCompatibility.YES
    

    def test_SunPro_bzip2_1_0_5(self):        
        assert osadl_matrix.get_compatibility("SunPro", "bzip2-1.0.5") == osadl_matrix.OSADLCompatibility.YES
    

    def test_SunPro_bzip2_1_0_6(self):        
        assert osadl_matrix.get_compatibility("SunPro", "bzip2-1.0.6") == osadl_matrix.OSADLCompatibility.YES
    

    def test_SunPro_curl(self):        
        assert osadl_matrix.get_compatibility("SunPro", "curl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_SunPro_libtiff(self):        
        assert osadl_matrix.get_compatibility("SunPro", "libtiff") == osadl_matrix.OSADLCompatibility.YES
    

    def test_SunPro_zlib_acknowledgement(self):        
        assert osadl_matrix.get_compatibility("SunPro", "zlib-acknowledgement") == osadl_matrix.OSADLCompatibility.YES
    

    def test_UPL_1_0_0BSD(self):        
        assert osadl_matrix.get_compatibility("UPL-1.0", "0BSD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_UPL_1_0_AFL_2_0(self):        
        assert osadl_matrix.get_compatibility("UPL-1.0", "AFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_UPL_1_0_AFL_2_1(self):        
        assert osadl_matrix.get_compatibility("UPL-1.0", "AFL-2.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_UPL_1_0_AFL_3_0(self):        
        assert osadl_matrix.get_compatibility("UPL-1.0", "AFL-3.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_UPL_1_0_AGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("UPL-1.0", "AGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_UPL_1_0_AGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("UPL-1.0", "AGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_UPL_1_0_Apache_1_0(self):        
        assert osadl_matrix.get_compatibility("UPL-1.0", "Apache-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_UPL_1_0_Apache_1_1(self):        
        assert osadl_matrix.get_compatibility("UPL-1.0", "Apache-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_UPL_1_0_Apache_2_0(self):        
        assert osadl_matrix.get_compatibility("UPL-1.0", "Apache-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_UPL_1_0_Artistic_1_0(self):        
        assert osadl_matrix.get_compatibility("UPL-1.0", "Artistic-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_UPL_1_0_Artistic_1_0_Perl(self):        
        assert osadl_matrix.get_compatibility("UPL-1.0", "Artistic-1.0-Perl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_UPL_1_0_Artistic_2_0(self):        
        assert osadl_matrix.get_compatibility("UPL-1.0", "Artistic-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_UPL_1_0_BSD_1_Clause(self):        
        assert osadl_matrix.get_compatibility("UPL-1.0", "BSD-1-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_UPL_1_0_BSD_2_Clause(self):        
        assert osadl_matrix.get_compatibility("UPL-1.0", "BSD-2-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_UPL_1_0_BSD_2_Clause_Patent(self):        
        assert osadl_matrix.get_compatibility("UPL-1.0", "BSD-2-Clause-Patent") == osadl_matrix.OSADLCompatibility.YES
    

    def test_UPL_1_0_BSD_3_Clause(self):        
        assert osadl_matrix.get_compatibility("UPL-1.0", "BSD-3-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_UPL_1_0_BSD_4_Clause(self):        
        assert osadl_matrix.get_compatibility("UPL-1.0", "BSD-4-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_UPL_1_0_BSD_4_Clause_UC(self):        
        assert osadl_matrix.get_compatibility("UPL-1.0", "BSD-4-Clause-UC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_UPL_1_0_BSD_Source_Code(self):        
        assert osadl_matrix.get_compatibility("UPL-1.0", "BSD-Source-Code") == osadl_matrix.OSADLCompatibility.YES
    

    def test_UPL_1_0_BSL_1_0(self):        
        assert osadl_matrix.get_compatibility("UPL-1.0", "BSL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_UPL_1_0_CC0_1_0(self):        
        assert osadl_matrix.get_compatibility("UPL-1.0", "CC0-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_UPL_1_0_CDDL_1_0(self):        
        assert osadl_matrix.get_compatibility("UPL-1.0", "CDDL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_UPL_1_0_CDDL_1_1(self):        
        assert osadl_matrix.get_compatibility("UPL-1.0", "CDDL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_UPL_1_0_CPL_1_0(self):        
        assert osadl_matrix.get_compatibility("UPL-1.0", "CPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_UPL_1_0_EFL_2_0(self):        
        assert osadl_matrix.get_compatibility("UPL-1.0", "EFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_UPL_1_0_EPL_1_0(self):        
        assert osadl_matrix.get_compatibility("UPL-1.0", "EPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_UPL_1_0_EPL_2_0(self):        
        assert osadl_matrix.get_compatibility("UPL-1.0", "EPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_UPL_1_0_EUPL_1_1(self):        
        assert osadl_matrix.get_compatibility("UPL-1.0", "EUPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_UPL_1_0_EUPL_1_2(self):        
        assert osadl_matrix.get_compatibility("UPL-1.0", "EUPL-1.2") == osadl_matrix.OSADLCompatibility.NO
    

    def test_UPL_1_0_FSFAP(self):        
        assert osadl_matrix.get_compatibility("UPL-1.0", "FSFAP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_UPL_1_0_FSFULLR(self):        
        assert osadl_matrix.get_compatibility("UPL-1.0", "FSFULLR") == osadl_matrix.OSADLCompatibility.YES
    

    def test_UPL_1_0_FTL(self):        
        assert osadl_matrix.get_compatibility("UPL-1.0", "FTL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_UPL_1_0_GPL_1_0_only(self):        
        assert osadl_matrix.get_compatibility("UPL-1.0", "GPL-1.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_UPL_1_0_GPL_1_0_or_later(self):        
        assert osadl_matrix.get_compatibility("UPL-1.0", "GPL-1.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_UPL_1_0_GPL_2_0_only(self):        
        assert osadl_matrix.get_compatibility("UPL-1.0", "GPL-2.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_UPL_1_0_GPL_2_0_only_WITH_Classpath_exception_2_0(self):        
        assert osadl_matrix.get_compatibility("UPL-1.0", "GPL-2.0-only WITH Classpath-exception-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_UPL_1_0_GPL_2_0_or_later(self):        
        assert osadl_matrix.get_compatibility("UPL-1.0", "GPL-2.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_UPL_1_0_GPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("UPL-1.0", "GPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_UPL_1_0_GPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("UPL-1.0", "GPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_UPL_1_0_HPND(self):        
        assert osadl_matrix.get_compatibility("UPL-1.0", "HPND") == osadl_matrix.OSADLCompatibility.YES
    

    def test_UPL_1_0_IBM_pibs(self):        
        assert osadl_matrix.get_compatibility("UPL-1.0", "IBM-pibs") == osadl_matrix.OSADLCompatibility.YES
    

    def test_UPL_1_0_ICU(self):        
        assert osadl_matrix.get_compatibility("UPL-1.0", "ICU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_UPL_1_0_IJG(self):        
        assert osadl_matrix.get_compatibility("UPL-1.0", "IJG") == osadl_matrix.OSADLCompatibility.YES
    

    def test_UPL_1_0_IPL_1_0(self):        
        assert osadl_matrix.get_compatibility("UPL-1.0", "IPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_UPL_1_0_ISC(self):        
        assert osadl_matrix.get_compatibility("UPL-1.0", "ISC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_UPL_1_0_Info_ZIP(self):        
        assert osadl_matrix.get_compatibility("UPL-1.0", "Info-ZIP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_UPL_1_0_LGPL_2_1_only(self):        
        assert osadl_matrix.get_compatibility("UPL-1.0", "LGPL-2.1-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_UPL_1_0_LGPL_2_1_or_later(self):        
        assert osadl_matrix.get_compatibility("UPL-1.0", "LGPL-2.1-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_UPL_1_0_LGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("UPL-1.0", "LGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_UPL_1_0_LGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("UPL-1.0", "LGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_UPL_1_0_Libpng(self):        
        assert osadl_matrix.get_compatibility("UPL-1.0", "Libpng") == osadl_matrix.OSADLCompatibility.YES
    

    def test_UPL_1_0_MIT(self):        
        assert osadl_matrix.get_compatibility("UPL-1.0", "MIT") == osadl_matrix.OSADLCompatibility.YES
    

    def test_UPL_1_0_MIT_CMU(self):        
        assert osadl_matrix.get_compatibility("UPL-1.0", "MIT-CMU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_UPL_1_0_MPL_1_1(self):        
        assert osadl_matrix.get_compatibility("UPL-1.0", "MPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_UPL_1_0_MPL_2_0(self):        
        assert osadl_matrix.get_compatibility("UPL-1.0", "MPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_UPL_1_0_MPL_2_0_no_copyleft_exception(self):        
        assert osadl_matrix.get_compatibility("UPL-1.0", "MPL-2.0-no-copyleft-exception") == osadl_matrix.OSADLCompatibility.NO
    

    def test_UPL_1_0_MS_PL(self):        
        assert osadl_matrix.get_compatibility("UPL-1.0", "MS-PL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_UPL_1_0_MS_RL(self):        
        assert osadl_matrix.get_compatibility("UPL-1.0", "MS-RL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_UPL_1_0_MirOS(self):        
        assert osadl_matrix.get_compatibility("UPL-1.0", "MirOS") == osadl_matrix.OSADLCompatibility.YES
    

    def test_UPL_1_0_NBPL_1_0(self):        
        assert osadl_matrix.get_compatibility("UPL-1.0", "NBPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_UPL_1_0_NTP(self):        
        assert osadl_matrix.get_compatibility("UPL-1.0", "NTP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_UPL_1_0_OSL_3_0(self):        
        assert osadl_matrix.get_compatibility("UPL-1.0", "OSL-3.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_UPL_1_0_OpenSSL(self):        
        assert osadl_matrix.get_compatibility("UPL-1.0", "OpenSSL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_UPL_1_0_PHP_3_01(self):        
        assert osadl_matrix.get_compatibility("UPL-1.0", "PHP-3.01") == osadl_matrix.OSADLCompatibility.YES
    

    def test_UPL_1_0_PostgreSQL(self):        
        assert osadl_matrix.get_compatibility("UPL-1.0", "PostgreSQL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_UPL_1_0_Python_2_0(self):        
        assert osadl_matrix.get_compatibility("UPL-1.0", "Python-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_UPL_1_0_Qhull(self):        
        assert osadl_matrix.get_compatibility("UPL-1.0", "Qhull") == osadl_matrix.OSADLCompatibility.YES
    

    def test_UPL_1_0_RSA_MD(self):        
        assert osadl_matrix.get_compatibility("UPL-1.0", "RSA-MD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_UPL_1_0_Sleepycat(self):        
        assert osadl_matrix.get_compatibility("UPL-1.0", "Sleepycat") == osadl_matrix.OSADLCompatibility.NO
    

    def test_UPL_1_0_SunPro(self):        
        assert osadl_matrix.get_compatibility("UPL-1.0", "SunPro") == osadl_matrix.OSADLCompatibility.YES
    

    def test_UPL_1_0_UPL_1_0(self):        
        assert osadl_matrix.get_compatibility("UPL-1.0", "UPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_UPL_1_0_Unicode_DFS_2015(self):        
        assert osadl_matrix.get_compatibility("UPL-1.0", "Unicode-DFS-2015") == osadl_matrix.OSADLCompatibility.YES
    

    def test_UPL_1_0_Unicode_DFS_2016(self):        
        assert osadl_matrix.get_compatibility("UPL-1.0", "Unicode-DFS-2016") == osadl_matrix.OSADLCompatibility.YES
    

    def test_UPL_1_0_Unlicense(self):        
        assert osadl_matrix.get_compatibility("UPL-1.0", "Unlicense") == osadl_matrix.OSADLCompatibility.YES
    

    def test_UPL_1_0_W3C(self):        
        assert osadl_matrix.get_compatibility("UPL-1.0", "W3C") == osadl_matrix.OSADLCompatibility.YES
    

    def test_UPL_1_0_W3C_19980720(self):        
        assert osadl_matrix.get_compatibility("UPL-1.0", "W3C-19980720") == osadl_matrix.OSADLCompatibility.YES
    

    def test_UPL_1_0_W3C_20150513(self):        
        assert osadl_matrix.get_compatibility("UPL-1.0", "W3C-20150513") == osadl_matrix.OSADLCompatibility.YES
    

    def test_UPL_1_0_WTFPL(self):        
        assert osadl_matrix.get_compatibility("UPL-1.0", "WTFPL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_UPL_1_0_X11(self):        
        assert osadl_matrix.get_compatibility("UPL-1.0", "X11") == osadl_matrix.OSADLCompatibility.YES
    

    def test_UPL_1_0_XFree86_1_1(self):        
        assert osadl_matrix.get_compatibility("UPL-1.0", "XFree86-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_UPL_1_0_ZPL_2_0(self):        
        assert osadl_matrix.get_compatibility("UPL-1.0", "ZPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_UPL_1_0_Zlib(self):        
        assert osadl_matrix.get_compatibility("UPL-1.0", "Zlib") == osadl_matrix.OSADLCompatibility.YES
    

    def test_UPL_1_0_bzip2_1_0_5(self):        
        assert osadl_matrix.get_compatibility("UPL-1.0", "bzip2-1.0.5") == osadl_matrix.OSADLCompatibility.YES
    

    def test_UPL_1_0_bzip2_1_0_6(self):        
        assert osadl_matrix.get_compatibility("UPL-1.0", "bzip2-1.0.6") == osadl_matrix.OSADLCompatibility.YES
    

    def test_UPL_1_0_curl(self):        
        assert osadl_matrix.get_compatibility("UPL-1.0", "curl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_UPL_1_0_libtiff(self):        
        assert osadl_matrix.get_compatibility("UPL-1.0", "libtiff") == osadl_matrix.OSADLCompatibility.YES
    

    def test_UPL_1_0_zlib_acknowledgement(self):        
        assert osadl_matrix.get_compatibility("UPL-1.0", "zlib-acknowledgement") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2015_0BSD(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2015", "0BSD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2015_AFL_2_0(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2015", "AFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2015_AFL_2_1(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2015", "AFL-2.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2015_AFL_3_0(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2015", "AFL-3.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2015_AGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2015", "AGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Unicode_DFS_2015_AGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2015", "AGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Unicode_DFS_2015_Apache_1_0(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2015", "Apache-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2015_Apache_1_1(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2015", "Apache-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2015_Apache_2_0(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2015", "Apache-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2015_Artistic_1_0(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2015", "Artistic-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2015_Artistic_1_0_Perl(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2015", "Artistic-1.0-Perl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2015_Artistic_2_0(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2015", "Artistic-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2015_BSD_1_Clause(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2015", "BSD-1-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2015_BSD_2_Clause(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2015", "BSD-2-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2015_BSD_2_Clause_Patent(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2015", "BSD-2-Clause-Patent") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2015_BSD_3_Clause(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2015", "BSD-3-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2015_BSD_4_Clause(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2015", "BSD-4-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2015_BSD_4_Clause_UC(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2015", "BSD-4-Clause-UC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2015_BSD_Source_Code(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2015", "BSD-Source-Code") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2015_BSL_1_0(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2015", "BSL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2015_CC0_1_0(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2015", "CC0-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2015_CDDL_1_0(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2015", "CDDL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Unicode_DFS_2015_CDDL_1_1(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2015", "CDDL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Unicode_DFS_2015_CPL_1_0(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2015", "CPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Unicode_DFS_2015_EFL_2_0(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2015", "EFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2015_EPL_1_0(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2015", "EPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Unicode_DFS_2015_EPL_2_0(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2015", "EPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Unicode_DFS_2015_EUPL_1_1(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2015", "EUPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Unicode_DFS_2015_EUPL_1_2(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2015", "EUPL-1.2") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Unicode_DFS_2015_FSFAP(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2015", "FSFAP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2015_FSFULLR(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2015", "FSFULLR") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2015_FTL(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2015", "FTL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2015_GPL_1_0_only(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2015", "GPL-1.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Unicode_DFS_2015_GPL_1_0_or_later(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2015", "GPL-1.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Unicode_DFS_2015_GPL_2_0_only(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2015", "GPL-2.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Unicode_DFS_2015_GPL_2_0_only_WITH_Classpath_exception_2_0(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2015", "GPL-2.0-only WITH Classpath-exception-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Unicode_DFS_2015_GPL_2_0_or_later(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2015", "GPL-2.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Unicode_DFS_2015_GPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2015", "GPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Unicode_DFS_2015_GPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2015", "GPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Unicode_DFS_2015_HPND(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2015", "HPND") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2015_IBM_pibs(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2015", "IBM-pibs") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2015_ICU(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2015", "ICU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2015_IJG(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2015", "IJG") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2015_IPL_1_0(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2015", "IPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Unicode_DFS_2015_ISC(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2015", "ISC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2015_Info_ZIP(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2015", "Info-ZIP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2015_LGPL_2_1_only(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2015", "LGPL-2.1-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Unicode_DFS_2015_LGPL_2_1_or_later(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2015", "LGPL-2.1-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Unicode_DFS_2015_LGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2015", "LGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Unicode_DFS_2015_LGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2015", "LGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Unicode_DFS_2015_Libpng(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2015", "Libpng") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2015_MIT(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2015", "MIT") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2015_MIT_CMU(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2015", "MIT-CMU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2015_MPL_1_1(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2015", "MPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Unicode_DFS_2015_MPL_2_0(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2015", "MPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Unicode_DFS_2015_MPL_2_0_no_copyleft_exception(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2015", "MPL-2.0-no-copyleft-exception") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Unicode_DFS_2015_MS_PL(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2015", "MS-PL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_Unicode_DFS_2015_MS_RL(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2015", "MS-RL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Unicode_DFS_2015_MirOS(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2015", "MirOS") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2015_NBPL_1_0(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2015", "NBPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2015_NTP(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2015", "NTP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2015_OSL_3_0(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2015", "OSL-3.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Unicode_DFS_2015_OpenSSL(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2015", "OpenSSL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_Unicode_DFS_2015_PHP_3_01(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2015", "PHP-3.01") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2015_PostgreSQL(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2015", "PostgreSQL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2015_Python_2_0(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2015", "Python-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2015_Qhull(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2015", "Qhull") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2015_RSA_MD(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2015", "RSA-MD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2015_Sleepycat(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2015", "Sleepycat") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Unicode_DFS_2015_SunPro(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2015", "SunPro") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2015_UPL_1_0(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2015", "UPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2015_Unicode_DFS_2015(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2015", "Unicode-DFS-2015") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2015_Unicode_DFS_2016(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2015", "Unicode-DFS-2016") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2015_Unlicense(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2015", "Unlicense") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2015_W3C(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2015", "W3C") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2015_W3C_19980720(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2015", "W3C-19980720") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2015_W3C_20150513(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2015", "W3C-20150513") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2015_WTFPL(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2015", "WTFPL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2015_X11(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2015", "X11") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2015_XFree86_1_1(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2015", "XFree86-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2015_ZPL_2_0(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2015", "ZPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2015_Zlib(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2015", "Zlib") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2015_bzip2_1_0_5(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2015", "bzip2-1.0.5") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2015_bzip2_1_0_6(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2015", "bzip2-1.0.6") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2015_curl(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2015", "curl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2015_libtiff(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2015", "libtiff") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2015_zlib_acknowledgement(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2015", "zlib-acknowledgement") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2016_0BSD(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2016", "0BSD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2016_AFL_2_0(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2016", "AFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2016_AFL_2_1(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2016", "AFL-2.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2016_AFL_3_0(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2016", "AFL-3.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2016_AGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2016", "AGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Unicode_DFS_2016_AGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2016", "AGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Unicode_DFS_2016_Apache_1_0(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2016", "Apache-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2016_Apache_1_1(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2016", "Apache-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2016_Apache_2_0(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2016", "Apache-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2016_Artistic_1_0(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2016", "Artistic-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2016_Artistic_1_0_Perl(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2016", "Artistic-1.0-Perl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2016_Artistic_2_0(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2016", "Artistic-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2016_BSD_1_Clause(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2016", "BSD-1-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2016_BSD_2_Clause(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2016", "BSD-2-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2016_BSD_2_Clause_Patent(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2016", "BSD-2-Clause-Patent") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2016_BSD_3_Clause(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2016", "BSD-3-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2016_BSD_4_Clause(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2016", "BSD-4-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2016_BSD_4_Clause_UC(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2016", "BSD-4-Clause-UC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2016_BSD_Source_Code(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2016", "BSD-Source-Code") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2016_BSL_1_0(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2016", "BSL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2016_CC0_1_0(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2016", "CC0-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2016_CDDL_1_0(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2016", "CDDL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Unicode_DFS_2016_CDDL_1_1(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2016", "CDDL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Unicode_DFS_2016_CPL_1_0(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2016", "CPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Unicode_DFS_2016_EFL_2_0(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2016", "EFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2016_EPL_1_0(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2016", "EPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Unicode_DFS_2016_EPL_2_0(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2016", "EPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Unicode_DFS_2016_EUPL_1_1(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2016", "EUPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Unicode_DFS_2016_EUPL_1_2(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2016", "EUPL-1.2") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Unicode_DFS_2016_FSFAP(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2016", "FSFAP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2016_FSFULLR(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2016", "FSFULLR") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2016_FTL(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2016", "FTL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2016_GPL_1_0_only(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2016", "GPL-1.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Unicode_DFS_2016_GPL_1_0_or_later(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2016", "GPL-1.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Unicode_DFS_2016_GPL_2_0_only(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2016", "GPL-2.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Unicode_DFS_2016_GPL_2_0_only_WITH_Classpath_exception_2_0(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2016", "GPL-2.0-only WITH Classpath-exception-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Unicode_DFS_2016_GPL_2_0_or_later(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2016", "GPL-2.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Unicode_DFS_2016_GPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2016", "GPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Unicode_DFS_2016_GPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2016", "GPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Unicode_DFS_2016_HPND(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2016", "HPND") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2016_IBM_pibs(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2016", "IBM-pibs") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2016_ICU(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2016", "ICU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2016_IJG(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2016", "IJG") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2016_IPL_1_0(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2016", "IPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Unicode_DFS_2016_ISC(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2016", "ISC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2016_Info_ZIP(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2016", "Info-ZIP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2016_LGPL_2_1_only(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2016", "LGPL-2.1-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Unicode_DFS_2016_LGPL_2_1_or_later(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2016", "LGPL-2.1-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Unicode_DFS_2016_LGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2016", "LGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Unicode_DFS_2016_LGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2016", "LGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Unicode_DFS_2016_Libpng(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2016", "Libpng") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2016_MIT(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2016", "MIT") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2016_MIT_CMU(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2016", "MIT-CMU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2016_MPL_1_1(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2016", "MPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Unicode_DFS_2016_MPL_2_0(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2016", "MPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Unicode_DFS_2016_MPL_2_0_no_copyleft_exception(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2016", "MPL-2.0-no-copyleft-exception") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Unicode_DFS_2016_MS_PL(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2016", "MS-PL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_Unicode_DFS_2016_MS_RL(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2016", "MS-RL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Unicode_DFS_2016_MirOS(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2016", "MirOS") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2016_NBPL_1_0(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2016", "NBPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2016_NTP(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2016", "NTP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2016_OSL_3_0(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2016", "OSL-3.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Unicode_DFS_2016_OpenSSL(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2016", "OpenSSL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_Unicode_DFS_2016_PHP_3_01(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2016", "PHP-3.01") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2016_PostgreSQL(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2016", "PostgreSQL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2016_Python_2_0(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2016", "Python-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2016_Qhull(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2016", "Qhull") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2016_RSA_MD(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2016", "RSA-MD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2016_Sleepycat(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2016", "Sleepycat") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Unicode_DFS_2016_SunPro(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2016", "SunPro") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2016_UPL_1_0(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2016", "UPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2016_Unicode_DFS_2015(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2016", "Unicode-DFS-2015") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2016_Unicode_DFS_2016(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2016", "Unicode-DFS-2016") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2016_Unlicense(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2016", "Unlicense") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2016_W3C(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2016", "W3C") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2016_W3C_19980720(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2016", "W3C-19980720") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2016_W3C_20150513(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2016", "W3C-20150513") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2016_WTFPL(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2016", "WTFPL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2016_X11(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2016", "X11") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2016_XFree86_1_1(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2016", "XFree86-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2016_ZPL_2_0(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2016", "ZPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2016_Zlib(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2016", "Zlib") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2016_bzip2_1_0_5(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2016", "bzip2-1.0.5") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2016_bzip2_1_0_6(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2016", "bzip2-1.0.6") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2016_curl(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2016", "curl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2016_libtiff(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2016", "libtiff") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unicode_DFS_2016_zlib_acknowledgement(self):        
        assert osadl_matrix.get_compatibility("Unicode-DFS-2016", "zlib-acknowledgement") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unlicense_0BSD(self):        
        assert osadl_matrix.get_compatibility("Unlicense", "0BSD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unlicense_AFL_2_0(self):        
        assert osadl_matrix.get_compatibility("Unlicense", "AFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unlicense_AFL_2_1(self):        
        assert osadl_matrix.get_compatibility("Unlicense", "AFL-2.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unlicense_AFL_3_0(self):        
        assert osadl_matrix.get_compatibility("Unlicense", "AFL-3.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unlicense_AGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("Unlicense", "AGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Unlicense_AGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("Unlicense", "AGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Unlicense_Apache_1_0(self):        
        assert osadl_matrix.get_compatibility("Unlicense", "Apache-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unlicense_Apache_1_1(self):        
        assert osadl_matrix.get_compatibility("Unlicense", "Apache-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unlicense_Apache_2_0(self):        
        assert osadl_matrix.get_compatibility("Unlicense", "Apache-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unlicense_Artistic_1_0(self):        
        assert osadl_matrix.get_compatibility("Unlicense", "Artistic-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unlicense_Artistic_1_0_Perl(self):        
        assert osadl_matrix.get_compatibility("Unlicense", "Artistic-1.0-Perl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unlicense_Artistic_2_0(self):        
        assert osadl_matrix.get_compatibility("Unlicense", "Artistic-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unlicense_BSD_1_Clause(self):        
        assert osadl_matrix.get_compatibility("Unlicense", "BSD-1-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unlicense_BSD_2_Clause(self):        
        assert osadl_matrix.get_compatibility("Unlicense", "BSD-2-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unlicense_BSD_2_Clause_Patent(self):        
        assert osadl_matrix.get_compatibility("Unlicense", "BSD-2-Clause-Patent") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unlicense_BSD_3_Clause(self):        
        assert osadl_matrix.get_compatibility("Unlicense", "BSD-3-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unlicense_BSD_4_Clause(self):        
        assert osadl_matrix.get_compatibility("Unlicense", "BSD-4-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unlicense_BSD_4_Clause_UC(self):        
        assert osadl_matrix.get_compatibility("Unlicense", "BSD-4-Clause-UC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unlicense_BSD_Source_Code(self):        
        assert osadl_matrix.get_compatibility("Unlicense", "BSD-Source-Code") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unlicense_BSL_1_0(self):        
        assert osadl_matrix.get_compatibility("Unlicense", "BSL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unlicense_CC0_1_0(self):        
        assert osadl_matrix.get_compatibility("Unlicense", "CC0-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unlicense_CDDL_1_0(self):        
        assert osadl_matrix.get_compatibility("Unlicense", "CDDL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Unlicense_CDDL_1_1(self):        
        assert osadl_matrix.get_compatibility("Unlicense", "CDDL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Unlicense_CPL_1_0(self):        
        assert osadl_matrix.get_compatibility("Unlicense", "CPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Unlicense_EFL_2_0(self):        
        assert osadl_matrix.get_compatibility("Unlicense", "EFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unlicense_EPL_1_0(self):        
        assert osadl_matrix.get_compatibility("Unlicense", "EPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Unlicense_EPL_2_0(self):        
        assert osadl_matrix.get_compatibility("Unlicense", "EPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Unlicense_EUPL_1_1(self):        
        assert osadl_matrix.get_compatibility("Unlicense", "EUPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Unlicense_EUPL_1_2(self):        
        assert osadl_matrix.get_compatibility("Unlicense", "EUPL-1.2") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Unlicense_FSFAP(self):        
        assert osadl_matrix.get_compatibility("Unlicense", "FSFAP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unlicense_FSFULLR(self):        
        assert osadl_matrix.get_compatibility("Unlicense", "FSFULLR") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unlicense_FTL(self):        
        assert osadl_matrix.get_compatibility("Unlicense", "FTL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unlicense_GPL_1_0_only(self):        
        assert osadl_matrix.get_compatibility("Unlicense", "GPL-1.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Unlicense_GPL_1_0_or_later(self):        
        assert osadl_matrix.get_compatibility("Unlicense", "GPL-1.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Unlicense_GPL_2_0_only(self):        
        assert osadl_matrix.get_compatibility("Unlicense", "GPL-2.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Unlicense_GPL_2_0_only_WITH_Classpath_exception_2_0(self):        
        assert osadl_matrix.get_compatibility("Unlicense", "GPL-2.0-only WITH Classpath-exception-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Unlicense_GPL_2_0_or_later(self):        
        assert osadl_matrix.get_compatibility("Unlicense", "GPL-2.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Unlicense_GPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("Unlicense", "GPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Unlicense_GPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("Unlicense", "GPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Unlicense_HPND(self):        
        assert osadl_matrix.get_compatibility("Unlicense", "HPND") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unlicense_IBM_pibs(self):        
        assert osadl_matrix.get_compatibility("Unlicense", "IBM-pibs") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unlicense_ICU(self):        
        assert osadl_matrix.get_compatibility("Unlicense", "ICU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unlicense_IJG(self):        
        assert osadl_matrix.get_compatibility("Unlicense", "IJG") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unlicense_IPL_1_0(self):        
        assert osadl_matrix.get_compatibility("Unlicense", "IPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Unlicense_ISC(self):        
        assert osadl_matrix.get_compatibility("Unlicense", "ISC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unlicense_Info_ZIP(self):        
        assert osadl_matrix.get_compatibility("Unlicense", "Info-ZIP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unlicense_LGPL_2_1_only(self):        
        assert osadl_matrix.get_compatibility("Unlicense", "LGPL-2.1-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Unlicense_LGPL_2_1_or_later(self):        
        assert osadl_matrix.get_compatibility("Unlicense", "LGPL-2.1-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Unlicense_LGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("Unlicense", "LGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Unlicense_LGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("Unlicense", "LGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Unlicense_Libpng(self):        
        assert osadl_matrix.get_compatibility("Unlicense", "Libpng") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unlicense_MIT(self):        
        assert osadl_matrix.get_compatibility("Unlicense", "MIT") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unlicense_MIT_CMU(self):        
        assert osadl_matrix.get_compatibility("Unlicense", "MIT-CMU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unlicense_MPL_1_1(self):        
        assert osadl_matrix.get_compatibility("Unlicense", "MPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Unlicense_MPL_2_0(self):        
        assert osadl_matrix.get_compatibility("Unlicense", "MPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Unlicense_MPL_2_0_no_copyleft_exception(self):        
        assert osadl_matrix.get_compatibility("Unlicense", "MPL-2.0-no-copyleft-exception") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Unlicense_MS_PL(self):        
        assert osadl_matrix.get_compatibility("Unlicense", "MS-PL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_Unlicense_MS_RL(self):        
        assert osadl_matrix.get_compatibility("Unlicense", "MS-RL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Unlicense_MirOS(self):        
        assert osadl_matrix.get_compatibility("Unlicense", "MirOS") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unlicense_NBPL_1_0(self):        
        assert osadl_matrix.get_compatibility("Unlicense", "NBPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unlicense_NTP(self):        
        assert osadl_matrix.get_compatibility("Unlicense", "NTP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unlicense_OSL_3_0(self):        
        assert osadl_matrix.get_compatibility("Unlicense", "OSL-3.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Unlicense_OpenSSL(self):        
        assert osadl_matrix.get_compatibility("Unlicense", "OpenSSL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_Unlicense_PHP_3_01(self):        
        assert osadl_matrix.get_compatibility("Unlicense", "PHP-3.01") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unlicense_PostgreSQL(self):        
        assert osadl_matrix.get_compatibility("Unlicense", "PostgreSQL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unlicense_Python_2_0(self):        
        assert osadl_matrix.get_compatibility("Unlicense", "Python-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unlicense_Qhull(self):        
        assert osadl_matrix.get_compatibility("Unlicense", "Qhull") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unlicense_RSA_MD(self):        
        assert osadl_matrix.get_compatibility("Unlicense", "RSA-MD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unlicense_Sleepycat(self):        
        assert osadl_matrix.get_compatibility("Unlicense", "Sleepycat") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Unlicense_SunPro(self):        
        assert osadl_matrix.get_compatibility("Unlicense", "SunPro") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unlicense_UPL_1_0(self):        
        assert osadl_matrix.get_compatibility("Unlicense", "UPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unlicense_Unicode_DFS_2015(self):        
        assert osadl_matrix.get_compatibility("Unlicense", "Unicode-DFS-2015") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unlicense_Unicode_DFS_2016(self):        
        assert osadl_matrix.get_compatibility("Unlicense", "Unicode-DFS-2016") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unlicense_Unlicense(self):        
        assert osadl_matrix.get_compatibility("Unlicense", "Unlicense") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unlicense_W3C(self):        
        assert osadl_matrix.get_compatibility("Unlicense", "W3C") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unlicense_W3C_19980720(self):        
        assert osadl_matrix.get_compatibility("Unlicense", "W3C-19980720") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unlicense_W3C_20150513(self):        
        assert osadl_matrix.get_compatibility("Unlicense", "W3C-20150513") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unlicense_WTFPL(self):        
        assert osadl_matrix.get_compatibility("Unlicense", "WTFPL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unlicense_X11(self):        
        assert osadl_matrix.get_compatibility("Unlicense", "X11") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unlicense_XFree86_1_1(self):        
        assert osadl_matrix.get_compatibility("Unlicense", "XFree86-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unlicense_ZPL_2_0(self):        
        assert osadl_matrix.get_compatibility("Unlicense", "ZPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unlicense_Zlib(self):        
        assert osadl_matrix.get_compatibility("Unlicense", "Zlib") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unlicense_bzip2_1_0_5(self):        
        assert osadl_matrix.get_compatibility("Unlicense", "bzip2-1.0.5") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unlicense_bzip2_1_0_6(self):        
        assert osadl_matrix.get_compatibility("Unlicense", "bzip2-1.0.6") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unlicense_curl(self):        
        assert osadl_matrix.get_compatibility("Unlicense", "curl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unlicense_libtiff(self):        
        assert osadl_matrix.get_compatibility("Unlicense", "libtiff") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Unlicense_zlib_acknowledgement(self):        
        assert osadl_matrix.get_compatibility("Unlicense", "zlib-acknowledgement") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_0BSD(self):        
        assert osadl_matrix.get_compatibility("W3C", "0BSD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_AFL_2_0(self):        
        assert osadl_matrix.get_compatibility("W3C", "AFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_AFL_2_1(self):        
        assert osadl_matrix.get_compatibility("W3C", "AFL-2.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_AFL_3_0(self):        
        assert osadl_matrix.get_compatibility("W3C", "AFL-3.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_AGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("W3C", "AGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_W3C_AGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("W3C", "AGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_W3C_Apache_1_0(self):        
        assert osadl_matrix.get_compatibility("W3C", "Apache-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_Apache_1_1(self):        
        assert osadl_matrix.get_compatibility("W3C", "Apache-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_Apache_2_0(self):        
        assert osadl_matrix.get_compatibility("W3C", "Apache-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_Artistic_1_0(self):        
        assert osadl_matrix.get_compatibility("W3C", "Artistic-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_Artistic_1_0_Perl(self):        
        assert osadl_matrix.get_compatibility("W3C", "Artistic-1.0-Perl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_Artistic_2_0(self):        
        assert osadl_matrix.get_compatibility("W3C", "Artistic-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_BSD_1_Clause(self):        
        assert osadl_matrix.get_compatibility("W3C", "BSD-1-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_BSD_2_Clause(self):        
        assert osadl_matrix.get_compatibility("W3C", "BSD-2-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_BSD_2_Clause_Patent(self):        
        assert osadl_matrix.get_compatibility("W3C", "BSD-2-Clause-Patent") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_BSD_3_Clause(self):        
        assert osadl_matrix.get_compatibility("W3C", "BSD-3-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_BSD_4_Clause(self):        
        assert osadl_matrix.get_compatibility("W3C", "BSD-4-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_BSD_4_Clause_UC(self):        
        assert osadl_matrix.get_compatibility("W3C", "BSD-4-Clause-UC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_BSD_Source_Code(self):        
        assert osadl_matrix.get_compatibility("W3C", "BSD-Source-Code") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_BSL_1_0(self):        
        assert osadl_matrix.get_compatibility("W3C", "BSL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_CC0_1_0(self):        
        assert osadl_matrix.get_compatibility("W3C", "CC0-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_CDDL_1_0(self):        
        assert osadl_matrix.get_compatibility("W3C", "CDDL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_W3C_CDDL_1_1(self):        
        assert osadl_matrix.get_compatibility("W3C", "CDDL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_W3C_CPL_1_0(self):        
        assert osadl_matrix.get_compatibility("W3C", "CPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_W3C_EFL_2_0(self):        
        assert osadl_matrix.get_compatibility("W3C", "EFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_EPL_1_0(self):        
        assert osadl_matrix.get_compatibility("W3C", "EPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_W3C_EPL_2_0(self):        
        assert osadl_matrix.get_compatibility("W3C", "EPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_W3C_EUPL_1_1(self):        
        assert osadl_matrix.get_compatibility("W3C", "EUPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_W3C_EUPL_1_2(self):        
        assert osadl_matrix.get_compatibility("W3C", "EUPL-1.2") == osadl_matrix.OSADLCompatibility.NO
    

    def test_W3C_FSFAP(self):        
        assert osadl_matrix.get_compatibility("W3C", "FSFAP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_FSFULLR(self):        
        assert osadl_matrix.get_compatibility("W3C", "FSFULLR") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_FTL(self):        
        assert osadl_matrix.get_compatibility("W3C", "FTL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_GPL_1_0_only(self):        
        assert osadl_matrix.get_compatibility("W3C", "GPL-1.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_W3C_GPL_1_0_or_later(self):        
        assert osadl_matrix.get_compatibility("W3C", "GPL-1.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_W3C_GPL_2_0_only(self):        
        assert osadl_matrix.get_compatibility("W3C", "GPL-2.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_W3C_GPL_2_0_only_WITH_Classpath_exception_2_0(self):        
        assert osadl_matrix.get_compatibility("W3C", "GPL-2.0-only WITH Classpath-exception-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_W3C_GPL_2_0_or_later(self):        
        assert osadl_matrix.get_compatibility("W3C", "GPL-2.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_W3C_GPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("W3C", "GPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_W3C_GPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("W3C", "GPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_W3C_HPND(self):        
        assert osadl_matrix.get_compatibility("W3C", "HPND") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_IBM_pibs(self):        
        assert osadl_matrix.get_compatibility("W3C", "IBM-pibs") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_ICU(self):        
        assert osadl_matrix.get_compatibility("W3C", "ICU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_IJG(self):        
        assert osadl_matrix.get_compatibility("W3C", "IJG") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_IPL_1_0(self):        
        assert osadl_matrix.get_compatibility("W3C", "IPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_W3C_ISC(self):        
        assert osadl_matrix.get_compatibility("W3C", "ISC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_Info_ZIP(self):        
        assert osadl_matrix.get_compatibility("W3C", "Info-ZIP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_LGPL_2_1_only(self):        
        assert osadl_matrix.get_compatibility("W3C", "LGPL-2.1-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_W3C_LGPL_2_1_or_later(self):        
        assert osadl_matrix.get_compatibility("W3C", "LGPL-2.1-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_W3C_LGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("W3C", "LGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_W3C_LGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("W3C", "LGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_W3C_Libpng(self):        
        assert osadl_matrix.get_compatibility("W3C", "Libpng") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_MIT(self):        
        assert osadl_matrix.get_compatibility("W3C", "MIT") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_MIT_CMU(self):        
        assert osadl_matrix.get_compatibility("W3C", "MIT-CMU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_MPL_1_1(self):        
        assert osadl_matrix.get_compatibility("W3C", "MPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_W3C_MPL_2_0(self):        
        assert osadl_matrix.get_compatibility("W3C", "MPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_W3C_MPL_2_0_no_copyleft_exception(self):        
        assert osadl_matrix.get_compatibility("W3C", "MPL-2.0-no-copyleft-exception") == osadl_matrix.OSADLCompatibility.NO
    

    def test_W3C_MS_PL(self):        
        assert osadl_matrix.get_compatibility("W3C", "MS-PL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_W3C_MS_RL(self):        
        assert osadl_matrix.get_compatibility("W3C", "MS-RL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_W3C_MirOS(self):        
        assert osadl_matrix.get_compatibility("W3C", "MirOS") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_NBPL_1_0(self):        
        assert osadl_matrix.get_compatibility("W3C", "NBPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_NTP(self):        
        assert osadl_matrix.get_compatibility("W3C", "NTP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_OSL_3_0(self):        
        assert osadl_matrix.get_compatibility("W3C", "OSL-3.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_W3C_OpenSSL(self):        
        assert osadl_matrix.get_compatibility("W3C", "OpenSSL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_W3C_PHP_3_01(self):        
        assert osadl_matrix.get_compatibility("W3C", "PHP-3.01") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_PostgreSQL(self):        
        assert osadl_matrix.get_compatibility("W3C", "PostgreSQL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_Python_2_0(self):        
        assert osadl_matrix.get_compatibility("W3C", "Python-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_Qhull(self):        
        assert osadl_matrix.get_compatibility("W3C", "Qhull") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_RSA_MD(self):        
        assert osadl_matrix.get_compatibility("W3C", "RSA-MD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_Sleepycat(self):        
        assert osadl_matrix.get_compatibility("W3C", "Sleepycat") == osadl_matrix.OSADLCompatibility.NO
    

    def test_W3C_SunPro(self):        
        assert osadl_matrix.get_compatibility("W3C", "SunPro") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_UPL_1_0(self):        
        assert osadl_matrix.get_compatibility("W3C", "UPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_Unicode_DFS_2015(self):        
        assert osadl_matrix.get_compatibility("W3C", "Unicode-DFS-2015") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_Unicode_DFS_2016(self):        
        assert osadl_matrix.get_compatibility("W3C", "Unicode-DFS-2016") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_Unlicense(self):        
        assert osadl_matrix.get_compatibility("W3C", "Unlicense") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_W3C(self):        
        assert osadl_matrix.get_compatibility("W3C", "W3C") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_W3C_19980720(self):        
        assert osadl_matrix.get_compatibility("W3C", "W3C-19980720") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_W3C_20150513(self):        
        assert osadl_matrix.get_compatibility("W3C", "W3C-20150513") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_WTFPL(self):        
        assert osadl_matrix.get_compatibility("W3C", "WTFPL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_X11(self):        
        assert osadl_matrix.get_compatibility("W3C", "X11") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_XFree86_1_1(self):        
        assert osadl_matrix.get_compatibility("W3C", "XFree86-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_ZPL_2_0(self):        
        assert osadl_matrix.get_compatibility("W3C", "ZPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_Zlib(self):        
        assert osadl_matrix.get_compatibility("W3C", "Zlib") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_bzip2_1_0_5(self):        
        assert osadl_matrix.get_compatibility("W3C", "bzip2-1.0.5") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_bzip2_1_0_6(self):        
        assert osadl_matrix.get_compatibility("W3C", "bzip2-1.0.6") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_curl(self):        
        assert osadl_matrix.get_compatibility("W3C", "curl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_libtiff(self):        
        assert osadl_matrix.get_compatibility("W3C", "libtiff") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_zlib_acknowledgement(self):        
        assert osadl_matrix.get_compatibility("W3C", "zlib-acknowledgement") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_19980720_0BSD(self):        
        assert osadl_matrix.get_compatibility("W3C-19980720", "0BSD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_19980720_AFL_2_0(self):        
        assert osadl_matrix.get_compatibility("W3C-19980720", "AFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_19980720_AFL_2_1(self):        
        assert osadl_matrix.get_compatibility("W3C-19980720", "AFL-2.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_19980720_AFL_3_0(self):        
        assert osadl_matrix.get_compatibility("W3C-19980720", "AFL-3.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_19980720_AGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("W3C-19980720", "AGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_W3C_19980720_AGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("W3C-19980720", "AGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_W3C_19980720_Apache_1_0(self):        
        assert osadl_matrix.get_compatibility("W3C-19980720", "Apache-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_19980720_Apache_1_1(self):        
        assert osadl_matrix.get_compatibility("W3C-19980720", "Apache-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_19980720_Apache_2_0(self):        
        assert osadl_matrix.get_compatibility("W3C-19980720", "Apache-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_19980720_Artistic_1_0(self):        
        assert osadl_matrix.get_compatibility("W3C-19980720", "Artistic-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_19980720_Artistic_1_0_Perl(self):        
        assert osadl_matrix.get_compatibility("W3C-19980720", "Artistic-1.0-Perl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_19980720_Artistic_2_0(self):        
        assert osadl_matrix.get_compatibility("W3C-19980720", "Artistic-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_19980720_BSD_1_Clause(self):        
        assert osadl_matrix.get_compatibility("W3C-19980720", "BSD-1-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_19980720_BSD_2_Clause(self):        
        assert osadl_matrix.get_compatibility("W3C-19980720", "BSD-2-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_19980720_BSD_2_Clause_Patent(self):        
        assert osadl_matrix.get_compatibility("W3C-19980720", "BSD-2-Clause-Patent") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_19980720_BSD_3_Clause(self):        
        assert osadl_matrix.get_compatibility("W3C-19980720", "BSD-3-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_19980720_BSD_4_Clause(self):        
        assert osadl_matrix.get_compatibility("W3C-19980720", "BSD-4-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_19980720_BSD_4_Clause_UC(self):        
        assert osadl_matrix.get_compatibility("W3C-19980720", "BSD-4-Clause-UC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_19980720_BSD_Source_Code(self):        
        assert osadl_matrix.get_compatibility("W3C-19980720", "BSD-Source-Code") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_19980720_BSL_1_0(self):        
        assert osadl_matrix.get_compatibility("W3C-19980720", "BSL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_19980720_CC0_1_0(self):        
        assert osadl_matrix.get_compatibility("W3C-19980720", "CC0-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_19980720_CDDL_1_0(self):        
        assert osadl_matrix.get_compatibility("W3C-19980720", "CDDL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_W3C_19980720_CDDL_1_1(self):        
        assert osadl_matrix.get_compatibility("W3C-19980720", "CDDL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_W3C_19980720_CPL_1_0(self):        
        assert osadl_matrix.get_compatibility("W3C-19980720", "CPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_W3C_19980720_EFL_2_0(self):        
        assert osadl_matrix.get_compatibility("W3C-19980720", "EFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_19980720_EPL_1_0(self):        
        assert osadl_matrix.get_compatibility("W3C-19980720", "EPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_W3C_19980720_EPL_2_0(self):        
        assert osadl_matrix.get_compatibility("W3C-19980720", "EPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_W3C_19980720_EUPL_1_1(self):        
        assert osadl_matrix.get_compatibility("W3C-19980720", "EUPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_W3C_19980720_EUPL_1_2(self):        
        assert osadl_matrix.get_compatibility("W3C-19980720", "EUPL-1.2") == osadl_matrix.OSADLCompatibility.NO
    

    def test_W3C_19980720_FSFAP(self):        
        assert osadl_matrix.get_compatibility("W3C-19980720", "FSFAP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_19980720_FSFULLR(self):        
        assert osadl_matrix.get_compatibility("W3C-19980720", "FSFULLR") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_19980720_FTL(self):        
        assert osadl_matrix.get_compatibility("W3C-19980720", "FTL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_19980720_GPL_1_0_only(self):        
        assert osadl_matrix.get_compatibility("W3C-19980720", "GPL-1.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_W3C_19980720_GPL_1_0_or_later(self):        
        assert osadl_matrix.get_compatibility("W3C-19980720", "GPL-1.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_W3C_19980720_GPL_2_0_only(self):        
        assert osadl_matrix.get_compatibility("W3C-19980720", "GPL-2.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_W3C_19980720_GPL_2_0_only_WITH_Classpath_exception_2_0(self):        
        assert osadl_matrix.get_compatibility("W3C-19980720", "GPL-2.0-only WITH Classpath-exception-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_W3C_19980720_GPL_2_0_or_later(self):        
        assert osadl_matrix.get_compatibility("W3C-19980720", "GPL-2.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_W3C_19980720_GPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("W3C-19980720", "GPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_W3C_19980720_GPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("W3C-19980720", "GPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_W3C_19980720_HPND(self):        
        assert osadl_matrix.get_compatibility("W3C-19980720", "HPND") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_19980720_IBM_pibs(self):        
        assert osadl_matrix.get_compatibility("W3C-19980720", "IBM-pibs") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_19980720_ICU(self):        
        assert osadl_matrix.get_compatibility("W3C-19980720", "ICU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_19980720_IJG(self):        
        assert osadl_matrix.get_compatibility("W3C-19980720", "IJG") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_19980720_IPL_1_0(self):        
        assert osadl_matrix.get_compatibility("W3C-19980720", "IPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_W3C_19980720_ISC(self):        
        assert osadl_matrix.get_compatibility("W3C-19980720", "ISC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_19980720_Info_ZIP(self):        
        assert osadl_matrix.get_compatibility("W3C-19980720", "Info-ZIP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_19980720_LGPL_2_1_only(self):        
        assert osadl_matrix.get_compatibility("W3C-19980720", "LGPL-2.1-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_W3C_19980720_LGPL_2_1_or_later(self):        
        assert osadl_matrix.get_compatibility("W3C-19980720", "LGPL-2.1-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_W3C_19980720_LGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("W3C-19980720", "LGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_W3C_19980720_LGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("W3C-19980720", "LGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_W3C_19980720_Libpng(self):        
        assert osadl_matrix.get_compatibility("W3C-19980720", "Libpng") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_19980720_MIT(self):        
        assert osadl_matrix.get_compatibility("W3C-19980720", "MIT") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_19980720_MIT_CMU(self):        
        assert osadl_matrix.get_compatibility("W3C-19980720", "MIT-CMU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_19980720_MPL_1_1(self):        
        assert osadl_matrix.get_compatibility("W3C-19980720", "MPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_W3C_19980720_MPL_2_0(self):        
        assert osadl_matrix.get_compatibility("W3C-19980720", "MPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_W3C_19980720_MPL_2_0_no_copyleft_exception(self):        
        assert osadl_matrix.get_compatibility("W3C-19980720", "MPL-2.0-no-copyleft-exception") == osadl_matrix.OSADLCompatibility.NO
    

    def test_W3C_19980720_MS_PL(self):        
        assert osadl_matrix.get_compatibility("W3C-19980720", "MS-PL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_W3C_19980720_MS_RL(self):        
        assert osadl_matrix.get_compatibility("W3C-19980720", "MS-RL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_W3C_19980720_MirOS(self):        
        assert osadl_matrix.get_compatibility("W3C-19980720", "MirOS") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_19980720_NBPL_1_0(self):        
        assert osadl_matrix.get_compatibility("W3C-19980720", "NBPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_19980720_NTP(self):        
        assert osadl_matrix.get_compatibility("W3C-19980720", "NTP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_19980720_OSL_3_0(self):        
        assert osadl_matrix.get_compatibility("W3C-19980720", "OSL-3.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_W3C_19980720_OpenSSL(self):        
        assert osadl_matrix.get_compatibility("W3C-19980720", "OpenSSL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_W3C_19980720_PHP_3_01(self):        
        assert osadl_matrix.get_compatibility("W3C-19980720", "PHP-3.01") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_19980720_PostgreSQL(self):        
        assert osadl_matrix.get_compatibility("W3C-19980720", "PostgreSQL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_19980720_Python_2_0(self):        
        assert osadl_matrix.get_compatibility("W3C-19980720", "Python-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_19980720_Qhull(self):        
        assert osadl_matrix.get_compatibility("W3C-19980720", "Qhull") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_19980720_RSA_MD(self):        
        assert osadl_matrix.get_compatibility("W3C-19980720", "RSA-MD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_19980720_Sleepycat(self):        
        assert osadl_matrix.get_compatibility("W3C-19980720", "Sleepycat") == osadl_matrix.OSADLCompatibility.NO
    

    def test_W3C_19980720_SunPro(self):        
        assert osadl_matrix.get_compatibility("W3C-19980720", "SunPro") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_19980720_UPL_1_0(self):        
        assert osadl_matrix.get_compatibility("W3C-19980720", "UPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_19980720_Unicode_DFS_2015(self):        
        assert osadl_matrix.get_compatibility("W3C-19980720", "Unicode-DFS-2015") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_19980720_Unicode_DFS_2016(self):        
        assert osadl_matrix.get_compatibility("W3C-19980720", "Unicode-DFS-2016") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_19980720_Unlicense(self):        
        assert osadl_matrix.get_compatibility("W3C-19980720", "Unlicense") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_19980720_W3C(self):        
        assert osadl_matrix.get_compatibility("W3C-19980720", "W3C") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_19980720_W3C_19980720(self):        
        assert osadl_matrix.get_compatibility("W3C-19980720", "W3C-19980720") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_19980720_W3C_20150513(self):        
        assert osadl_matrix.get_compatibility("W3C-19980720", "W3C-20150513") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_19980720_WTFPL(self):        
        assert osadl_matrix.get_compatibility("W3C-19980720", "WTFPL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_19980720_X11(self):        
        assert osadl_matrix.get_compatibility("W3C-19980720", "X11") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_19980720_XFree86_1_1(self):        
        assert osadl_matrix.get_compatibility("W3C-19980720", "XFree86-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_19980720_ZPL_2_0(self):        
        assert osadl_matrix.get_compatibility("W3C-19980720", "ZPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_19980720_Zlib(self):        
        assert osadl_matrix.get_compatibility("W3C-19980720", "Zlib") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_19980720_bzip2_1_0_5(self):        
        assert osadl_matrix.get_compatibility("W3C-19980720", "bzip2-1.0.5") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_19980720_bzip2_1_0_6(self):        
        assert osadl_matrix.get_compatibility("W3C-19980720", "bzip2-1.0.6") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_19980720_curl(self):        
        assert osadl_matrix.get_compatibility("W3C-19980720", "curl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_19980720_libtiff(self):        
        assert osadl_matrix.get_compatibility("W3C-19980720", "libtiff") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_19980720_zlib_acknowledgement(self):        
        assert osadl_matrix.get_compatibility("W3C-19980720", "zlib-acknowledgement") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_20150513_0BSD(self):        
        assert osadl_matrix.get_compatibility("W3C-20150513", "0BSD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_20150513_AFL_2_0(self):        
        assert osadl_matrix.get_compatibility("W3C-20150513", "AFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_20150513_AFL_2_1(self):        
        assert osadl_matrix.get_compatibility("W3C-20150513", "AFL-2.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_20150513_AFL_3_0(self):        
        assert osadl_matrix.get_compatibility("W3C-20150513", "AFL-3.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_20150513_AGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("W3C-20150513", "AGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_W3C_20150513_AGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("W3C-20150513", "AGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_W3C_20150513_Apache_1_0(self):        
        assert osadl_matrix.get_compatibility("W3C-20150513", "Apache-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_20150513_Apache_1_1(self):        
        assert osadl_matrix.get_compatibility("W3C-20150513", "Apache-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_20150513_Apache_2_0(self):        
        assert osadl_matrix.get_compatibility("W3C-20150513", "Apache-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_20150513_Artistic_1_0(self):        
        assert osadl_matrix.get_compatibility("W3C-20150513", "Artistic-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_20150513_Artistic_1_0_Perl(self):        
        assert osadl_matrix.get_compatibility("W3C-20150513", "Artistic-1.0-Perl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_20150513_Artistic_2_0(self):        
        assert osadl_matrix.get_compatibility("W3C-20150513", "Artistic-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_20150513_BSD_1_Clause(self):        
        assert osadl_matrix.get_compatibility("W3C-20150513", "BSD-1-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_20150513_BSD_2_Clause(self):        
        assert osadl_matrix.get_compatibility("W3C-20150513", "BSD-2-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_20150513_BSD_2_Clause_Patent(self):        
        assert osadl_matrix.get_compatibility("W3C-20150513", "BSD-2-Clause-Patent") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_20150513_BSD_3_Clause(self):        
        assert osadl_matrix.get_compatibility("W3C-20150513", "BSD-3-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_20150513_BSD_4_Clause(self):        
        assert osadl_matrix.get_compatibility("W3C-20150513", "BSD-4-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_20150513_BSD_4_Clause_UC(self):        
        assert osadl_matrix.get_compatibility("W3C-20150513", "BSD-4-Clause-UC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_20150513_BSD_Source_Code(self):        
        assert osadl_matrix.get_compatibility("W3C-20150513", "BSD-Source-Code") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_20150513_BSL_1_0(self):        
        assert osadl_matrix.get_compatibility("W3C-20150513", "BSL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_20150513_CC0_1_0(self):        
        assert osadl_matrix.get_compatibility("W3C-20150513", "CC0-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_20150513_CDDL_1_0(self):        
        assert osadl_matrix.get_compatibility("W3C-20150513", "CDDL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_W3C_20150513_CDDL_1_1(self):        
        assert osadl_matrix.get_compatibility("W3C-20150513", "CDDL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_W3C_20150513_CPL_1_0(self):        
        assert osadl_matrix.get_compatibility("W3C-20150513", "CPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_W3C_20150513_EFL_2_0(self):        
        assert osadl_matrix.get_compatibility("W3C-20150513", "EFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_20150513_EPL_1_0(self):        
        assert osadl_matrix.get_compatibility("W3C-20150513", "EPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_W3C_20150513_EPL_2_0(self):        
        assert osadl_matrix.get_compatibility("W3C-20150513", "EPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_W3C_20150513_EUPL_1_1(self):        
        assert osadl_matrix.get_compatibility("W3C-20150513", "EUPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_W3C_20150513_EUPL_1_2(self):        
        assert osadl_matrix.get_compatibility("W3C-20150513", "EUPL-1.2") == osadl_matrix.OSADLCompatibility.NO
    

    def test_W3C_20150513_FSFAP(self):        
        assert osadl_matrix.get_compatibility("W3C-20150513", "FSFAP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_20150513_FSFULLR(self):        
        assert osadl_matrix.get_compatibility("W3C-20150513", "FSFULLR") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_20150513_FTL(self):        
        assert osadl_matrix.get_compatibility("W3C-20150513", "FTL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_20150513_GPL_1_0_only(self):        
        assert osadl_matrix.get_compatibility("W3C-20150513", "GPL-1.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_W3C_20150513_GPL_1_0_or_later(self):        
        assert osadl_matrix.get_compatibility("W3C-20150513", "GPL-1.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_W3C_20150513_GPL_2_0_only(self):        
        assert osadl_matrix.get_compatibility("W3C-20150513", "GPL-2.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_W3C_20150513_GPL_2_0_only_WITH_Classpath_exception_2_0(self):        
        assert osadl_matrix.get_compatibility("W3C-20150513", "GPL-2.0-only WITH Classpath-exception-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_W3C_20150513_GPL_2_0_or_later(self):        
        assert osadl_matrix.get_compatibility("W3C-20150513", "GPL-2.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_W3C_20150513_GPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("W3C-20150513", "GPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_W3C_20150513_GPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("W3C-20150513", "GPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_W3C_20150513_HPND(self):        
        assert osadl_matrix.get_compatibility("W3C-20150513", "HPND") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_20150513_IBM_pibs(self):        
        assert osadl_matrix.get_compatibility("W3C-20150513", "IBM-pibs") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_20150513_ICU(self):        
        assert osadl_matrix.get_compatibility("W3C-20150513", "ICU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_20150513_IJG(self):        
        assert osadl_matrix.get_compatibility("W3C-20150513", "IJG") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_20150513_IPL_1_0(self):        
        assert osadl_matrix.get_compatibility("W3C-20150513", "IPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_W3C_20150513_ISC(self):        
        assert osadl_matrix.get_compatibility("W3C-20150513", "ISC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_20150513_Info_ZIP(self):        
        assert osadl_matrix.get_compatibility("W3C-20150513", "Info-ZIP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_20150513_LGPL_2_1_only(self):        
        assert osadl_matrix.get_compatibility("W3C-20150513", "LGPL-2.1-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_W3C_20150513_LGPL_2_1_or_later(self):        
        assert osadl_matrix.get_compatibility("W3C-20150513", "LGPL-2.1-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_W3C_20150513_LGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("W3C-20150513", "LGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_W3C_20150513_LGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("W3C-20150513", "LGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_W3C_20150513_Libpng(self):        
        assert osadl_matrix.get_compatibility("W3C-20150513", "Libpng") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_20150513_MIT(self):        
        assert osadl_matrix.get_compatibility("W3C-20150513", "MIT") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_20150513_MIT_CMU(self):        
        assert osadl_matrix.get_compatibility("W3C-20150513", "MIT-CMU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_20150513_MPL_1_1(self):        
        assert osadl_matrix.get_compatibility("W3C-20150513", "MPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_W3C_20150513_MPL_2_0(self):        
        assert osadl_matrix.get_compatibility("W3C-20150513", "MPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_W3C_20150513_MPL_2_0_no_copyleft_exception(self):        
        assert osadl_matrix.get_compatibility("W3C-20150513", "MPL-2.0-no-copyleft-exception") == osadl_matrix.OSADLCompatibility.NO
    

    def test_W3C_20150513_MS_PL(self):        
        assert osadl_matrix.get_compatibility("W3C-20150513", "MS-PL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_W3C_20150513_MS_RL(self):        
        assert osadl_matrix.get_compatibility("W3C-20150513", "MS-RL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_W3C_20150513_MirOS(self):        
        assert osadl_matrix.get_compatibility("W3C-20150513", "MirOS") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_20150513_NBPL_1_0(self):        
        assert osadl_matrix.get_compatibility("W3C-20150513", "NBPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_20150513_NTP(self):        
        assert osadl_matrix.get_compatibility("W3C-20150513", "NTP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_20150513_OSL_3_0(self):        
        assert osadl_matrix.get_compatibility("W3C-20150513", "OSL-3.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_W3C_20150513_OpenSSL(self):        
        assert osadl_matrix.get_compatibility("W3C-20150513", "OpenSSL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_W3C_20150513_PHP_3_01(self):        
        assert osadl_matrix.get_compatibility("W3C-20150513", "PHP-3.01") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_20150513_PostgreSQL(self):        
        assert osadl_matrix.get_compatibility("W3C-20150513", "PostgreSQL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_20150513_Python_2_0(self):        
        assert osadl_matrix.get_compatibility("W3C-20150513", "Python-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_20150513_Qhull(self):        
        assert osadl_matrix.get_compatibility("W3C-20150513", "Qhull") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_20150513_RSA_MD(self):        
        assert osadl_matrix.get_compatibility("W3C-20150513", "RSA-MD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_20150513_Sleepycat(self):        
        assert osadl_matrix.get_compatibility("W3C-20150513", "Sleepycat") == osadl_matrix.OSADLCompatibility.NO
    

    def test_W3C_20150513_SunPro(self):        
        assert osadl_matrix.get_compatibility("W3C-20150513", "SunPro") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_20150513_UPL_1_0(self):        
        assert osadl_matrix.get_compatibility("W3C-20150513", "UPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_20150513_Unicode_DFS_2015(self):        
        assert osadl_matrix.get_compatibility("W3C-20150513", "Unicode-DFS-2015") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_20150513_Unicode_DFS_2016(self):        
        assert osadl_matrix.get_compatibility("W3C-20150513", "Unicode-DFS-2016") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_20150513_Unlicense(self):        
        assert osadl_matrix.get_compatibility("W3C-20150513", "Unlicense") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_20150513_W3C(self):        
        assert osadl_matrix.get_compatibility("W3C-20150513", "W3C") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_20150513_W3C_19980720(self):        
        assert osadl_matrix.get_compatibility("W3C-20150513", "W3C-19980720") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_20150513_W3C_20150513(self):        
        assert osadl_matrix.get_compatibility("W3C-20150513", "W3C-20150513") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_20150513_WTFPL(self):        
        assert osadl_matrix.get_compatibility("W3C-20150513", "WTFPL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_20150513_X11(self):        
        assert osadl_matrix.get_compatibility("W3C-20150513", "X11") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_20150513_XFree86_1_1(self):        
        assert osadl_matrix.get_compatibility("W3C-20150513", "XFree86-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_20150513_ZPL_2_0(self):        
        assert osadl_matrix.get_compatibility("W3C-20150513", "ZPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_20150513_Zlib(self):        
        assert osadl_matrix.get_compatibility("W3C-20150513", "Zlib") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_20150513_bzip2_1_0_5(self):        
        assert osadl_matrix.get_compatibility("W3C-20150513", "bzip2-1.0.5") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_20150513_bzip2_1_0_6(self):        
        assert osadl_matrix.get_compatibility("W3C-20150513", "bzip2-1.0.6") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_20150513_curl(self):        
        assert osadl_matrix.get_compatibility("W3C-20150513", "curl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_20150513_libtiff(self):        
        assert osadl_matrix.get_compatibility("W3C-20150513", "libtiff") == osadl_matrix.OSADLCompatibility.YES
    

    def test_W3C_20150513_zlib_acknowledgement(self):        
        assert osadl_matrix.get_compatibility("W3C-20150513", "zlib-acknowledgement") == osadl_matrix.OSADLCompatibility.YES
    

    def test_WTFPL_0BSD(self):        
        assert osadl_matrix.get_compatibility("WTFPL", "0BSD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_WTFPL_AFL_2_0(self):        
        assert osadl_matrix.get_compatibility("WTFPL", "AFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_WTFPL_AFL_2_1(self):        
        assert osadl_matrix.get_compatibility("WTFPL", "AFL-2.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_WTFPL_AFL_3_0(self):        
        assert osadl_matrix.get_compatibility("WTFPL", "AFL-3.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_WTFPL_AGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("WTFPL", "AGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_WTFPL_AGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("WTFPL", "AGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_WTFPL_Apache_1_0(self):        
        assert osadl_matrix.get_compatibility("WTFPL", "Apache-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_WTFPL_Apache_1_1(self):        
        assert osadl_matrix.get_compatibility("WTFPL", "Apache-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_WTFPL_Apache_2_0(self):        
        assert osadl_matrix.get_compatibility("WTFPL", "Apache-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_WTFPL_Artistic_1_0(self):        
        assert osadl_matrix.get_compatibility("WTFPL", "Artistic-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_WTFPL_Artistic_1_0_Perl(self):        
        assert osadl_matrix.get_compatibility("WTFPL", "Artistic-1.0-Perl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_WTFPL_Artistic_2_0(self):        
        assert osadl_matrix.get_compatibility("WTFPL", "Artistic-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_WTFPL_BSD_1_Clause(self):        
        assert osadl_matrix.get_compatibility("WTFPL", "BSD-1-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_WTFPL_BSD_2_Clause(self):        
        assert osadl_matrix.get_compatibility("WTFPL", "BSD-2-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_WTFPL_BSD_2_Clause_Patent(self):        
        assert osadl_matrix.get_compatibility("WTFPL", "BSD-2-Clause-Patent") == osadl_matrix.OSADLCompatibility.YES
    

    def test_WTFPL_BSD_3_Clause(self):        
        assert osadl_matrix.get_compatibility("WTFPL", "BSD-3-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_WTFPL_BSD_4_Clause(self):        
        assert osadl_matrix.get_compatibility("WTFPL", "BSD-4-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_WTFPL_BSD_4_Clause_UC(self):        
        assert osadl_matrix.get_compatibility("WTFPL", "BSD-4-Clause-UC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_WTFPL_BSD_Source_Code(self):        
        assert osadl_matrix.get_compatibility("WTFPL", "BSD-Source-Code") == osadl_matrix.OSADLCompatibility.YES
    

    def test_WTFPL_BSL_1_0(self):        
        assert osadl_matrix.get_compatibility("WTFPL", "BSL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_WTFPL_CC0_1_0(self):        
        assert osadl_matrix.get_compatibility("WTFPL", "CC0-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_WTFPL_CDDL_1_0(self):        
        assert osadl_matrix.get_compatibility("WTFPL", "CDDL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_WTFPL_CDDL_1_1(self):        
        assert osadl_matrix.get_compatibility("WTFPL", "CDDL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_WTFPL_CPL_1_0(self):        
        assert osadl_matrix.get_compatibility("WTFPL", "CPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_WTFPL_EFL_2_0(self):        
        assert osadl_matrix.get_compatibility("WTFPL", "EFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_WTFPL_EPL_1_0(self):        
        assert osadl_matrix.get_compatibility("WTFPL", "EPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_WTFPL_EPL_2_0(self):        
        assert osadl_matrix.get_compatibility("WTFPL", "EPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_WTFPL_EUPL_1_1(self):        
        assert osadl_matrix.get_compatibility("WTFPL", "EUPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_WTFPL_EUPL_1_2(self):        
        assert osadl_matrix.get_compatibility("WTFPL", "EUPL-1.2") == osadl_matrix.OSADLCompatibility.NO
    

    def test_WTFPL_FSFAP(self):        
        assert osadl_matrix.get_compatibility("WTFPL", "FSFAP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_WTFPL_FSFULLR(self):        
        assert osadl_matrix.get_compatibility("WTFPL", "FSFULLR") == osadl_matrix.OSADLCompatibility.YES
    

    def test_WTFPL_FTL(self):        
        assert osadl_matrix.get_compatibility("WTFPL", "FTL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_WTFPL_GPL_1_0_only(self):        
        assert osadl_matrix.get_compatibility("WTFPL", "GPL-1.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_WTFPL_GPL_1_0_or_later(self):        
        assert osadl_matrix.get_compatibility("WTFPL", "GPL-1.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_WTFPL_GPL_2_0_only(self):        
        assert osadl_matrix.get_compatibility("WTFPL", "GPL-2.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_WTFPL_GPL_2_0_only_WITH_Classpath_exception_2_0(self):        
        assert osadl_matrix.get_compatibility("WTFPL", "GPL-2.0-only WITH Classpath-exception-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_WTFPL_GPL_2_0_or_later(self):        
        assert osadl_matrix.get_compatibility("WTFPL", "GPL-2.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_WTFPL_GPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("WTFPL", "GPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_WTFPL_GPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("WTFPL", "GPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_WTFPL_HPND(self):        
        assert osadl_matrix.get_compatibility("WTFPL", "HPND") == osadl_matrix.OSADLCompatibility.YES
    

    def test_WTFPL_IBM_pibs(self):        
        assert osadl_matrix.get_compatibility("WTFPL", "IBM-pibs") == osadl_matrix.OSADLCompatibility.YES
    

    def test_WTFPL_ICU(self):        
        assert osadl_matrix.get_compatibility("WTFPL", "ICU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_WTFPL_IJG(self):        
        assert osadl_matrix.get_compatibility("WTFPL", "IJG") == osadl_matrix.OSADLCompatibility.YES
    

    def test_WTFPL_IPL_1_0(self):        
        assert osadl_matrix.get_compatibility("WTFPL", "IPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_WTFPL_ISC(self):        
        assert osadl_matrix.get_compatibility("WTFPL", "ISC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_WTFPL_Info_ZIP(self):        
        assert osadl_matrix.get_compatibility("WTFPL", "Info-ZIP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_WTFPL_LGPL_2_1_only(self):        
        assert osadl_matrix.get_compatibility("WTFPL", "LGPL-2.1-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_WTFPL_LGPL_2_1_or_later(self):        
        assert osadl_matrix.get_compatibility("WTFPL", "LGPL-2.1-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_WTFPL_LGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("WTFPL", "LGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_WTFPL_LGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("WTFPL", "LGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_WTFPL_Libpng(self):        
        assert osadl_matrix.get_compatibility("WTFPL", "Libpng") == osadl_matrix.OSADLCompatibility.YES
    

    def test_WTFPL_MIT(self):        
        assert osadl_matrix.get_compatibility("WTFPL", "MIT") == osadl_matrix.OSADLCompatibility.YES
    

    def test_WTFPL_MIT_CMU(self):        
        assert osadl_matrix.get_compatibility("WTFPL", "MIT-CMU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_WTFPL_MPL_1_1(self):        
        assert osadl_matrix.get_compatibility("WTFPL", "MPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_WTFPL_MPL_2_0(self):        
        assert osadl_matrix.get_compatibility("WTFPL", "MPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_WTFPL_MPL_2_0_no_copyleft_exception(self):        
        assert osadl_matrix.get_compatibility("WTFPL", "MPL-2.0-no-copyleft-exception") == osadl_matrix.OSADLCompatibility.NO
    

    def test_WTFPL_MS_PL(self):        
        assert osadl_matrix.get_compatibility("WTFPL", "MS-PL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_WTFPL_MS_RL(self):        
        assert osadl_matrix.get_compatibility("WTFPL", "MS-RL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_WTFPL_MirOS(self):        
        assert osadl_matrix.get_compatibility("WTFPL", "MirOS") == osadl_matrix.OSADLCompatibility.YES
    

    def test_WTFPL_NBPL_1_0(self):        
        assert osadl_matrix.get_compatibility("WTFPL", "NBPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_WTFPL_NTP(self):        
        assert osadl_matrix.get_compatibility("WTFPL", "NTP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_WTFPL_OSL_3_0(self):        
        assert osadl_matrix.get_compatibility("WTFPL", "OSL-3.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_WTFPL_OpenSSL(self):        
        assert osadl_matrix.get_compatibility("WTFPL", "OpenSSL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_WTFPL_PHP_3_01(self):        
        assert osadl_matrix.get_compatibility("WTFPL", "PHP-3.01") == osadl_matrix.OSADLCompatibility.YES
    

    def test_WTFPL_PostgreSQL(self):        
        assert osadl_matrix.get_compatibility("WTFPL", "PostgreSQL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_WTFPL_Python_2_0(self):        
        assert osadl_matrix.get_compatibility("WTFPL", "Python-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_WTFPL_Qhull(self):        
        assert osadl_matrix.get_compatibility("WTFPL", "Qhull") == osadl_matrix.OSADLCompatibility.YES
    

    def test_WTFPL_RSA_MD(self):        
        assert osadl_matrix.get_compatibility("WTFPL", "RSA-MD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_WTFPL_Sleepycat(self):        
        assert osadl_matrix.get_compatibility("WTFPL", "Sleepycat") == osadl_matrix.OSADLCompatibility.NO
    

    def test_WTFPL_SunPro(self):        
        assert osadl_matrix.get_compatibility("WTFPL", "SunPro") == osadl_matrix.OSADLCompatibility.YES
    

    def test_WTFPL_UPL_1_0(self):        
        assert osadl_matrix.get_compatibility("WTFPL", "UPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_WTFPL_Unicode_DFS_2015(self):        
        assert osadl_matrix.get_compatibility("WTFPL", "Unicode-DFS-2015") == osadl_matrix.OSADLCompatibility.YES
    

    def test_WTFPL_Unicode_DFS_2016(self):        
        assert osadl_matrix.get_compatibility("WTFPL", "Unicode-DFS-2016") == osadl_matrix.OSADLCompatibility.YES
    

    def test_WTFPL_Unlicense(self):        
        assert osadl_matrix.get_compatibility("WTFPL", "Unlicense") == osadl_matrix.OSADLCompatibility.YES
    

    def test_WTFPL_W3C(self):        
        assert osadl_matrix.get_compatibility("WTFPL", "W3C") == osadl_matrix.OSADLCompatibility.YES
    

    def test_WTFPL_W3C_19980720(self):        
        assert osadl_matrix.get_compatibility("WTFPL", "W3C-19980720") == osadl_matrix.OSADLCompatibility.YES
    

    def test_WTFPL_W3C_20150513(self):        
        assert osadl_matrix.get_compatibility("WTFPL", "W3C-20150513") == osadl_matrix.OSADLCompatibility.YES
    

    def test_WTFPL_WTFPL(self):        
        assert osadl_matrix.get_compatibility("WTFPL", "WTFPL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_WTFPL_X11(self):        
        assert osadl_matrix.get_compatibility("WTFPL", "X11") == osadl_matrix.OSADLCompatibility.YES
    

    def test_WTFPL_XFree86_1_1(self):        
        assert osadl_matrix.get_compatibility("WTFPL", "XFree86-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_WTFPL_ZPL_2_0(self):        
        assert osadl_matrix.get_compatibility("WTFPL", "ZPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_WTFPL_Zlib(self):        
        assert osadl_matrix.get_compatibility("WTFPL", "Zlib") == osadl_matrix.OSADLCompatibility.YES
    

    def test_WTFPL_bzip2_1_0_5(self):        
        assert osadl_matrix.get_compatibility("WTFPL", "bzip2-1.0.5") == osadl_matrix.OSADLCompatibility.YES
    

    def test_WTFPL_bzip2_1_0_6(self):        
        assert osadl_matrix.get_compatibility("WTFPL", "bzip2-1.0.6") == osadl_matrix.OSADLCompatibility.YES
    

    def test_WTFPL_curl(self):        
        assert osadl_matrix.get_compatibility("WTFPL", "curl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_WTFPL_libtiff(self):        
        assert osadl_matrix.get_compatibility("WTFPL", "libtiff") == osadl_matrix.OSADLCompatibility.YES
    

    def test_WTFPL_zlib_acknowledgement(self):        
        assert osadl_matrix.get_compatibility("WTFPL", "zlib-acknowledgement") == osadl_matrix.OSADLCompatibility.YES
    

    def test_X11_0BSD(self):        
        assert osadl_matrix.get_compatibility("X11", "0BSD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_X11_AFL_2_0(self):        
        assert osadl_matrix.get_compatibility("X11", "AFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_X11_AFL_2_1(self):        
        assert osadl_matrix.get_compatibility("X11", "AFL-2.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_X11_AFL_3_0(self):        
        assert osadl_matrix.get_compatibility("X11", "AFL-3.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_X11_AGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("X11", "AGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_X11_AGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("X11", "AGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_X11_Apache_1_0(self):        
        assert osadl_matrix.get_compatibility("X11", "Apache-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_X11_Apache_1_1(self):        
        assert osadl_matrix.get_compatibility("X11", "Apache-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_X11_Apache_2_0(self):        
        assert osadl_matrix.get_compatibility("X11", "Apache-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_X11_Artistic_1_0(self):        
        assert osadl_matrix.get_compatibility("X11", "Artistic-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_X11_Artistic_1_0_Perl(self):        
        assert osadl_matrix.get_compatibility("X11", "Artistic-1.0-Perl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_X11_Artistic_2_0(self):        
        assert osadl_matrix.get_compatibility("X11", "Artistic-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_X11_BSD_1_Clause(self):        
        assert osadl_matrix.get_compatibility("X11", "BSD-1-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_X11_BSD_2_Clause(self):        
        assert osadl_matrix.get_compatibility("X11", "BSD-2-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_X11_BSD_2_Clause_Patent(self):        
        assert osadl_matrix.get_compatibility("X11", "BSD-2-Clause-Patent") == osadl_matrix.OSADLCompatibility.YES
    

    def test_X11_BSD_3_Clause(self):        
        assert osadl_matrix.get_compatibility("X11", "BSD-3-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_X11_BSD_4_Clause(self):        
        assert osadl_matrix.get_compatibility("X11", "BSD-4-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_X11_BSD_4_Clause_UC(self):        
        assert osadl_matrix.get_compatibility("X11", "BSD-4-Clause-UC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_X11_BSD_Source_Code(self):        
        assert osadl_matrix.get_compatibility("X11", "BSD-Source-Code") == osadl_matrix.OSADLCompatibility.YES
    

    def test_X11_BSL_1_0(self):        
        assert osadl_matrix.get_compatibility("X11", "BSL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_X11_CC0_1_0(self):        
        assert osadl_matrix.get_compatibility("X11", "CC0-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_X11_CDDL_1_0(self):        
        assert osadl_matrix.get_compatibility("X11", "CDDL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_X11_CDDL_1_1(self):        
        assert osadl_matrix.get_compatibility("X11", "CDDL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_X11_CPL_1_0(self):        
        assert osadl_matrix.get_compatibility("X11", "CPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_X11_EFL_2_0(self):        
        assert osadl_matrix.get_compatibility("X11", "EFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_X11_EPL_1_0(self):        
        assert osadl_matrix.get_compatibility("X11", "EPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_X11_EPL_2_0(self):        
        assert osadl_matrix.get_compatibility("X11", "EPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_X11_EUPL_1_1(self):        
        assert osadl_matrix.get_compatibility("X11", "EUPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_X11_EUPL_1_2(self):        
        assert osadl_matrix.get_compatibility("X11", "EUPL-1.2") == osadl_matrix.OSADLCompatibility.NO
    

    def test_X11_FSFAP(self):        
        assert osadl_matrix.get_compatibility("X11", "FSFAP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_X11_FSFULLR(self):        
        assert osadl_matrix.get_compatibility("X11", "FSFULLR") == osadl_matrix.OSADLCompatibility.YES
    

    def test_X11_FTL(self):        
        assert osadl_matrix.get_compatibility("X11", "FTL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_X11_GPL_1_0_only(self):        
        assert osadl_matrix.get_compatibility("X11", "GPL-1.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_X11_GPL_1_0_or_later(self):        
        assert osadl_matrix.get_compatibility("X11", "GPL-1.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_X11_GPL_2_0_only(self):        
        assert osadl_matrix.get_compatibility("X11", "GPL-2.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_X11_GPL_2_0_only_WITH_Classpath_exception_2_0(self):        
        assert osadl_matrix.get_compatibility("X11", "GPL-2.0-only WITH Classpath-exception-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_X11_GPL_2_0_or_later(self):        
        assert osadl_matrix.get_compatibility("X11", "GPL-2.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_X11_GPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("X11", "GPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_X11_GPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("X11", "GPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_X11_HPND(self):        
        assert osadl_matrix.get_compatibility("X11", "HPND") == osadl_matrix.OSADLCompatibility.YES
    

    def test_X11_IBM_pibs(self):        
        assert osadl_matrix.get_compatibility("X11", "IBM-pibs") == osadl_matrix.OSADLCompatibility.YES
    

    def test_X11_ICU(self):        
        assert osadl_matrix.get_compatibility("X11", "ICU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_X11_IJG(self):        
        assert osadl_matrix.get_compatibility("X11", "IJG") == osadl_matrix.OSADLCompatibility.YES
    

    def test_X11_IPL_1_0(self):        
        assert osadl_matrix.get_compatibility("X11", "IPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_X11_ISC(self):        
        assert osadl_matrix.get_compatibility("X11", "ISC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_X11_Info_ZIP(self):        
        assert osadl_matrix.get_compatibility("X11", "Info-ZIP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_X11_LGPL_2_1_only(self):        
        assert osadl_matrix.get_compatibility("X11", "LGPL-2.1-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_X11_LGPL_2_1_or_later(self):        
        assert osadl_matrix.get_compatibility("X11", "LGPL-2.1-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_X11_LGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("X11", "LGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_X11_LGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("X11", "LGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_X11_Libpng(self):        
        assert osadl_matrix.get_compatibility("X11", "Libpng") == osadl_matrix.OSADLCompatibility.YES
    

    def test_X11_MIT(self):        
        assert osadl_matrix.get_compatibility("X11", "MIT") == osadl_matrix.OSADLCompatibility.YES
    

    def test_X11_MIT_CMU(self):        
        assert osadl_matrix.get_compatibility("X11", "MIT-CMU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_X11_MPL_1_1(self):        
        assert osadl_matrix.get_compatibility("X11", "MPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_X11_MPL_2_0(self):        
        assert osadl_matrix.get_compatibility("X11", "MPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_X11_MPL_2_0_no_copyleft_exception(self):        
        assert osadl_matrix.get_compatibility("X11", "MPL-2.0-no-copyleft-exception") == osadl_matrix.OSADLCompatibility.NO
    

    def test_X11_MS_PL(self):        
        assert osadl_matrix.get_compatibility("X11", "MS-PL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_X11_MS_RL(self):        
        assert osadl_matrix.get_compatibility("X11", "MS-RL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_X11_MirOS(self):        
        assert osadl_matrix.get_compatibility("X11", "MirOS") == osadl_matrix.OSADLCompatibility.YES
    

    def test_X11_NBPL_1_0(self):        
        assert osadl_matrix.get_compatibility("X11", "NBPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_X11_NTP(self):        
        assert osadl_matrix.get_compatibility("X11", "NTP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_X11_OSL_3_0(self):        
        assert osadl_matrix.get_compatibility("X11", "OSL-3.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_X11_OpenSSL(self):        
        assert osadl_matrix.get_compatibility("X11", "OpenSSL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_X11_PHP_3_01(self):        
        assert osadl_matrix.get_compatibility("X11", "PHP-3.01") == osadl_matrix.OSADLCompatibility.YES
    

    def test_X11_PostgreSQL(self):        
        assert osadl_matrix.get_compatibility("X11", "PostgreSQL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_X11_Python_2_0(self):        
        assert osadl_matrix.get_compatibility("X11", "Python-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_X11_Qhull(self):        
        assert osadl_matrix.get_compatibility("X11", "Qhull") == osadl_matrix.OSADLCompatibility.YES
    

    def test_X11_RSA_MD(self):        
        assert osadl_matrix.get_compatibility("X11", "RSA-MD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_X11_Sleepycat(self):        
        assert osadl_matrix.get_compatibility("X11", "Sleepycat") == osadl_matrix.OSADLCompatibility.NO
    

    def test_X11_SunPro(self):        
        assert osadl_matrix.get_compatibility("X11", "SunPro") == osadl_matrix.OSADLCompatibility.YES
    

    def test_X11_UPL_1_0(self):        
        assert osadl_matrix.get_compatibility("X11", "UPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_X11_Unicode_DFS_2015(self):        
        assert osadl_matrix.get_compatibility("X11", "Unicode-DFS-2015") == osadl_matrix.OSADLCompatibility.YES
    

    def test_X11_Unicode_DFS_2016(self):        
        assert osadl_matrix.get_compatibility("X11", "Unicode-DFS-2016") == osadl_matrix.OSADLCompatibility.YES
    

    def test_X11_Unlicense(self):        
        assert osadl_matrix.get_compatibility("X11", "Unlicense") == osadl_matrix.OSADLCompatibility.YES
    

    def test_X11_W3C(self):        
        assert osadl_matrix.get_compatibility("X11", "W3C") == osadl_matrix.OSADLCompatibility.YES
    

    def test_X11_W3C_19980720(self):        
        assert osadl_matrix.get_compatibility("X11", "W3C-19980720") == osadl_matrix.OSADLCompatibility.YES
    

    def test_X11_W3C_20150513(self):        
        assert osadl_matrix.get_compatibility("X11", "W3C-20150513") == osadl_matrix.OSADLCompatibility.YES
    

    def test_X11_WTFPL(self):        
        assert osadl_matrix.get_compatibility("X11", "WTFPL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_X11_X11(self):        
        assert osadl_matrix.get_compatibility("X11", "X11") == osadl_matrix.OSADLCompatibility.YES
    

    def test_X11_XFree86_1_1(self):        
        assert osadl_matrix.get_compatibility("X11", "XFree86-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_X11_ZPL_2_0(self):        
        assert osadl_matrix.get_compatibility("X11", "ZPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_X11_Zlib(self):        
        assert osadl_matrix.get_compatibility("X11", "Zlib") == osadl_matrix.OSADLCompatibility.YES
    

    def test_X11_bzip2_1_0_5(self):        
        assert osadl_matrix.get_compatibility("X11", "bzip2-1.0.5") == osadl_matrix.OSADLCompatibility.YES
    

    def test_X11_bzip2_1_0_6(self):        
        assert osadl_matrix.get_compatibility("X11", "bzip2-1.0.6") == osadl_matrix.OSADLCompatibility.YES
    

    def test_X11_curl(self):        
        assert osadl_matrix.get_compatibility("X11", "curl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_X11_libtiff(self):        
        assert osadl_matrix.get_compatibility("X11", "libtiff") == osadl_matrix.OSADLCompatibility.YES
    

    def test_X11_zlib_acknowledgement(self):        
        assert osadl_matrix.get_compatibility("X11", "zlib-acknowledgement") == osadl_matrix.OSADLCompatibility.YES
    

    def test_XFree86_1_1_0BSD(self):        
        assert osadl_matrix.get_compatibility("XFree86-1.1", "0BSD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_XFree86_1_1_AFL_2_0(self):        
        assert osadl_matrix.get_compatibility("XFree86-1.1", "AFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_XFree86_1_1_AFL_2_1(self):        
        assert osadl_matrix.get_compatibility("XFree86-1.1", "AFL-2.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_XFree86_1_1_AFL_3_0(self):        
        assert osadl_matrix.get_compatibility("XFree86-1.1", "AFL-3.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_XFree86_1_1_AGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("XFree86-1.1", "AGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_XFree86_1_1_AGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("XFree86-1.1", "AGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_XFree86_1_1_Apache_1_0(self):        
        assert osadl_matrix.get_compatibility("XFree86-1.1", "Apache-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_XFree86_1_1_Apache_1_1(self):        
        assert osadl_matrix.get_compatibility("XFree86-1.1", "Apache-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_XFree86_1_1_Apache_2_0(self):        
        assert osadl_matrix.get_compatibility("XFree86-1.1", "Apache-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_XFree86_1_1_Artistic_1_0(self):        
        assert osadl_matrix.get_compatibility("XFree86-1.1", "Artistic-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_XFree86_1_1_Artistic_1_0_Perl(self):        
        assert osadl_matrix.get_compatibility("XFree86-1.1", "Artistic-1.0-Perl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_XFree86_1_1_Artistic_2_0(self):        
        assert osadl_matrix.get_compatibility("XFree86-1.1", "Artistic-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_XFree86_1_1_BSD_1_Clause(self):        
        assert osadl_matrix.get_compatibility("XFree86-1.1", "BSD-1-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_XFree86_1_1_BSD_2_Clause(self):        
        assert osadl_matrix.get_compatibility("XFree86-1.1", "BSD-2-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_XFree86_1_1_BSD_2_Clause_Patent(self):        
        assert osadl_matrix.get_compatibility("XFree86-1.1", "BSD-2-Clause-Patent") == osadl_matrix.OSADLCompatibility.YES
    

    def test_XFree86_1_1_BSD_3_Clause(self):        
        assert osadl_matrix.get_compatibility("XFree86-1.1", "BSD-3-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_XFree86_1_1_BSD_4_Clause(self):        
        assert osadl_matrix.get_compatibility("XFree86-1.1", "BSD-4-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_XFree86_1_1_BSD_4_Clause_UC(self):        
        assert osadl_matrix.get_compatibility("XFree86-1.1", "BSD-4-Clause-UC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_XFree86_1_1_BSD_Source_Code(self):        
        assert osadl_matrix.get_compatibility("XFree86-1.1", "BSD-Source-Code") == osadl_matrix.OSADLCompatibility.YES
    

    def test_XFree86_1_1_BSL_1_0(self):        
        assert osadl_matrix.get_compatibility("XFree86-1.1", "BSL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_XFree86_1_1_CC0_1_0(self):        
        assert osadl_matrix.get_compatibility("XFree86-1.1", "CC0-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_XFree86_1_1_CDDL_1_0(self):        
        assert osadl_matrix.get_compatibility("XFree86-1.1", "CDDL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_XFree86_1_1_CDDL_1_1(self):        
        assert osadl_matrix.get_compatibility("XFree86-1.1", "CDDL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_XFree86_1_1_CPL_1_0(self):        
        assert osadl_matrix.get_compatibility("XFree86-1.1", "CPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_XFree86_1_1_EFL_2_0(self):        
        assert osadl_matrix.get_compatibility("XFree86-1.1", "EFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_XFree86_1_1_EPL_1_0(self):        
        assert osadl_matrix.get_compatibility("XFree86-1.1", "EPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_XFree86_1_1_EPL_2_0(self):        
        assert osadl_matrix.get_compatibility("XFree86-1.1", "EPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_XFree86_1_1_EUPL_1_1(self):        
        assert osadl_matrix.get_compatibility("XFree86-1.1", "EUPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_XFree86_1_1_EUPL_1_2(self):        
        assert osadl_matrix.get_compatibility("XFree86-1.1", "EUPL-1.2") == osadl_matrix.OSADLCompatibility.NO
    

    def test_XFree86_1_1_FSFAP(self):        
        assert osadl_matrix.get_compatibility("XFree86-1.1", "FSFAP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_XFree86_1_1_FSFULLR(self):        
        assert osadl_matrix.get_compatibility("XFree86-1.1", "FSFULLR") == osadl_matrix.OSADLCompatibility.YES
    

    def test_XFree86_1_1_FTL(self):        
        assert osadl_matrix.get_compatibility("XFree86-1.1", "FTL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_XFree86_1_1_GPL_1_0_only(self):        
        assert osadl_matrix.get_compatibility("XFree86-1.1", "GPL-1.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_XFree86_1_1_GPL_1_0_or_later(self):        
        assert osadl_matrix.get_compatibility("XFree86-1.1", "GPL-1.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_XFree86_1_1_GPL_2_0_only(self):        
        assert osadl_matrix.get_compatibility("XFree86-1.1", "GPL-2.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_XFree86_1_1_GPL_2_0_only_WITH_Classpath_exception_2_0(self):        
        assert osadl_matrix.get_compatibility("XFree86-1.1", "GPL-2.0-only WITH Classpath-exception-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_XFree86_1_1_GPL_2_0_or_later(self):        
        assert osadl_matrix.get_compatibility("XFree86-1.1", "GPL-2.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_XFree86_1_1_GPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("XFree86-1.1", "GPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_XFree86_1_1_GPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("XFree86-1.1", "GPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_XFree86_1_1_HPND(self):        
        assert osadl_matrix.get_compatibility("XFree86-1.1", "HPND") == osadl_matrix.OSADLCompatibility.YES
    

    def test_XFree86_1_1_IBM_pibs(self):        
        assert osadl_matrix.get_compatibility("XFree86-1.1", "IBM-pibs") == osadl_matrix.OSADLCompatibility.YES
    

    def test_XFree86_1_1_ICU(self):        
        assert osadl_matrix.get_compatibility("XFree86-1.1", "ICU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_XFree86_1_1_IJG(self):        
        assert osadl_matrix.get_compatibility("XFree86-1.1", "IJG") == osadl_matrix.OSADLCompatibility.YES
    

    def test_XFree86_1_1_IPL_1_0(self):        
        assert osadl_matrix.get_compatibility("XFree86-1.1", "IPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_XFree86_1_1_ISC(self):        
        assert osadl_matrix.get_compatibility("XFree86-1.1", "ISC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_XFree86_1_1_Info_ZIP(self):        
        assert osadl_matrix.get_compatibility("XFree86-1.1", "Info-ZIP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_XFree86_1_1_LGPL_2_1_only(self):        
        assert osadl_matrix.get_compatibility("XFree86-1.1", "LGPL-2.1-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_XFree86_1_1_LGPL_2_1_or_later(self):        
        assert osadl_matrix.get_compatibility("XFree86-1.1", "LGPL-2.1-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_XFree86_1_1_LGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("XFree86-1.1", "LGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_XFree86_1_1_LGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("XFree86-1.1", "LGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_XFree86_1_1_Libpng(self):        
        assert osadl_matrix.get_compatibility("XFree86-1.1", "Libpng") == osadl_matrix.OSADLCompatibility.YES
    

    def test_XFree86_1_1_MIT(self):        
        assert osadl_matrix.get_compatibility("XFree86-1.1", "MIT") == osadl_matrix.OSADLCompatibility.YES
    

    def test_XFree86_1_1_MIT_CMU(self):        
        assert osadl_matrix.get_compatibility("XFree86-1.1", "MIT-CMU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_XFree86_1_1_MPL_1_1(self):        
        assert osadl_matrix.get_compatibility("XFree86-1.1", "MPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_XFree86_1_1_MPL_2_0(self):        
        assert osadl_matrix.get_compatibility("XFree86-1.1", "MPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_XFree86_1_1_MPL_2_0_no_copyleft_exception(self):        
        assert osadl_matrix.get_compatibility("XFree86-1.1", "MPL-2.0-no-copyleft-exception") == osadl_matrix.OSADLCompatibility.NO
    

    def test_XFree86_1_1_MS_PL(self):        
        assert osadl_matrix.get_compatibility("XFree86-1.1", "MS-PL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_XFree86_1_1_MS_RL(self):        
        assert osadl_matrix.get_compatibility("XFree86-1.1", "MS-RL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_XFree86_1_1_MirOS(self):        
        assert osadl_matrix.get_compatibility("XFree86-1.1", "MirOS") == osadl_matrix.OSADLCompatibility.YES
    

    def test_XFree86_1_1_NBPL_1_0(self):        
        assert osadl_matrix.get_compatibility("XFree86-1.1", "NBPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_XFree86_1_1_NTP(self):        
        assert osadl_matrix.get_compatibility("XFree86-1.1", "NTP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_XFree86_1_1_OSL_3_0(self):        
        assert osadl_matrix.get_compatibility("XFree86-1.1", "OSL-3.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_XFree86_1_1_OpenSSL(self):        
        assert osadl_matrix.get_compatibility("XFree86-1.1", "OpenSSL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_XFree86_1_1_PHP_3_01(self):        
        assert osadl_matrix.get_compatibility("XFree86-1.1", "PHP-3.01") == osadl_matrix.OSADLCompatibility.YES
    

    def test_XFree86_1_1_PostgreSQL(self):        
        assert osadl_matrix.get_compatibility("XFree86-1.1", "PostgreSQL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_XFree86_1_1_Python_2_0(self):        
        assert osadl_matrix.get_compatibility("XFree86-1.1", "Python-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_XFree86_1_1_Qhull(self):        
        assert osadl_matrix.get_compatibility("XFree86-1.1", "Qhull") == osadl_matrix.OSADLCompatibility.YES
    

    def test_XFree86_1_1_RSA_MD(self):        
        assert osadl_matrix.get_compatibility("XFree86-1.1", "RSA-MD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_XFree86_1_1_Sleepycat(self):        
        assert osadl_matrix.get_compatibility("XFree86-1.1", "Sleepycat") == osadl_matrix.OSADLCompatibility.NO
    

    def test_XFree86_1_1_SunPro(self):        
        assert osadl_matrix.get_compatibility("XFree86-1.1", "SunPro") == osadl_matrix.OSADLCompatibility.YES
    

    def test_XFree86_1_1_UPL_1_0(self):        
        assert osadl_matrix.get_compatibility("XFree86-1.1", "UPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_XFree86_1_1_Unicode_DFS_2015(self):        
        assert osadl_matrix.get_compatibility("XFree86-1.1", "Unicode-DFS-2015") == osadl_matrix.OSADLCompatibility.YES
    

    def test_XFree86_1_1_Unicode_DFS_2016(self):        
        assert osadl_matrix.get_compatibility("XFree86-1.1", "Unicode-DFS-2016") == osadl_matrix.OSADLCompatibility.YES
    

    def test_XFree86_1_1_Unlicense(self):        
        assert osadl_matrix.get_compatibility("XFree86-1.1", "Unlicense") == osadl_matrix.OSADLCompatibility.YES
    

    def test_XFree86_1_1_W3C(self):        
        assert osadl_matrix.get_compatibility("XFree86-1.1", "W3C") == osadl_matrix.OSADLCompatibility.YES
    

    def test_XFree86_1_1_W3C_19980720(self):        
        assert osadl_matrix.get_compatibility("XFree86-1.1", "W3C-19980720") == osadl_matrix.OSADLCompatibility.YES
    

    def test_XFree86_1_1_W3C_20150513(self):        
        assert osadl_matrix.get_compatibility("XFree86-1.1", "W3C-20150513") == osadl_matrix.OSADLCompatibility.YES
    

    def test_XFree86_1_1_WTFPL(self):        
        assert osadl_matrix.get_compatibility("XFree86-1.1", "WTFPL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_XFree86_1_1_X11(self):        
        assert osadl_matrix.get_compatibility("XFree86-1.1", "X11") == osadl_matrix.OSADLCompatibility.YES
    

    def test_XFree86_1_1_XFree86_1_1(self):        
        assert osadl_matrix.get_compatibility("XFree86-1.1", "XFree86-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_XFree86_1_1_ZPL_2_0(self):        
        assert osadl_matrix.get_compatibility("XFree86-1.1", "ZPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_XFree86_1_1_Zlib(self):        
        assert osadl_matrix.get_compatibility("XFree86-1.1", "Zlib") == osadl_matrix.OSADLCompatibility.YES
    

    def test_XFree86_1_1_bzip2_1_0_5(self):        
        assert osadl_matrix.get_compatibility("XFree86-1.1", "bzip2-1.0.5") == osadl_matrix.OSADLCompatibility.YES
    

    def test_XFree86_1_1_bzip2_1_0_6(self):        
        assert osadl_matrix.get_compatibility("XFree86-1.1", "bzip2-1.0.6") == osadl_matrix.OSADLCompatibility.YES
    

    def test_XFree86_1_1_curl(self):        
        assert osadl_matrix.get_compatibility("XFree86-1.1", "curl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_XFree86_1_1_libtiff(self):        
        assert osadl_matrix.get_compatibility("XFree86-1.1", "libtiff") == osadl_matrix.OSADLCompatibility.YES
    

    def test_XFree86_1_1_zlib_acknowledgement(self):        
        assert osadl_matrix.get_compatibility("XFree86-1.1", "zlib-acknowledgement") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ZPL_2_0_0BSD(self):        
        assert osadl_matrix.get_compatibility("ZPL-2.0", "0BSD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ZPL_2_0_AFL_2_0(self):        
        assert osadl_matrix.get_compatibility("ZPL-2.0", "AFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ZPL_2_0_AFL_2_1(self):        
        assert osadl_matrix.get_compatibility("ZPL-2.0", "AFL-2.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ZPL_2_0_AFL_3_0(self):        
        assert osadl_matrix.get_compatibility("ZPL-2.0", "AFL-3.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ZPL_2_0_AGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("ZPL-2.0", "AGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_ZPL_2_0_AGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("ZPL-2.0", "AGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_ZPL_2_0_Apache_1_0(self):        
        assert osadl_matrix.get_compatibility("ZPL-2.0", "Apache-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ZPL_2_0_Apache_1_1(self):        
        assert osadl_matrix.get_compatibility("ZPL-2.0", "Apache-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ZPL_2_0_Apache_2_0(self):        
        assert osadl_matrix.get_compatibility("ZPL-2.0", "Apache-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ZPL_2_0_Artistic_1_0(self):        
        assert osadl_matrix.get_compatibility("ZPL-2.0", "Artistic-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ZPL_2_0_Artistic_1_0_Perl(self):        
        assert osadl_matrix.get_compatibility("ZPL-2.0", "Artistic-1.0-Perl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ZPL_2_0_Artistic_2_0(self):        
        assert osadl_matrix.get_compatibility("ZPL-2.0", "Artistic-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ZPL_2_0_BSD_1_Clause(self):        
        assert osadl_matrix.get_compatibility("ZPL-2.0", "BSD-1-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ZPL_2_0_BSD_2_Clause(self):        
        assert osadl_matrix.get_compatibility("ZPL-2.0", "BSD-2-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ZPL_2_0_BSD_2_Clause_Patent(self):        
        assert osadl_matrix.get_compatibility("ZPL-2.0", "BSD-2-Clause-Patent") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ZPL_2_0_BSD_3_Clause(self):        
        assert osadl_matrix.get_compatibility("ZPL-2.0", "BSD-3-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ZPL_2_0_BSD_4_Clause(self):        
        assert osadl_matrix.get_compatibility("ZPL-2.0", "BSD-4-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ZPL_2_0_BSD_4_Clause_UC(self):        
        assert osadl_matrix.get_compatibility("ZPL-2.0", "BSD-4-Clause-UC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ZPL_2_0_BSD_Source_Code(self):        
        assert osadl_matrix.get_compatibility("ZPL-2.0", "BSD-Source-Code") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ZPL_2_0_BSL_1_0(self):        
        assert osadl_matrix.get_compatibility("ZPL-2.0", "BSL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ZPL_2_0_CC0_1_0(self):        
        assert osadl_matrix.get_compatibility("ZPL-2.0", "CC0-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ZPL_2_0_CDDL_1_0(self):        
        assert osadl_matrix.get_compatibility("ZPL-2.0", "CDDL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_ZPL_2_0_CDDL_1_1(self):        
        assert osadl_matrix.get_compatibility("ZPL-2.0", "CDDL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_ZPL_2_0_CPL_1_0(self):        
        assert osadl_matrix.get_compatibility("ZPL-2.0", "CPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_ZPL_2_0_EFL_2_0(self):        
        assert osadl_matrix.get_compatibility("ZPL-2.0", "EFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ZPL_2_0_EPL_1_0(self):        
        assert osadl_matrix.get_compatibility("ZPL-2.0", "EPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_ZPL_2_0_EPL_2_0(self):        
        assert osadl_matrix.get_compatibility("ZPL-2.0", "EPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_ZPL_2_0_EUPL_1_1(self):        
        assert osadl_matrix.get_compatibility("ZPL-2.0", "EUPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_ZPL_2_0_EUPL_1_2(self):        
        assert osadl_matrix.get_compatibility("ZPL-2.0", "EUPL-1.2") == osadl_matrix.OSADLCompatibility.NO
    

    def test_ZPL_2_0_FSFAP(self):        
        assert osadl_matrix.get_compatibility("ZPL-2.0", "FSFAP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ZPL_2_0_FSFULLR(self):        
        assert osadl_matrix.get_compatibility("ZPL-2.0", "FSFULLR") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ZPL_2_0_FTL(self):        
        assert osadl_matrix.get_compatibility("ZPL-2.0", "FTL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ZPL_2_0_GPL_1_0_only(self):        
        assert osadl_matrix.get_compatibility("ZPL-2.0", "GPL-1.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_ZPL_2_0_GPL_1_0_or_later(self):        
        assert osadl_matrix.get_compatibility("ZPL-2.0", "GPL-1.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_ZPL_2_0_GPL_2_0_only(self):        
        assert osadl_matrix.get_compatibility("ZPL-2.0", "GPL-2.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_ZPL_2_0_GPL_2_0_only_WITH_Classpath_exception_2_0(self):        
        assert osadl_matrix.get_compatibility("ZPL-2.0", "GPL-2.0-only WITH Classpath-exception-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_ZPL_2_0_GPL_2_0_or_later(self):        
        assert osadl_matrix.get_compatibility("ZPL-2.0", "GPL-2.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_ZPL_2_0_GPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("ZPL-2.0", "GPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_ZPL_2_0_GPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("ZPL-2.0", "GPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_ZPL_2_0_HPND(self):        
        assert osadl_matrix.get_compatibility("ZPL-2.0", "HPND") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ZPL_2_0_IBM_pibs(self):        
        assert osadl_matrix.get_compatibility("ZPL-2.0", "IBM-pibs") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ZPL_2_0_ICU(self):        
        assert osadl_matrix.get_compatibility("ZPL-2.0", "ICU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ZPL_2_0_IJG(self):        
        assert osadl_matrix.get_compatibility("ZPL-2.0", "IJG") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ZPL_2_0_IPL_1_0(self):        
        assert osadl_matrix.get_compatibility("ZPL-2.0", "IPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_ZPL_2_0_ISC(self):        
        assert osadl_matrix.get_compatibility("ZPL-2.0", "ISC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ZPL_2_0_Info_ZIP(self):        
        assert osadl_matrix.get_compatibility("ZPL-2.0", "Info-ZIP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ZPL_2_0_LGPL_2_1_only(self):        
        assert osadl_matrix.get_compatibility("ZPL-2.0", "LGPL-2.1-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_ZPL_2_0_LGPL_2_1_or_later(self):        
        assert osadl_matrix.get_compatibility("ZPL-2.0", "LGPL-2.1-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_ZPL_2_0_LGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("ZPL-2.0", "LGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_ZPL_2_0_LGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("ZPL-2.0", "LGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_ZPL_2_0_Libpng(self):        
        assert osadl_matrix.get_compatibility("ZPL-2.0", "Libpng") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ZPL_2_0_MIT(self):        
        assert osadl_matrix.get_compatibility("ZPL-2.0", "MIT") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ZPL_2_0_MIT_CMU(self):        
        assert osadl_matrix.get_compatibility("ZPL-2.0", "MIT-CMU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ZPL_2_0_MPL_1_1(self):        
        assert osadl_matrix.get_compatibility("ZPL-2.0", "MPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_ZPL_2_0_MPL_2_0(self):        
        assert osadl_matrix.get_compatibility("ZPL-2.0", "MPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_ZPL_2_0_MPL_2_0_no_copyleft_exception(self):        
        assert osadl_matrix.get_compatibility("ZPL-2.0", "MPL-2.0-no-copyleft-exception") == osadl_matrix.OSADLCompatibility.NO
    

    def test_ZPL_2_0_MS_PL(self):        
        assert osadl_matrix.get_compatibility("ZPL-2.0", "MS-PL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_ZPL_2_0_MS_RL(self):        
        assert osadl_matrix.get_compatibility("ZPL-2.0", "MS-RL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_ZPL_2_0_MirOS(self):        
        assert osadl_matrix.get_compatibility("ZPL-2.0", "MirOS") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ZPL_2_0_NBPL_1_0(self):        
        assert osadl_matrix.get_compatibility("ZPL-2.0", "NBPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ZPL_2_0_NTP(self):        
        assert osadl_matrix.get_compatibility("ZPL-2.0", "NTP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ZPL_2_0_OSL_3_0(self):        
        assert osadl_matrix.get_compatibility("ZPL-2.0", "OSL-3.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_ZPL_2_0_OpenSSL(self):        
        assert osadl_matrix.get_compatibility("ZPL-2.0", "OpenSSL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_ZPL_2_0_PHP_3_01(self):        
        assert osadl_matrix.get_compatibility("ZPL-2.0", "PHP-3.01") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ZPL_2_0_PostgreSQL(self):        
        assert osadl_matrix.get_compatibility("ZPL-2.0", "PostgreSQL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ZPL_2_0_Python_2_0(self):        
        assert osadl_matrix.get_compatibility("ZPL-2.0", "Python-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ZPL_2_0_Qhull(self):        
        assert osadl_matrix.get_compatibility("ZPL-2.0", "Qhull") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ZPL_2_0_RSA_MD(self):        
        assert osadl_matrix.get_compatibility("ZPL-2.0", "RSA-MD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ZPL_2_0_Sleepycat(self):        
        assert osadl_matrix.get_compatibility("ZPL-2.0", "Sleepycat") == osadl_matrix.OSADLCompatibility.NO
    

    def test_ZPL_2_0_SunPro(self):        
        assert osadl_matrix.get_compatibility("ZPL-2.0", "SunPro") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ZPL_2_0_UPL_1_0(self):        
        assert osadl_matrix.get_compatibility("ZPL-2.0", "UPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ZPL_2_0_Unicode_DFS_2015(self):        
        assert osadl_matrix.get_compatibility("ZPL-2.0", "Unicode-DFS-2015") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ZPL_2_0_Unicode_DFS_2016(self):        
        assert osadl_matrix.get_compatibility("ZPL-2.0", "Unicode-DFS-2016") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ZPL_2_0_Unlicense(self):        
        assert osadl_matrix.get_compatibility("ZPL-2.0", "Unlicense") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ZPL_2_0_W3C(self):        
        assert osadl_matrix.get_compatibility("ZPL-2.0", "W3C") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ZPL_2_0_W3C_19980720(self):        
        assert osadl_matrix.get_compatibility("ZPL-2.0", "W3C-19980720") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ZPL_2_0_W3C_20150513(self):        
        assert osadl_matrix.get_compatibility("ZPL-2.0", "W3C-20150513") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ZPL_2_0_WTFPL(self):        
        assert osadl_matrix.get_compatibility("ZPL-2.0", "WTFPL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ZPL_2_0_X11(self):        
        assert osadl_matrix.get_compatibility("ZPL-2.0", "X11") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ZPL_2_0_XFree86_1_1(self):        
        assert osadl_matrix.get_compatibility("ZPL-2.0", "XFree86-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ZPL_2_0_ZPL_2_0(self):        
        assert osadl_matrix.get_compatibility("ZPL-2.0", "ZPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ZPL_2_0_Zlib(self):        
        assert osadl_matrix.get_compatibility("ZPL-2.0", "Zlib") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ZPL_2_0_bzip2_1_0_5(self):        
        assert osadl_matrix.get_compatibility("ZPL-2.0", "bzip2-1.0.5") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ZPL_2_0_bzip2_1_0_6(self):        
        assert osadl_matrix.get_compatibility("ZPL-2.0", "bzip2-1.0.6") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ZPL_2_0_curl(self):        
        assert osadl_matrix.get_compatibility("ZPL-2.0", "curl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ZPL_2_0_libtiff(self):        
        assert osadl_matrix.get_compatibility("ZPL-2.0", "libtiff") == osadl_matrix.OSADLCompatibility.YES
    

    def test_ZPL_2_0_zlib_acknowledgement(self):        
        assert osadl_matrix.get_compatibility("ZPL-2.0", "zlib-acknowledgement") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Zlib_0BSD(self):        
        assert osadl_matrix.get_compatibility("Zlib", "0BSD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Zlib_AFL_2_0(self):        
        assert osadl_matrix.get_compatibility("Zlib", "AFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Zlib_AFL_2_1(self):        
        assert osadl_matrix.get_compatibility("Zlib", "AFL-2.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Zlib_AFL_3_0(self):        
        assert osadl_matrix.get_compatibility("Zlib", "AFL-3.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Zlib_AGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("Zlib", "AGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Zlib_AGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("Zlib", "AGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Zlib_Apache_1_0(self):        
        assert osadl_matrix.get_compatibility("Zlib", "Apache-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Zlib_Apache_1_1(self):        
        assert osadl_matrix.get_compatibility("Zlib", "Apache-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Zlib_Apache_2_0(self):        
        assert osadl_matrix.get_compatibility("Zlib", "Apache-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Zlib_Artistic_1_0(self):        
        assert osadl_matrix.get_compatibility("Zlib", "Artistic-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Zlib_Artistic_1_0_Perl(self):        
        assert osadl_matrix.get_compatibility("Zlib", "Artistic-1.0-Perl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Zlib_Artistic_2_0(self):        
        assert osadl_matrix.get_compatibility("Zlib", "Artistic-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Zlib_BSD_1_Clause(self):        
        assert osadl_matrix.get_compatibility("Zlib", "BSD-1-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Zlib_BSD_2_Clause(self):        
        assert osadl_matrix.get_compatibility("Zlib", "BSD-2-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Zlib_BSD_2_Clause_Patent(self):        
        assert osadl_matrix.get_compatibility("Zlib", "BSD-2-Clause-Patent") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Zlib_BSD_3_Clause(self):        
        assert osadl_matrix.get_compatibility("Zlib", "BSD-3-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Zlib_BSD_4_Clause(self):        
        assert osadl_matrix.get_compatibility("Zlib", "BSD-4-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Zlib_BSD_4_Clause_UC(self):        
        assert osadl_matrix.get_compatibility("Zlib", "BSD-4-Clause-UC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Zlib_BSD_Source_Code(self):        
        assert osadl_matrix.get_compatibility("Zlib", "BSD-Source-Code") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Zlib_BSL_1_0(self):        
        assert osadl_matrix.get_compatibility("Zlib", "BSL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Zlib_CC0_1_0(self):        
        assert osadl_matrix.get_compatibility("Zlib", "CC0-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Zlib_CDDL_1_0(self):        
        assert osadl_matrix.get_compatibility("Zlib", "CDDL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Zlib_CDDL_1_1(self):        
        assert osadl_matrix.get_compatibility("Zlib", "CDDL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Zlib_CPL_1_0(self):        
        assert osadl_matrix.get_compatibility("Zlib", "CPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Zlib_EFL_2_0(self):        
        assert osadl_matrix.get_compatibility("Zlib", "EFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Zlib_EPL_1_0(self):        
        assert osadl_matrix.get_compatibility("Zlib", "EPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Zlib_EPL_2_0(self):        
        assert osadl_matrix.get_compatibility("Zlib", "EPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Zlib_EUPL_1_1(self):        
        assert osadl_matrix.get_compatibility("Zlib", "EUPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Zlib_EUPL_1_2(self):        
        assert osadl_matrix.get_compatibility("Zlib", "EUPL-1.2") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Zlib_FSFAP(self):        
        assert osadl_matrix.get_compatibility("Zlib", "FSFAP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Zlib_FSFULLR(self):        
        assert osadl_matrix.get_compatibility("Zlib", "FSFULLR") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Zlib_FTL(self):        
        assert osadl_matrix.get_compatibility("Zlib", "FTL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Zlib_GPL_1_0_only(self):        
        assert osadl_matrix.get_compatibility("Zlib", "GPL-1.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Zlib_GPL_1_0_or_later(self):        
        assert osadl_matrix.get_compatibility("Zlib", "GPL-1.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Zlib_GPL_2_0_only(self):        
        assert osadl_matrix.get_compatibility("Zlib", "GPL-2.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Zlib_GPL_2_0_only_WITH_Classpath_exception_2_0(self):        
        assert osadl_matrix.get_compatibility("Zlib", "GPL-2.0-only WITH Classpath-exception-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Zlib_GPL_2_0_or_later(self):        
        assert osadl_matrix.get_compatibility("Zlib", "GPL-2.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Zlib_GPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("Zlib", "GPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Zlib_GPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("Zlib", "GPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Zlib_HPND(self):        
        assert osadl_matrix.get_compatibility("Zlib", "HPND") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Zlib_IBM_pibs(self):        
        assert osadl_matrix.get_compatibility("Zlib", "IBM-pibs") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Zlib_ICU(self):        
        assert osadl_matrix.get_compatibility("Zlib", "ICU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Zlib_IJG(self):        
        assert osadl_matrix.get_compatibility("Zlib", "IJG") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Zlib_IPL_1_0(self):        
        assert osadl_matrix.get_compatibility("Zlib", "IPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Zlib_ISC(self):        
        assert osadl_matrix.get_compatibility("Zlib", "ISC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Zlib_Info_ZIP(self):        
        assert osadl_matrix.get_compatibility("Zlib", "Info-ZIP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Zlib_LGPL_2_1_only(self):        
        assert osadl_matrix.get_compatibility("Zlib", "LGPL-2.1-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Zlib_LGPL_2_1_or_later(self):        
        assert osadl_matrix.get_compatibility("Zlib", "LGPL-2.1-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Zlib_LGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("Zlib", "LGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Zlib_LGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("Zlib", "LGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Zlib_Libpng(self):        
        assert osadl_matrix.get_compatibility("Zlib", "Libpng") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Zlib_MIT(self):        
        assert osadl_matrix.get_compatibility("Zlib", "MIT") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Zlib_MIT_CMU(self):        
        assert osadl_matrix.get_compatibility("Zlib", "MIT-CMU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Zlib_MPL_1_1(self):        
        assert osadl_matrix.get_compatibility("Zlib", "MPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Zlib_MPL_2_0(self):        
        assert osadl_matrix.get_compatibility("Zlib", "MPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Zlib_MPL_2_0_no_copyleft_exception(self):        
        assert osadl_matrix.get_compatibility("Zlib", "MPL-2.0-no-copyleft-exception") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Zlib_MS_PL(self):        
        assert osadl_matrix.get_compatibility("Zlib", "MS-PL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_Zlib_MS_RL(self):        
        assert osadl_matrix.get_compatibility("Zlib", "MS-RL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Zlib_MirOS(self):        
        assert osadl_matrix.get_compatibility("Zlib", "MirOS") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Zlib_NBPL_1_0(self):        
        assert osadl_matrix.get_compatibility("Zlib", "NBPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Zlib_NTP(self):        
        assert osadl_matrix.get_compatibility("Zlib", "NTP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Zlib_OSL_3_0(self):        
        assert osadl_matrix.get_compatibility("Zlib", "OSL-3.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Zlib_OpenSSL(self):        
        assert osadl_matrix.get_compatibility("Zlib", "OpenSSL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_Zlib_PHP_3_01(self):        
        assert osadl_matrix.get_compatibility("Zlib", "PHP-3.01") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Zlib_PostgreSQL(self):        
        assert osadl_matrix.get_compatibility("Zlib", "PostgreSQL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Zlib_Python_2_0(self):        
        assert osadl_matrix.get_compatibility("Zlib", "Python-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Zlib_Qhull(self):        
        assert osadl_matrix.get_compatibility("Zlib", "Qhull") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Zlib_RSA_MD(self):        
        assert osadl_matrix.get_compatibility("Zlib", "RSA-MD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Zlib_Sleepycat(self):        
        assert osadl_matrix.get_compatibility("Zlib", "Sleepycat") == osadl_matrix.OSADLCompatibility.NO
    

    def test_Zlib_SunPro(self):        
        assert osadl_matrix.get_compatibility("Zlib", "SunPro") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Zlib_UPL_1_0(self):        
        assert osadl_matrix.get_compatibility("Zlib", "UPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Zlib_Unicode_DFS_2015(self):        
        assert osadl_matrix.get_compatibility("Zlib", "Unicode-DFS-2015") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Zlib_Unicode_DFS_2016(self):        
        assert osadl_matrix.get_compatibility("Zlib", "Unicode-DFS-2016") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Zlib_Unlicense(self):        
        assert osadl_matrix.get_compatibility("Zlib", "Unlicense") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Zlib_W3C(self):        
        assert osadl_matrix.get_compatibility("Zlib", "W3C") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Zlib_W3C_19980720(self):        
        assert osadl_matrix.get_compatibility("Zlib", "W3C-19980720") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Zlib_W3C_20150513(self):        
        assert osadl_matrix.get_compatibility("Zlib", "W3C-20150513") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Zlib_WTFPL(self):        
        assert osadl_matrix.get_compatibility("Zlib", "WTFPL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Zlib_X11(self):        
        assert osadl_matrix.get_compatibility("Zlib", "X11") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Zlib_XFree86_1_1(self):        
        assert osadl_matrix.get_compatibility("Zlib", "XFree86-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Zlib_ZPL_2_0(self):        
        assert osadl_matrix.get_compatibility("Zlib", "ZPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Zlib_Zlib(self):        
        assert osadl_matrix.get_compatibility("Zlib", "Zlib") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Zlib_bzip2_1_0_5(self):        
        assert osadl_matrix.get_compatibility("Zlib", "bzip2-1.0.5") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Zlib_bzip2_1_0_6(self):        
        assert osadl_matrix.get_compatibility("Zlib", "bzip2-1.0.6") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Zlib_curl(self):        
        assert osadl_matrix.get_compatibility("Zlib", "curl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Zlib_libtiff(self):        
        assert osadl_matrix.get_compatibility("Zlib", "libtiff") == osadl_matrix.OSADLCompatibility.YES
    

    def test_Zlib_zlib_acknowledgement(self):        
        assert osadl_matrix.get_compatibility("Zlib", "zlib-acknowledgement") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_5_0BSD(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.5", "0BSD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_5_AFL_2_0(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.5", "AFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_5_AFL_2_1(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.5", "AFL-2.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_5_AFL_3_0(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.5", "AFL-3.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_5_AGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.5", "AGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_bzip2_1_0_5_AGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.5", "AGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_bzip2_1_0_5_Apache_1_0(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.5", "Apache-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_5_Apache_1_1(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.5", "Apache-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_5_Apache_2_0(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.5", "Apache-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_5_Artistic_1_0(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.5", "Artistic-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_5_Artistic_1_0_Perl(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.5", "Artistic-1.0-Perl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_5_Artistic_2_0(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.5", "Artistic-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_5_BSD_1_Clause(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.5", "BSD-1-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_5_BSD_2_Clause(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.5", "BSD-2-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_5_BSD_2_Clause_Patent(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.5", "BSD-2-Clause-Patent") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_5_BSD_3_Clause(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.5", "BSD-3-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_5_BSD_4_Clause(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.5", "BSD-4-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_5_BSD_4_Clause_UC(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.5", "BSD-4-Clause-UC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_5_BSD_Source_Code(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.5", "BSD-Source-Code") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_5_BSL_1_0(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.5", "BSL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_5_CC0_1_0(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.5", "CC0-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_5_CDDL_1_0(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.5", "CDDL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_bzip2_1_0_5_CDDL_1_1(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.5", "CDDL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_bzip2_1_0_5_CPL_1_0(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.5", "CPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_bzip2_1_0_5_EFL_2_0(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.5", "EFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_5_EPL_1_0(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.5", "EPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_bzip2_1_0_5_EPL_2_0(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.5", "EPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_bzip2_1_0_5_EUPL_1_1(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.5", "EUPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_bzip2_1_0_5_EUPL_1_2(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.5", "EUPL-1.2") == osadl_matrix.OSADLCompatibility.NO
    

    def test_bzip2_1_0_5_FSFAP(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.5", "FSFAP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_5_FSFULLR(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.5", "FSFULLR") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_5_FTL(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.5", "FTL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_5_GPL_1_0_only(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.5", "GPL-1.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_bzip2_1_0_5_GPL_1_0_or_later(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.5", "GPL-1.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_bzip2_1_0_5_GPL_2_0_only(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.5", "GPL-2.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_bzip2_1_0_5_GPL_2_0_only_WITH_Classpath_exception_2_0(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.5", "GPL-2.0-only WITH Classpath-exception-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_bzip2_1_0_5_GPL_2_0_or_later(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.5", "GPL-2.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_bzip2_1_0_5_GPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.5", "GPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_bzip2_1_0_5_GPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.5", "GPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_bzip2_1_0_5_HPND(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.5", "HPND") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_5_IBM_pibs(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.5", "IBM-pibs") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_5_ICU(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.5", "ICU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_5_IJG(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.5", "IJG") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_5_IPL_1_0(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.5", "IPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_bzip2_1_0_5_ISC(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.5", "ISC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_5_Info_ZIP(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.5", "Info-ZIP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_5_LGPL_2_1_only(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.5", "LGPL-2.1-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_bzip2_1_0_5_LGPL_2_1_or_later(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.5", "LGPL-2.1-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_bzip2_1_0_5_LGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.5", "LGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_bzip2_1_0_5_LGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.5", "LGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_bzip2_1_0_5_Libpng(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.5", "Libpng") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_5_MIT(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.5", "MIT") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_5_MIT_CMU(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.5", "MIT-CMU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_5_MPL_1_1(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.5", "MPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_bzip2_1_0_5_MPL_2_0(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.5", "MPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_bzip2_1_0_5_MPL_2_0_no_copyleft_exception(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.5", "MPL-2.0-no-copyleft-exception") == osadl_matrix.OSADLCompatibility.NO
    

    def test_bzip2_1_0_5_MS_PL(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.5", "MS-PL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_bzip2_1_0_5_MS_RL(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.5", "MS-RL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_bzip2_1_0_5_MirOS(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.5", "MirOS") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_5_NBPL_1_0(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.5", "NBPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_5_NTP(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.5", "NTP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_5_OSL_3_0(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.5", "OSL-3.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_bzip2_1_0_5_OpenSSL(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.5", "OpenSSL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_bzip2_1_0_5_PHP_3_01(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.5", "PHP-3.01") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_5_PostgreSQL(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.5", "PostgreSQL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_5_Python_2_0(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.5", "Python-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_5_Qhull(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.5", "Qhull") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_5_RSA_MD(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.5", "RSA-MD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_5_Sleepycat(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.5", "Sleepycat") == osadl_matrix.OSADLCompatibility.NO
    

    def test_bzip2_1_0_5_SunPro(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.5", "SunPro") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_5_UPL_1_0(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.5", "UPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_5_Unicode_DFS_2015(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.5", "Unicode-DFS-2015") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_5_Unicode_DFS_2016(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.5", "Unicode-DFS-2016") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_5_Unlicense(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.5", "Unlicense") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_5_W3C(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.5", "W3C") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_5_W3C_19980720(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.5", "W3C-19980720") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_5_W3C_20150513(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.5", "W3C-20150513") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_5_WTFPL(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.5", "WTFPL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_5_X11(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.5", "X11") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_5_XFree86_1_1(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.5", "XFree86-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_5_ZPL_2_0(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.5", "ZPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_5_Zlib(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.5", "Zlib") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_5_bzip2_1_0_5(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.5", "bzip2-1.0.5") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_5_bzip2_1_0_6(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.5", "bzip2-1.0.6") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_5_curl(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.5", "curl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_5_libtiff(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.5", "libtiff") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_5_zlib_acknowledgement(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.5", "zlib-acknowledgement") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_6_0BSD(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.6", "0BSD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_6_AFL_2_0(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.6", "AFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_6_AFL_2_1(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.6", "AFL-2.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_6_AFL_3_0(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.6", "AFL-3.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_6_AGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.6", "AGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_bzip2_1_0_6_AGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.6", "AGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_bzip2_1_0_6_Apache_1_0(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.6", "Apache-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_6_Apache_1_1(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.6", "Apache-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_6_Apache_2_0(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.6", "Apache-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_6_Artistic_1_0(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.6", "Artistic-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_6_Artistic_1_0_Perl(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.6", "Artistic-1.0-Perl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_6_Artistic_2_0(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.6", "Artistic-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_6_BSD_1_Clause(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.6", "BSD-1-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_6_BSD_2_Clause(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.6", "BSD-2-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_6_BSD_2_Clause_Patent(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.6", "BSD-2-Clause-Patent") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_6_BSD_3_Clause(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.6", "BSD-3-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_6_BSD_4_Clause(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.6", "BSD-4-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_6_BSD_4_Clause_UC(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.6", "BSD-4-Clause-UC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_6_BSD_Source_Code(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.6", "BSD-Source-Code") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_6_BSL_1_0(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.6", "BSL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_6_CC0_1_0(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.6", "CC0-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_6_CDDL_1_0(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.6", "CDDL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_bzip2_1_0_6_CDDL_1_1(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.6", "CDDL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_bzip2_1_0_6_CPL_1_0(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.6", "CPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_bzip2_1_0_6_EFL_2_0(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.6", "EFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_6_EPL_1_0(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.6", "EPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_bzip2_1_0_6_EPL_2_0(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.6", "EPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_bzip2_1_0_6_EUPL_1_1(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.6", "EUPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_bzip2_1_0_6_EUPL_1_2(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.6", "EUPL-1.2") == osadl_matrix.OSADLCompatibility.NO
    

    def test_bzip2_1_0_6_FSFAP(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.6", "FSFAP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_6_FSFULLR(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.6", "FSFULLR") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_6_FTL(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.6", "FTL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_6_GPL_1_0_only(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.6", "GPL-1.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_bzip2_1_0_6_GPL_1_0_or_later(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.6", "GPL-1.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_bzip2_1_0_6_GPL_2_0_only(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.6", "GPL-2.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_bzip2_1_0_6_GPL_2_0_only_WITH_Classpath_exception_2_0(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.6", "GPL-2.0-only WITH Classpath-exception-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_bzip2_1_0_6_GPL_2_0_or_later(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.6", "GPL-2.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_bzip2_1_0_6_GPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.6", "GPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_bzip2_1_0_6_GPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.6", "GPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_bzip2_1_0_6_HPND(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.6", "HPND") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_6_IBM_pibs(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.6", "IBM-pibs") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_6_ICU(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.6", "ICU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_6_IJG(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.6", "IJG") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_6_IPL_1_0(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.6", "IPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_bzip2_1_0_6_ISC(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.6", "ISC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_6_Info_ZIP(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.6", "Info-ZIP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_6_LGPL_2_1_only(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.6", "LGPL-2.1-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_bzip2_1_0_6_LGPL_2_1_or_later(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.6", "LGPL-2.1-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_bzip2_1_0_6_LGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.6", "LGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_bzip2_1_0_6_LGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.6", "LGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_bzip2_1_0_6_Libpng(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.6", "Libpng") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_6_MIT(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.6", "MIT") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_6_MIT_CMU(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.6", "MIT-CMU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_6_MPL_1_1(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.6", "MPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_bzip2_1_0_6_MPL_2_0(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.6", "MPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_bzip2_1_0_6_MPL_2_0_no_copyleft_exception(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.6", "MPL-2.0-no-copyleft-exception") == osadl_matrix.OSADLCompatibility.NO
    

    def test_bzip2_1_0_6_MS_PL(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.6", "MS-PL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_bzip2_1_0_6_MS_RL(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.6", "MS-RL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_bzip2_1_0_6_MirOS(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.6", "MirOS") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_6_NBPL_1_0(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.6", "NBPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_6_NTP(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.6", "NTP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_6_OSL_3_0(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.6", "OSL-3.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_bzip2_1_0_6_OpenSSL(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.6", "OpenSSL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_bzip2_1_0_6_PHP_3_01(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.6", "PHP-3.01") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_6_PostgreSQL(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.6", "PostgreSQL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_6_Python_2_0(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.6", "Python-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_6_Qhull(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.6", "Qhull") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_6_RSA_MD(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.6", "RSA-MD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_6_Sleepycat(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.6", "Sleepycat") == osadl_matrix.OSADLCompatibility.NO
    

    def test_bzip2_1_0_6_SunPro(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.6", "SunPro") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_6_UPL_1_0(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.6", "UPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_6_Unicode_DFS_2015(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.6", "Unicode-DFS-2015") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_6_Unicode_DFS_2016(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.6", "Unicode-DFS-2016") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_6_Unlicense(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.6", "Unlicense") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_6_W3C(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.6", "W3C") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_6_W3C_19980720(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.6", "W3C-19980720") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_6_W3C_20150513(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.6", "W3C-20150513") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_6_WTFPL(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.6", "WTFPL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_6_X11(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.6", "X11") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_6_XFree86_1_1(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.6", "XFree86-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_6_ZPL_2_0(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.6", "ZPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_6_Zlib(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.6", "Zlib") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_6_bzip2_1_0_5(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.6", "bzip2-1.0.5") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_6_bzip2_1_0_6(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.6", "bzip2-1.0.6") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_6_curl(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.6", "curl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_6_libtiff(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.6", "libtiff") == osadl_matrix.OSADLCompatibility.YES
    

    def test_bzip2_1_0_6_zlib_acknowledgement(self):        
        assert osadl_matrix.get_compatibility("bzip2-1.0.6", "zlib-acknowledgement") == osadl_matrix.OSADLCompatibility.YES
    

    def test_curl_0BSD(self):        
        assert osadl_matrix.get_compatibility("curl", "0BSD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_curl_AFL_2_0(self):        
        assert osadl_matrix.get_compatibility("curl", "AFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_curl_AFL_2_1(self):        
        assert osadl_matrix.get_compatibility("curl", "AFL-2.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_curl_AFL_3_0(self):        
        assert osadl_matrix.get_compatibility("curl", "AFL-3.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_curl_AGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("curl", "AGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_curl_AGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("curl", "AGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_curl_Apache_1_0(self):        
        assert osadl_matrix.get_compatibility("curl", "Apache-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_curl_Apache_1_1(self):        
        assert osadl_matrix.get_compatibility("curl", "Apache-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_curl_Apache_2_0(self):        
        assert osadl_matrix.get_compatibility("curl", "Apache-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_curl_Artistic_1_0(self):        
        assert osadl_matrix.get_compatibility("curl", "Artistic-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_curl_Artistic_1_0_Perl(self):        
        assert osadl_matrix.get_compatibility("curl", "Artistic-1.0-Perl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_curl_Artistic_2_0(self):        
        assert osadl_matrix.get_compatibility("curl", "Artistic-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_curl_BSD_1_Clause(self):        
        assert osadl_matrix.get_compatibility("curl", "BSD-1-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_curl_BSD_2_Clause(self):        
        assert osadl_matrix.get_compatibility("curl", "BSD-2-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_curl_BSD_2_Clause_Patent(self):        
        assert osadl_matrix.get_compatibility("curl", "BSD-2-Clause-Patent") == osadl_matrix.OSADLCompatibility.YES
    

    def test_curl_BSD_3_Clause(self):        
        assert osadl_matrix.get_compatibility("curl", "BSD-3-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_curl_BSD_4_Clause(self):        
        assert osadl_matrix.get_compatibility("curl", "BSD-4-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_curl_BSD_4_Clause_UC(self):        
        assert osadl_matrix.get_compatibility("curl", "BSD-4-Clause-UC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_curl_BSD_Source_Code(self):        
        assert osadl_matrix.get_compatibility("curl", "BSD-Source-Code") == osadl_matrix.OSADLCompatibility.YES
    

    def test_curl_BSL_1_0(self):        
        assert osadl_matrix.get_compatibility("curl", "BSL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_curl_CC0_1_0(self):        
        assert osadl_matrix.get_compatibility("curl", "CC0-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_curl_CDDL_1_0(self):        
        assert osadl_matrix.get_compatibility("curl", "CDDL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_curl_CDDL_1_1(self):        
        assert osadl_matrix.get_compatibility("curl", "CDDL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_curl_CPL_1_0(self):        
        assert osadl_matrix.get_compatibility("curl", "CPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_curl_EFL_2_0(self):        
        assert osadl_matrix.get_compatibility("curl", "EFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_curl_EPL_1_0(self):        
        assert osadl_matrix.get_compatibility("curl", "EPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_curl_EPL_2_0(self):        
        assert osadl_matrix.get_compatibility("curl", "EPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_curl_EUPL_1_1(self):        
        assert osadl_matrix.get_compatibility("curl", "EUPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_curl_EUPL_1_2(self):        
        assert osadl_matrix.get_compatibility("curl", "EUPL-1.2") == osadl_matrix.OSADLCompatibility.NO
    

    def test_curl_FSFAP(self):        
        assert osadl_matrix.get_compatibility("curl", "FSFAP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_curl_FSFULLR(self):        
        assert osadl_matrix.get_compatibility("curl", "FSFULLR") == osadl_matrix.OSADLCompatibility.YES
    

    def test_curl_FTL(self):        
        assert osadl_matrix.get_compatibility("curl", "FTL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_curl_GPL_1_0_only(self):        
        assert osadl_matrix.get_compatibility("curl", "GPL-1.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_curl_GPL_1_0_or_later(self):        
        assert osadl_matrix.get_compatibility("curl", "GPL-1.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_curl_GPL_2_0_only(self):        
        assert osadl_matrix.get_compatibility("curl", "GPL-2.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_curl_GPL_2_0_only_WITH_Classpath_exception_2_0(self):        
        assert osadl_matrix.get_compatibility("curl", "GPL-2.0-only WITH Classpath-exception-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_curl_GPL_2_0_or_later(self):        
        assert osadl_matrix.get_compatibility("curl", "GPL-2.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_curl_GPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("curl", "GPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_curl_GPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("curl", "GPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_curl_HPND(self):        
        assert osadl_matrix.get_compatibility("curl", "HPND") == osadl_matrix.OSADLCompatibility.YES
    

    def test_curl_IBM_pibs(self):        
        assert osadl_matrix.get_compatibility("curl", "IBM-pibs") == osadl_matrix.OSADLCompatibility.YES
    

    def test_curl_ICU(self):        
        assert osadl_matrix.get_compatibility("curl", "ICU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_curl_IJG(self):        
        assert osadl_matrix.get_compatibility("curl", "IJG") == osadl_matrix.OSADLCompatibility.YES
    

    def test_curl_IPL_1_0(self):        
        assert osadl_matrix.get_compatibility("curl", "IPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_curl_ISC(self):        
        assert osadl_matrix.get_compatibility("curl", "ISC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_curl_Info_ZIP(self):        
        assert osadl_matrix.get_compatibility("curl", "Info-ZIP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_curl_LGPL_2_1_only(self):        
        assert osadl_matrix.get_compatibility("curl", "LGPL-2.1-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_curl_LGPL_2_1_or_later(self):        
        assert osadl_matrix.get_compatibility("curl", "LGPL-2.1-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_curl_LGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("curl", "LGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_curl_LGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("curl", "LGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_curl_Libpng(self):        
        assert osadl_matrix.get_compatibility("curl", "Libpng") == osadl_matrix.OSADLCompatibility.YES
    

    def test_curl_MIT(self):        
        assert osadl_matrix.get_compatibility("curl", "MIT") == osadl_matrix.OSADLCompatibility.YES
    

    def test_curl_MIT_CMU(self):        
        assert osadl_matrix.get_compatibility("curl", "MIT-CMU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_curl_MPL_1_1(self):        
        assert osadl_matrix.get_compatibility("curl", "MPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_curl_MPL_2_0(self):        
        assert osadl_matrix.get_compatibility("curl", "MPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_curl_MPL_2_0_no_copyleft_exception(self):        
        assert osadl_matrix.get_compatibility("curl", "MPL-2.0-no-copyleft-exception") == osadl_matrix.OSADLCompatibility.NO
    

    def test_curl_MS_PL(self):        
        assert osadl_matrix.get_compatibility("curl", "MS-PL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_curl_MS_RL(self):        
        assert osadl_matrix.get_compatibility("curl", "MS-RL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_curl_MirOS(self):        
        assert osadl_matrix.get_compatibility("curl", "MirOS") == osadl_matrix.OSADLCompatibility.YES
    

    def test_curl_NBPL_1_0(self):        
        assert osadl_matrix.get_compatibility("curl", "NBPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_curl_NTP(self):        
        assert osadl_matrix.get_compatibility("curl", "NTP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_curl_OSL_3_0(self):        
        assert osadl_matrix.get_compatibility("curl", "OSL-3.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_curl_OpenSSL(self):        
        assert osadl_matrix.get_compatibility("curl", "OpenSSL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_curl_PHP_3_01(self):        
        assert osadl_matrix.get_compatibility("curl", "PHP-3.01") == osadl_matrix.OSADLCompatibility.YES
    

    def test_curl_PostgreSQL(self):        
        assert osadl_matrix.get_compatibility("curl", "PostgreSQL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_curl_Python_2_0(self):        
        assert osadl_matrix.get_compatibility("curl", "Python-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_curl_Qhull(self):        
        assert osadl_matrix.get_compatibility("curl", "Qhull") == osadl_matrix.OSADLCompatibility.YES
    

    def test_curl_RSA_MD(self):        
        assert osadl_matrix.get_compatibility("curl", "RSA-MD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_curl_Sleepycat(self):        
        assert osadl_matrix.get_compatibility("curl", "Sleepycat") == osadl_matrix.OSADLCompatibility.NO
    

    def test_curl_SunPro(self):        
        assert osadl_matrix.get_compatibility("curl", "SunPro") == osadl_matrix.OSADLCompatibility.YES
    

    def test_curl_UPL_1_0(self):        
        assert osadl_matrix.get_compatibility("curl", "UPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_curl_Unicode_DFS_2015(self):        
        assert osadl_matrix.get_compatibility("curl", "Unicode-DFS-2015") == osadl_matrix.OSADLCompatibility.YES
    

    def test_curl_Unicode_DFS_2016(self):        
        assert osadl_matrix.get_compatibility("curl", "Unicode-DFS-2016") == osadl_matrix.OSADLCompatibility.YES
    

    def test_curl_Unlicense(self):        
        assert osadl_matrix.get_compatibility("curl", "Unlicense") == osadl_matrix.OSADLCompatibility.YES
    

    def test_curl_W3C(self):        
        assert osadl_matrix.get_compatibility("curl", "W3C") == osadl_matrix.OSADLCompatibility.YES
    

    def test_curl_W3C_19980720(self):        
        assert osadl_matrix.get_compatibility("curl", "W3C-19980720") == osadl_matrix.OSADLCompatibility.YES
    

    def test_curl_W3C_20150513(self):        
        assert osadl_matrix.get_compatibility("curl", "W3C-20150513") == osadl_matrix.OSADLCompatibility.YES
    

    def test_curl_WTFPL(self):        
        assert osadl_matrix.get_compatibility("curl", "WTFPL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_curl_X11(self):        
        assert osadl_matrix.get_compatibility("curl", "X11") == osadl_matrix.OSADLCompatibility.YES
    

    def test_curl_XFree86_1_1(self):        
        assert osadl_matrix.get_compatibility("curl", "XFree86-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_curl_ZPL_2_0(self):        
        assert osadl_matrix.get_compatibility("curl", "ZPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_curl_Zlib(self):        
        assert osadl_matrix.get_compatibility("curl", "Zlib") == osadl_matrix.OSADLCompatibility.YES
    

    def test_curl_bzip2_1_0_5(self):        
        assert osadl_matrix.get_compatibility("curl", "bzip2-1.0.5") == osadl_matrix.OSADLCompatibility.YES
    

    def test_curl_bzip2_1_0_6(self):        
        assert osadl_matrix.get_compatibility("curl", "bzip2-1.0.6") == osadl_matrix.OSADLCompatibility.YES
    

    def test_curl_curl(self):        
        assert osadl_matrix.get_compatibility("curl", "curl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_curl_libtiff(self):        
        assert osadl_matrix.get_compatibility("curl", "libtiff") == osadl_matrix.OSADLCompatibility.YES
    

    def test_curl_zlib_acknowledgement(self):        
        assert osadl_matrix.get_compatibility("curl", "zlib-acknowledgement") == osadl_matrix.OSADLCompatibility.YES
    

    def test_libtiff_0BSD(self):        
        assert osadl_matrix.get_compatibility("libtiff", "0BSD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_libtiff_AFL_2_0(self):        
        assert osadl_matrix.get_compatibility("libtiff", "AFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_libtiff_AFL_2_1(self):        
        assert osadl_matrix.get_compatibility("libtiff", "AFL-2.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_libtiff_AFL_3_0(self):        
        assert osadl_matrix.get_compatibility("libtiff", "AFL-3.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_libtiff_AGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("libtiff", "AGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_libtiff_AGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("libtiff", "AGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_libtiff_Apache_1_0(self):        
        assert osadl_matrix.get_compatibility("libtiff", "Apache-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_libtiff_Apache_1_1(self):        
        assert osadl_matrix.get_compatibility("libtiff", "Apache-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_libtiff_Apache_2_0(self):        
        assert osadl_matrix.get_compatibility("libtiff", "Apache-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_libtiff_Artistic_1_0(self):        
        assert osadl_matrix.get_compatibility("libtiff", "Artistic-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_libtiff_Artistic_1_0_Perl(self):        
        assert osadl_matrix.get_compatibility("libtiff", "Artistic-1.0-Perl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_libtiff_Artistic_2_0(self):        
        assert osadl_matrix.get_compatibility("libtiff", "Artistic-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_libtiff_BSD_1_Clause(self):        
        assert osadl_matrix.get_compatibility("libtiff", "BSD-1-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_libtiff_BSD_2_Clause(self):        
        assert osadl_matrix.get_compatibility("libtiff", "BSD-2-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_libtiff_BSD_2_Clause_Patent(self):        
        assert osadl_matrix.get_compatibility("libtiff", "BSD-2-Clause-Patent") == osadl_matrix.OSADLCompatibility.YES
    

    def test_libtiff_BSD_3_Clause(self):        
        assert osadl_matrix.get_compatibility("libtiff", "BSD-3-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_libtiff_BSD_4_Clause(self):        
        assert osadl_matrix.get_compatibility("libtiff", "BSD-4-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_libtiff_BSD_4_Clause_UC(self):        
        assert osadl_matrix.get_compatibility("libtiff", "BSD-4-Clause-UC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_libtiff_BSD_Source_Code(self):        
        assert osadl_matrix.get_compatibility("libtiff", "BSD-Source-Code") == osadl_matrix.OSADLCompatibility.YES
    

    def test_libtiff_BSL_1_0(self):        
        assert osadl_matrix.get_compatibility("libtiff", "BSL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_libtiff_CC0_1_0(self):        
        assert osadl_matrix.get_compatibility("libtiff", "CC0-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_libtiff_CDDL_1_0(self):        
        assert osadl_matrix.get_compatibility("libtiff", "CDDL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_libtiff_CDDL_1_1(self):        
        assert osadl_matrix.get_compatibility("libtiff", "CDDL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_libtiff_CPL_1_0(self):        
        assert osadl_matrix.get_compatibility("libtiff", "CPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_libtiff_EFL_2_0(self):        
        assert osadl_matrix.get_compatibility("libtiff", "EFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_libtiff_EPL_1_0(self):        
        assert osadl_matrix.get_compatibility("libtiff", "EPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_libtiff_EPL_2_0(self):        
        assert osadl_matrix.get_compatibility("libtiff", "EPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_libtiff_EUPL_1_1(self):        
        assert osadl_matrix.get_compatibility("libtiff", "EUPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_libtiff_EUPL_1_2(self):        
        assert osadl_matrix.get_compatibility("libtiff", "EUPL-1.2") == osadl_matrix.OSADLCompatibility.NO
    

    def test_libtiff_FSFAP(self):        
        assert osadl_matrix.get_compatibility("libtiff", "FSFAP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_libtiff_FSFULLR(self):        
        assert osadl_matrix.get_compatibility("libtiff", "FSFULLR") == osadl_matrix.OSADLCompatibility.YES
    

    def test_libtiff_FTL(self):        
        assert osadl_matrix.get_compatibility("libtiff", "FTL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_libtiff_GPL_1_0_only(self):        
        assert osadl_matrix.get_compatibility("libtiff", "GPL-1.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_libtiff_GPL_1_0_or_later(self):        
        assert osadl_matrix.get_compatibility("libtiff", "GPL-1.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_libtiff_GPL_2_0_only(self):        
        assert osadl_matrix.get_compatibility("libtiff", "GPL-2.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_libtiff_GPL_2_0_only_WITH_Classpath_exception_2_0(self):        
        assert osadl_matrix.get_compatibility("libtiff", "GPL-2.0-only WITH Classpath-exception-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_libtiff_GPL_2_0_or_later(self):        
        assert osadl_matrix.get_compatibility("libtiff", "GPL-2.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_libtiff_GPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("libtiff", "GPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_libtiff_GPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("libtiff", "GPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_libtiff_HPND(self):        
        assert osadl_matrix.get_compatibility("libtiff", "HPND") == osadl_matrix.OSADLCompatibility.YES
    

    def test_libtiff_IBM_pibs(self):        
        assert osadl_matrix.get_compatibility("libtiff", "IBM-pibs") == osadl_matrix.OSADLCompatibility.YES
    

    def test_libtiff_ICU(self):        
        assert osadl_matrix.get_compatibility("libtiff", "ICU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_libtiff_IJG(self):        
        assert osadl_matrix.get_compatibility("libtiff", "IJG") == osadl_matrix.OSADLCompatibility.YES
    

    def test_libtiff_IPL_1_0(self):        
        assert osadl_matrix.get_compatibility("libtiff", "IPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_libtiff_ISC(self):        
        assert osadl_matrix.get_compatibility("libtiff", "ISC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_libtiff_Info_ZIP(self):        
        assert osadl_matrix.get_compatibility("libtiff", "Info-ZIP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_libtiff_LGPL_2_1_only(self):        
        assert osadl_matrix.get_compatibility("libtiff", "LGPL-2.1-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_libtiff_LGPL_2_1_or_later(self):        
        assert osadl_matrix.get_compatibility("libtiff", "LGPL-2.1-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_libtiff_LGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("libtiff", "LGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_libtiff_LGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("libtiff", "LGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_libtiff_Libpng(self):        
        assert osadl_matrix.get_compatibility("libtiff", "Libpng") == osadl_matrix.OSADLCompatibility.YES
    

    def test_libtiff_MIT(self):        
        assert osadl_matrix.get_compatibility("libtiff", "MIT") == osadl_matrix.OSADLCompatibility.YES
    

    def test_libtiff_MIT_CMU(self):        
        assert osadl_matrix.get_compatibility("libtiff", "MIT-CMU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_libtiff_MPL_1_1(self):        
        assert osadl_matrix.get_compatibility("libtiff", "MPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_libtiff_MPL_2_0(self):        
        assert osadl_matrix.get_compatibility("libtiff", "MPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_libtiff_MPL_2_0_no_copyleft_exception(self):        
        assert osadl_matrix.get_compatibility("libtiff", "MPL-2.0-no-copyleft-exception") == osadl_matrix.OSADLCompatibility.NO
    

    def test_libtiff_MS_PL(self):        
        assert osadl_matrix.get_compatibility("libtiff", "MS-PL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_libtiff_MS_RL(self):        
        assert osadl_matrix.get_compatibility("libtiff", "MS-RL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_libtiff_MirOS(self):        
        assert osadl_matrix.get_compatibility("libtiff", "MirOS") == osadl_matrix.OSADLCompatibility.YES
    

    def test_libtiff_NBPL_1_0(self):        
        assert osadl_matrix.get_compatibility("libtiff", "NBPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_libtiff_NTP(self):        
        assert osadl_matrix.get_compatibility("libtiff", "NTP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_libtiff_OSL_3_0(self):        
        assert osadl_matrix.get_compatibility("libtiff", "OSL-3.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_libtiff_OpenSSL(self):        
        assert osadl_matrix.get_compatibility("libtiff", "OpenSSL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_libtiff_PHP_3_01(self):        
        assert osadl_matrix.get_compatibility("libtiff", "PHP-3.01") == osadl_matrix.OSADLCompatibility.YES
    

    def test_libtiff_PostgreSQL(self):        
        assert osadl_matrix.get_compatibility("libtiff", "PostgreSQL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_libtiff_Python_2_0(self):        
        assert osadl_matrix.get_compatibility("libtiff", "Python-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_libtiff_Qhull(self):        
        assert osadl_matrix.get_compatibility("libtiff", "Qhull") == osadl_matrix.OSADLCompatibility.YES
    

    def test_libtiff_RSA_MD(self):        
        assert osadl_matrix.get_compatibility("libtiff", "RSA-MD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_libtiff_Sleepycat(self):        
        assert osadl_matrix.get_compatibility("libtiff", "Sleepycat") == osadl_matrix.OSADLCompatibility.NO
    

    def test_libtiff_SunPro(self):        
        assert osadl_matrix.get_compatibility("libtiff", "SunPro") == osadl_matrix.OSADLCompatibility.YES
    

    def test_libtiff_UPL_1_0(self):        
        assert osadl_matrix.get_compatibility("libtiff", "UPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_libtiff_Unicode_DFS_2015(self):        
        assert osadl_matrix.get_compatibility("libtiff", "Unicode-DFS-2015") == osadl_matrix.OSADLCompatibility.YES
    

    def test_libtiff_Unicode_DFS_2016(self):        
        assert osadl_matrix.get_compatibility("libtiff", "Unicode-DFS-2016") == osadl_matrix.OSADLCompatibility.YES
    

    def test_libtiff_Unlicense(self):        
        assert osadl_matrix.get_compatibility("libtiff", "Unlicense") == osadl_matrix.OSADLCompatibility.YES
    

    def test_libtiff_W3C(self):        
        assert osadl_matrix.get_compatibility("libtiff", "W3C") == osadl_matrix.OSADLCompatibility.YES
    

    def test_libtiff_W3C_19980720(self):        
        assert osadl_matrix.get_compatibility("libtiff", "W3C-19980720") == osadl_matrix.OSADLCompatibility.YES
    

    def test_libtiff_W3C_20150513(self):        
        assert osadl_matrix.get_compatibility("libtiff", "W3C-20150513") == osadl_matrix.OSADLCompatibility.YES
    

    def test_libtiff_WTFPL(self):        
        assert osadl_matrix.get_compatibility("libtiff", "WTFPL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_libtiff_X11(self):        
        assert osadl_matrix.get_compatibility("libtiff", "X11") == osadl_matrix.OSADLCompatibility.YES
    

    def test_libtiff_XFree86_1_1(self):        
        assert osadl_matrix.get_compatibility("libtiff", "XFree86-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_libtiff_ZPL_2_0(self):        
        assert osadl_matrix.get_compatibility("libtiff", "ZPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_libtiff_Zlib(self):        
        assert osadl_matrix.get_compatibility("libtiff", "Zlib") == osadl_matrix.OSADLCompatibility.YES
    

    def test_libtiff_bzip2_1_0_5(self):        
        assert osadl_matrix.get_compatibility("libtiff", "bzip2-1.0.5") == osadl_matrix.OSADLCompatibility.YES
    

    def test_libtiff_bzip2_1_0_6(self):        
        assert osadl_matrix.get_compatibility("libtiff", "bzip2-1.0.6") == osadl_matrix.OSADLCompatibility.YES
    

    def test_libtiff_curl(self):        
        assert osadl_matrix.get_compatibility("libtiff", "curl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_libtiff_libtiff(self):        
        assert osadl_matrix.get_compatibility("libtiff", "libtiff") == osadl_matrix.OSADLCompatibility.YES
    

    def test_libtiff_zlib_acknowledgement(self):        
        assert osadl_matrix.get_compatibility("libtiff", "zlib-acknowledgement") == osadl_matrix.OSADLCompatibility.YES
    

    def test_zlib_acknowledgement_0BSD(self):        
        assert osadl_matrix.get_compatibility("zlib-acknowledgement", "0BSD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_zlib_acknowledgement_AFL_2_0(self):        
        assert osadl_matrix.get_compatibility("zlib-acknowledgement", "AFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_zlib_acknowledgement_AFL_2_1(self):        
        assert osadl_matrix.get_compatibility("zlib-acknowledgement", "AFL-2.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_zlib_acknowledgement_AFL_3_0(self):        
        assert osadl_matrix.get_compatibility("zlib-acknowledgement", "AFL-3.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_zlib_acknowledgement_AGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("zlib-acknowledgement", "AGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_zlib_acknowledgement_AGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("zlib-acknowledgement", "AGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_zlib_acknowledgement_Apache_1_0(self):        
        assert osadl_matrix.get_compatibility("zlib-acknowledgement", "Apache-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_zlib_acknowledgement_Apache_1_1(self):        
        assert osadl_matrix.get_compatibility("zlib-acknowledgement", "Apache-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_zlib_acknowledgement_Apache_2_0(self):        
        assert osadl_matrix.get_compatibility("zlib-acknowledgement", "Apache-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_zlib_acknowledgement_Artistic_1_0(self):        
        assert osadl_matrix.get_compatibility("zlib-acknowledgement", "Artistic-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_zlib_acknowledgement_Artistic_1_0_Perl(self):        
        assert osadl_matrix.get_compatibility("zlib-acknowledgement", "Artistic-1.0-Perl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_zlib_acknowledgement_Artistic_2_0(self):        
        assert osadl_matrix.get_compatibility("zlib-acknowledgement", "Artistic-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_zlib_acknowledgement_BSD_1_Clause(self):        
        assert osadl_matrix.get_compatibility("zlib-acknowledgement", "BSD-1-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_zlib_acknowledgement_BSD_2_Clause(self):        
        assert osadl_matrix.get_compatibility("zlib-acknowledgement", "BSD-2-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_zlib_acknowledgement_BSD_2_Clause_Patent(self):        
        assert osadl_matrix.get_compatibility("zlib-acknowledgement", "BSD-2-Clause-Patent") == osadl_matrix.OSADLCompatibility.YES
    

    def test_zlib_acknowledgement_BSD_3_Clause(self):        
        assert osadl_matrix.get_compatibility("zlib-acknowledgement", "BSD-3-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_zlib_acknowledgement_BSD_4_Clause(self):        
        assert osadl_matrix.get_compatibility("zlib-acknowledgement", "BSD-4-Clause") == osadl_matrix.OSADLCompatibility.YES
    

    def test_zlib_acknowledgement_BSD_4_Clause_UC(self):        
        assert osadl_matrix.get_compatibility("zlib-acknowledgement", "BSD-4-Clause-UC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_zlib_acknowledgement_BSD_Source_Code(self):        
        assert osadl_matrix.get_compatibility("zlib-acknowledgement", "BSD-Source-Code") == osadl_matrix.OSADLCompatibility.YES
    

    def test_zlib_acknowledgement_BSL_1_0(self):        
        assert osadl_matrix.get_compatibility("zlib-acknowledgement", "BSL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_zlib_acknowledgement_CC0_1_0(self):        
        assert osadl_matrix.get_compatibility("zlib-acknowledgement", "CC0-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_zlib_acknowledgement_CDDL_1_0(self):        
        assert osadl_matrix.get_compatibility("zlib-acknowledgement", "CDDL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_zlib_acknowledgement_CDDL_1_1(self):        
        assert osadl_matrix.get_compatibility("zlib-acknowledgement", "CDDL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_zlib_acknowledgement_CPL_1_0(self):        
        assert osadl_matrix.get_compatibility("zlib-acknowledgement", "CPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_zlib_acknowledgement_EFL_2_0(self):        
        assert osadl_matrix.get_compatibility("zlib-acknowledgement", "EFL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_zlib_acknowledgement_EPL_1_0(self):        
        assert osadl_matrix.get_compatibility("zlib-acknowledgement", "EPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_zlib_acknowledgement_EPL_2_0(self):        
        assert osadl_matrix.get_compatibility("zlib-acknowledgement", "EPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_zlib_acknowledgement_EUPL_1_1(self):        
        assert osadl_matrix.get_compatibility("zlib-acknowledgement", "EUPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_zlib_acknowledgement_EUPL_1_2(self):        
        assert osadl_matrix.get_compatibility("zlib-acknowledgement", "EUPL-1.2") == osadl_matrix.OSADLCompatibility.NO
    

    def test_zlib_acknowledgement_FSFAP(self):        
        assert osadl_matrix.get_compatibility("zlib-acknowledgement", "FSFAP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_zlib_acknowledgement_FSFULLR(self):        
        assert osadl_matrix.get_compatibility("zlib-acknowledgement", "FSFULLR") == osadl_matrix.OSADLCompatibility.YES
    

    def test_zlib_acknowledgement_FTL(self):        
        assert osadl_matrix.get_compatibility("zlib-acknowledgement", "FTL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_zlib_acknowledgement_GPL_1_0_only(self):        
        assert osadl_matrix.get_compatibility("zlib-acknowledgement", "GPL-1.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_zlib_acknowledgement_GPL_1_0_or_later(self):        
        assert osadl_matrix.get_compatibility("zlib-acknowledgement", "GPL-1.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_zlib_acknowledgement_GPL_2_0_only(self):        
        assert osadl_matrix.get_compatibility("zlib-acknowledgement", "GPL-2.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_zlib_acknowledgement_GPL_2_0_only_WITH_Classpath_exception_2_0(self):        
        assert osadl_matrix.get_compatibility("zlib-acknowledgement", "GPL-2.0-only WITH Classpath-exception-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_zlib_acknowledgement_GPL_2_0_or_later(self):        
        assert osadl_matrix.get_compatibility("zlib-acknowledgement", "GPL-2.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_zlib_acknowledgement_GPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("zlib-acknowledgement", "GPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_zlib_acknowledgement_GPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("zlib-acknowledgement", "GPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_zlib_acknowledgement_HPND(self):        
        assert osadl_matrix.get_compatibility("zlib-acknowledgement", "HPND") == osadl_matrix.OSADLCompatibility.YES
    

    def test_zlib_acknowledgement_IBM_pibs(self):        
        assert osadl_matrix.get_compatibility("zlib-acknowledgement", "IBM-pibs") == osadl_matrix.OSADLCompatibility.YES
    

    def test_zlib_acknowledgement_ICU(self):        
        assert osadl_matrix.get_compatibility("zlib-acknowledgement", "ICU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_zlib_acknowledgement_IJG(self):        
        assert osadl_matrix.get_compatibility("zlib-acknowledgement", "IJG") == osadl_matrix.OSADLCompatibility.YES
    

    def test_zlib_acknowledgement_IPL_1_0(self):        
        assert osadl_matrix.get_compatibility("zlib-acknowledgement", "IPL-1.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_zlib_acknowledgement_ISC(self):        
        assert osadl_matrix.get_compatibility("zlib-acknowledgement", "ISC") == osadl_matrix.OSADLCompatibility.YES
    

    def test_zlib_acknowledgement_Info_ZIP(self):        
        assert osadl_matrix.get_compatibility("zlib-acknowledgement", "Info-ZIP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_zlib_acknowledgement_LGPL_2_1_only(self):        
        assert osadl_matrix.get_compatibility("zlib-acknowledgement", "LGPL-2.1-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_zlib_acknowledgement_LGPL_2_1_or_later(self):        
        assert osadl_matrix.get_compatibility("zlib-acknowledgement", "LGPL-2.1-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_zlib_acknowledgement_LGPL_3_0_only(self):        
        assert osadl_matrix.get_compatibility("zlib-acknowledgement", "LGPL-3.0-only") == osadl_matrix.OSADLCompatibility.NO
    

    def test_zlib_acknowledgement_LGPL_3_0_or_later(self):        
        assert osadl_matrix.get_compatibility("zlib-acknowledgement", "LGPL-3.0-or-later") == osadl_matrix.OSADLCompatibility.NO
    

    def test_zlib_acknowledgement_Libpng(self):        
        assert osadl_matrix.get_compatibility("zlib-acknowledgement", "Libpng") == osadl_matrix.OSADLCompatibility.YES
    

    def test_zlib_acknowledgement_MIT(self):        
        assert osadl_matrix.get_compatibility("zlib-acknowledgement", "MIT") == osadl_matrix.OSADLCompatibility.YES
    

    def test_zlib_acknowledgement_MIT_CMU(self):        
        assert osadl_matrix.get_compatibility("zlib-acknowledgement", "MIT-CMU") == osadl_matrix.OSADLCompatibility.YES
    

    def test_zlib_acknowledgement_MPL_1_1(self):        
        assert osadl_matrix.get_compatibility("zlib-acknowledgement", "MPL-1.1") == osadl_matrix.OSADLCompatibility.NO
    

    def test_zlib_acknowledgement_MPL_2_0(self):        
        assert osadl_matrix.get_compatibility("zlib-acknowledgement", "MPL-2.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_zlib_acknowledgement_MPL_2_0_no_copyleft_exception(self):        
        assert osadl_matrix.get_compatibility("zlib-acknowledgement", "MPL-2.0-no-copyleft-exception") == osadl_matrix.OSADLCompatibility.NO
    

    def test_zlib_acknowledgement_MS_PL(self):        
        assert osadl_matrix.get_compatibility("zlib-acknowledgement", "MS-PL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_zlib_acknowledgement_MS_RL(self):        
        assert osadl_matrix.get_compatibility("zlib-acknowledgement", "MS-RL") == osadl_matrix.OSADLCompatibility.NO
    

    def test_zlib_acknowledgement_MirOS(self):        
        assert osadl_matrix.get_compatibility("zlib-acknowledgement", "MirOS") == osadl_matrix.OSADLCompatibility.YES
    

    def test_zlib_acknowledgement_NBPL_1_0(self):        
        assert osadl_matrix.get_compatibility("zlib-acknowledgement", "NBPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_zlib_acknowledgement_NTP(self):        
        assert osadl_matrix.get_compatibility("zlib-acknowledgement", "NTP") == osadl_matrix.OSADLCompatibility.YES
    

    def test_zlib_acknowledgement_OSL_3_0(self):        
        assert osadl_matrix.get_compatibility("zlib-acknowledgement", "OSL-3.0") == osadl_matrix.OSADLCompatibility.NO
    

    def test_zlib_acknowledgement_OpenSSL(self):        
        assert osadl_matrix.get_compatibility("zlib-acknowledgement", "OpenSSL") == osadl_matrix.OSADLCompatibility.UNKNOWN
    

    def test_zlib_acknowledgement_PHP_3_01(self):        
        assert osadl_matrix.get_compatibility("zlib-acknowledgement", "PHP-3.01") == osadl_matrix.OSADLCompatibility.YES
    

    def test_zlib_acknowledgement_PostgreSQL(self):        
        assert osadl_matrix.get_compatibility("zlib-acknowledgement", "PostgreSQL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_zlib_acknowledgement_Python_2_0(self):        
        assert osadl_matrix.get_compatibility("zlib-acknowledgement", "Python-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_zlib_acknowledgement_Qhull(self):        
        assert osadl_matrix.get_compatibility("zlib-acknowledgement", "Qhull") == osadl_matrix.OSADLCompatibility.YES
    

    def test_zlib_acknowledgement_RSA_MD(self):        
        assert osadl_matrix.get_compatibility("zlib-acknowledgement", "RSA-MD") == osadl_matrix.OSADLCompatibility.YES
    

    def test_zlib_acknowledgement_Sleepycat(self):        
        assert osadl_matrix.get_compatibility("zlib-acknowledgement", "Sleepycat") == osadl_matrix.OSADLCompatibility.NO
    

    def test_zlib_acknowledgement_SunPro(self):        
        assert osadl_matrix.get_compatibility("zlib-acknowledgement", "SunPro") == osadl_matrix.OSADLCompatibility.YES
    

    def test_zlib_acknowledgement_UPL_1_0(self):        
        assert osadl_matrix.get_compatibility("zlib-acknowledgement", "UPL-1.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_zlib_acknowledgement_Unicode_DFS_2015(self):        
        assert osadl_matrix.get_compatibility("zlib-acknowledgement", "Unicode-DFS-2015") == osadl_matrix.OSADLCompatibility.YES
    

    def test_zlib_acknowledgement_Unicode_DFS_2016(self):        
        assert osadl_matrix.get_compatibility("zlib-acknowledgement", "Unicode-DFS-2016") == osadl_matrix.OSADLCompatibility.YES
    

    def test_zlib_acknowledgement_Unlicense(self):        
        assert osadl_matrix.get_compatibility("zlib-acknowledgement", "Unlicense") == osadl_matrix.OSADLCompatibility.YES
    

    def test_zlib_acknowledgement_W3C(self):        
        assert osadl_matrix.get_compatibility("zlib-acknowledgement", "W3C") == osadl_matrix.OSADLCompatibility.YES
    

    def test_zlib_acknowledgement_W3C_19980720(self):        
        assert osadl_matrix.get_compatibility("zlib-acknowledgement", "W3C-19980720") == osadl_matrix.OSADLCompatibility.YES
    

    def test_zlib_acknowledgement_W3C_20150513(self):        
        assert osadl_matrix.get_compatibility("zlib-acknowledgement", "W3C-20150513") == osadl_matrix.OSADLCompatibility.YES
    

    def test_zlib_acknowledgement_WTFPL(self):        
        assert osadl_matrix.get_compatibility("zlib-acknowledgement", "WTFPL") == osadl_matrix.OSADLCompatibility.YES
    

    def test_zlib_acknowledgement_X11(self):        
        assert osadl_matrix.get_compatibility("zlib-acknowledgement", "X11") == osadl_matrix.OSADLCompatibility.YES
    

    def test_zlib_acknowledgement_XFree86_1_1(self):        
        assert osadl_matrix.get_compatibility("zlib-acknowledgement", "XFree86-1.1") == osadl_matrix.OSADLCompatibility.YES
    

    def test_zlib_acknowledgement_ZPL_2_0(self):        
        assert osadl_matrix.get_compatibility("zlib-acknowledgement", "ZPL-2.0") == osadl_matrix.OSADLCompatibility.YES
    

    def test_zlib_acknowledgement_Zlib(self):        
        assert osadl_matrix.get_compatibility("zlib-acknowledgement", "Zlib") == osadl_matrix.OSADLCompatibility.YES
    

    def test_zlib_acknowledgement_bzip2_1_0_5(self):        
        assert osadl_matrix.get_compatibility("zlib-acknowledgement", "bzip2-1.0.5") == osadl_matrix.OSADLCompatibility.YES
    

    def test_zlib_acknowledgement_bzip2_1_0_6(self):        
        assert osadl_matrix.get_compatibility("zlib-acknowledgement", "bzip2-1.0.6") == osadl_matrix.OSADLCompatibility.YES
    

    def test_zlib_acknowledgement_curl(self):        
        assert osadl_matrix.get_compatibility("zlib-acknowledgement", "curl") == osadl_matrix.OSADLCompatibility.YES
    

    def test_zlib_acknowledgement_libtiff(self):        
        assert osadl_matrix.get_compatibility("zlib-acknowledgement", "libtiff") == osadl_matrix.OSADLCompatibility.YES
    

    def test_zlib_acknowledgement_zlib_acknowledgement(self):        
        assert osadl_matrix.get_compatibility("zlib-acknowledgement", "zlib-acknowledgement") == osadl_matrix.OSADLCompatibility.YES
    
